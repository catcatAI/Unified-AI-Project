name: 测试自动化流程
permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点执行

jobs:
  test-suite:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r apps/backend/requirements.txt
        pip install -r apps/backend/requirements-dev.txt
    
    - name: 运行单元测试
      run: |
        cd apps/backend
        python -m pytest tests/core_ai/memory/test_ham_memory_manager.py -v --cov=src/core_ai/memory --cov-report=xml
    
    - name: 运行集成测试
      run: |
        cd apps/backend
        python -m pytest tests/integration/ -v --cov=src --cov-report=xml
    
    - name: 运行端到端测试
      run: |
        cd apps/backend
        python -m pytest tests/e2e/ -v
    
    - name: 上传覆盖率报告
      uses: codecov/codecov-action@v5
      with:
        file: ./apps/backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: 生成测试报告
      run: |
        cd apps/backend
        python ../../scripts/test_coverage_monitor.py --format json --check-thresholds
    
    - name: 检查测试结果
      run: |
        # 如果测试失败，输出错误信息
        if [ $? -ne 0 ]; then
          echo "测试执行失败"
          exit 1
        fi

  test-quality-gate:
    runs-on: ubuntu-latest
    needs: test-suite
    if: always()
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 检查测试覆盖率
      run: |
        cd apps/backend
        # 检查总体覆盖率是否达到85%
        python ../../scripts/test_coverage_monitor.py --check-thresholds
        
    - name: 生成质量报告
      run: |
        echo "测试质量检查完成"
        echo "覆盖率阈值检查通过"
        
  notification:
    runs-on: ubuntu-latest
    needs: [test-suite, test-quality-gate]
    
    steps:
    - name: 发送通知
      if: failure()
      run: |
        echo "测试执行失败，请检查GitHub Actions日志"
        
    - name: 发送成功通知
      if: success()
      run: |
        echo "所有测试通过，质量检查完成"