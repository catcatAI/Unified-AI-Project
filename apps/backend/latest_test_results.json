{"created": 1760951869.299427, "duration": 41.42787265777588, "exitcode": 2, "root": "D:\\Projects\\Unified-AI-Project\\apps\\backend", "environment": {}, "summary": {"total": 0, "collected": 20}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Package"}]}, {"nodeid": "backup", "outcome": "passed", "result": []}, {"nodeid": "chroma_db", "outcome": "passed", "result": []}, {"nodeid": "chromadb_local", "outcome": "passed", "result": []}, {"nodeid": "configs/formula_configs", "outcome": "passed", "result": []}, {"nodeid": "configs/personality_profiles", "outcome": "passed", "result": []}, {"nodeid": "configs", "outcome": "passed", "result": [{"nodeid": "configs/formula_configs", "type": "Dir"}, {"nodeid": "configs/personality_profiles", "type": "Dir"}]}, {"nodeid": "context_storage", "outcome": "passed", "result": []}, {"nodeid": "data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "data/chat_histories", "outcome": "passed", "result": []}, {"nodeid": "data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "data/firebase", "outcome": "passed", "result": []}, {"nodeid": "data/game_data", "outcome": "passed", "result": []}, {"nodeid": "data/knowledge_bases", "outcome": "passed", "result": []}, {"nodeid": "data/logs", "outcome": "passed", "result": []}, {"nodeid": "data/model_cache", "outcome": "passed", "result": []}, {"nodeid": "data/models", "outcome": "passed", "result": []}, {"nodeid": "data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "outcome": "passed", "result": []}, {"nodeid": "data/processed_data/chroma_db", "outcome": "passed", "result": [{"nodeid": "data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "type": "Dir"}]}, {"nodeid": "data/processed_data", "outcome": "passed", "result": [{"nodeid": "data/processed_data/chroma_db", "type": "Dir"}]}, {"nodeid": "data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "data/runtime_data/data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "data/runtime_data/data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "data/runtime_data/data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/data", "outcome": "passed", "result": [{"nodeid": "data/runtime_data/data/atlassian_cache", "type": "Dir"}, {"nodeid": "data/runtime_data/data/demo_learning", "type": "Dir"}, {"nodeid": "data/runtime_data/data/fallback_comm", "type": "Dir"}, {"nodeid": "data/runtime_data/data/task_queue", "type": "Dir"}]}, {"nodeid": "data/runtime_data/test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data/test_data", "outcome": "passed", "result": [{"nodeid": "data/runtime_data/test_data/task_queue", "type": "Dir"}]}, {"nodeid": "data/runtime_data/test_output_data", "outcome": "passed", "result": []}, {"nodeid": "data/runtime_data", "outcome": "passed", "result": [{"nodeid": "data/runtime_data/data", "type": "Dir"}, {"nodeid": "data/runtime_data/test_data", "type": "Dir"}, {"nodeid": "data/runtime_data/test_output_data", "type": "Dir"}]}, {"nodeid": "data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "data", "outcome": "passed", "result": [{"nodeid": "data/atlassian_cache", "type": "Dir"}, {"nodeid": "data/chat_histories", "type": "Dir"}, {"nodeid": "data/demo_learning", "type": "Dir"}, {"nodeid": "data/fallback_comm", "type": "Dir"}, {"nodeid": "data/firebase", "type": "Dir"}, {"nodeid": "data/game_data", "type": "Dir"}, {"nodeid": "data/knowledge_bases", "type": "Dir"}, {"nodeid": "data/logs", "type": "Dir"}, {"nodeid": "data/model_cache", "type": "Dir"}, {"nodeid": "data/models", "type": "Dir"}, {"nodeid": "data/processed_data", "type": "Dir"}, {"nodeid": "data/raw_datasets", "type": "Dir"}, {"nodeid": "data/runtime_data", "type": "Dir"}, {"nodeid": "data/task_queue", "type": "Dir"}]}, {"nodeid": "debug", "outcome": "passed", "result": []}, {"nodeid": "docs", "outcome": "passed", "result": []}, {"nodeid": "htmlcov", "outcome": "passed", "result": []}, {"nodeid": "logs", "outcome": "passed", "result": []}, {"nodeid": "model_cache", "outcome": "passed", "result": []}, {"nodeid": "reports", "outcome": "passed", "result": []}, {"nodeid": "schemas", "outcome": "passed", "result": []}, {"nodeid": "scripts", "outcome": "passed", "result": []}, {"nodeid": "src/agents/examples", "outcome": "passed", "result": []}, {"nodeid": "src/agents", "outcome": "passed", "result": [{"nodeid": "src/agents/examples", "type": "Dir"}]}, {"nodeid": "src/ai/agents/base", "outcome": "passed", "result": []}, {"nodeid": "src/ai/agents/specialized", "outcome": "passed", "result": []}, {"nodeid": "src/ai/agents", "outcome": "passed", "result": [{"nodeid": "src/ai/agents/base", "type": "Package"}, {"nodeid": "src/ai/agents/specialized", "type": "Dir"}]}, {"nodeid": "src/ai/alignment", "outcome": "passed", "result": []}, {"nodeid": "src/ai/audio", "outcome": "passed", "result": []}, {"nodeid": "src/ai/code_understanding", "outcome": "passed", "result": []}, {"nodeid": "src/ai/compression", "outcome": "passed", "result": []}, {"nodeid": "src/ai/concept_models", "outcome": "passed", "result": []}, {"nodeid": "src/ai/context/storage", "outcome": "passed", "result": []}, {"nodeid": "src/ai/context", "outcome": "passed", "result": [{"nodeid": "src/ai/context/storage", "type": "Dir"}]}, {"nodeid": "src/ai/crisis", "outcome": "passed", "result": []}, {"nodeid": "src/ai/deep_mapper", "outcome": "passed", "result": []}, {"nodeid": "src/ai/dialogue", "outcome": "passed", "result": []}, {"nodeid": "src/ai/discovery", "outcome": "passed", "result": []}, {"nodeid": "src/ai/distributed", "outcome": "passed", "result": []}, {"nodeid": "src/ai/emotion", "outcome": "passed", "result": []}, {"nodeid": "src/ai/evaluation", "outcome": "passed", "result": []}, {"nodeid": "src/ai/examples", "outcome": "passed", "result": []}, {"nodeid": "src/ai/formula_engine", "outcome": "passed", "result": []}, {"nodeid": "src/ai/integration", "outcome": "passed", "result": []}, {"nodeid": "src/ai/knowledge_graph", "outcome": "passed", "result": []}, {"nodeid": "src/ai/language_models", "outcome": "passed", "result": []}, {"nodeid": "src/ai/learning", "outcome": "passed", "result": []}, {"nodeid": "src/ai/lis", "outcome": "passed", "result": []}, {"nodeid": "src/ai/memory", "outcome": "passed", "result": []}, {"nodeid": "src/ai/meta", "outcome": "passed", "result": []}, {"nodeid": "src/ai/meta_formulas", "outcome": "passed", "result": []}, {"nodeid": "src/ai/multimodal", "outcome": "passed", "result": []}, {"nodeid": "src/ai/ops", "outcome": "passed", "result": []}, {"nodeid": "src/ai/optimization", "outcome": "passed", "result": []}, {"nodeid": "src/ai/personality", "outcome": "passed", "result": []}, {"nodeid": "src/ai/rag", "outcome": "passed", "result": []}, {"nodeid": "src/ai/reasoning", "outcome": "passed", "result": []}, {"nodeid": "src/ai/service_discovery", "outcome": "passed", "result": []}, {"nodeid": "src/ai/symbolic_space", "outcome": "passed", "result": []}, {"nodeid": "src/ai/test_utils", "outcome": "passed", "result": []}, {"nodeid": "src/ai/time", "outcome": "passed", "result": []}, {"nodeid": "src/ai/token", "outcome": "passed", "result": []}, {"nodeid": "src/ai/translation", "outcome": "passed", "result": []}, {"nodeid": "src/ai/trust", "outcome": "passed", "result": []}, {"nodeid": "src/ai/trust_manager", "outcome": "passed", "result": []}, {"nodeid": "src/ai/world_model", "outcome": "passed", "result": []}, {"nodeid": "src/ai", "outcome": "passed", "result": [{"nodeid": "src/ai/agents", "type": "Package"}, {"nodeid": "src/ai/alignment", "type": "Package"}, {"nodeid": "src/ai/audio", "type": "Dir"}, {"nodeid": "src/ai/code_understanding", "type": "Package"}, {"nodeid": "src/ai/compression", "type": "Package"}, {"nodeid": "src/ai/concept_models", "type": "Package"}, {"nodeid": "src/ai/context", "type": "Package"}, {"nodeid": "src/ai/crisis", "type": "Dir"}, {"nodeid": "src/ai/deep_mapper", "type": "Package"}, {"nodeid": "src/ai/dialogue", "type": "Package"}, {"nodeid": "src/ai/discovery", "type": "Package"}, {"nodeid": "src/ai/distributed", "type": "Package"}, {"nodeid": "src/ai/emotion", "type": "Dir"}, {"nodeid": "src/ai/evaluation", "type": "Package"}, {"nodeid": "src/ai/examples", "type": "Dir"}, {"nodeid": "src/ai/formula_engine", "type": "Package"}, {"nodeid": "src/ai/integration", "type": "Dir"}, {"nodeid": "src/ai/knowledge_graph", "type": "Dir"}, {"nodeid": "src/ai/language_models", "type": "Package"}, {"nodeid": "src/ai/learning", "type": "Package"}, {"nodeid": "src/ai/lis", "type": "Package"}, {"nodeid": "src/ai/memory", "type": "Package"}, {"nodeid": "src/ai/meta", "type": "Dir"}, {"nodeid": "src/ai/meta_formulas", "type": "Package"}, {"nodeid": "src/ai/multimodal", "type": "Dir"}, {"nodeid": "src/ai/ops", "type": "Package"}, {"nodeid": "src/ai/optimization", "type": "Dir"}, {"nodeid": "src/ai/personality", "type": "Package"}, {"nodeid": "src/ai/rag", "type": "Dir"}, {"nodeid": "src/ai/reasoning", "type": "Dir"}, {"nodeid": "src/ai/service_discovery", "type": "Package"}, {"nodeid": "src/ai/symbolic_space", "type": "Dir"}, {"nodeid": "src/ai/test_utils", "type": "Dir"}, {"nodeid": "src/ai/time", "type": "Dir"}, {"nodeid": "src/ai/token", "type": "Dir"}, {"nodeid": "src/ai/translation", "type": "Dir"}, {"nodeid": "src/ai/trust", "type": "Package"}, {"nodeid": "src/ai/trust_manager", "type": "Package"}, {"nodeid": "src/ai/world_model", "type": "Dir"}]}, {"nodeid": "src/api/routes", "outcome": "passed", "result": []}, {"nodeid": "src/api", "outcome": "passed", "result": [{"nodeid": "src/api/routes", "type": "Dir"}]}, {"nodeid": "src/compat", "outcome": "passed", "result": []}, {"nodeid": "src/configs", "outcome": "passed", "result": []}, {"nodeid": "src/core/cache", "outcome": "passed", "result": []}, {"nodeid": "src/core/cognitive", "outcome": "passed", "result": []}, {"nodeid": "src/core/config", "outcome": "passed", "result": []}, {"nodeid": "src/core/configs", "outcome": "passed", "result": []}, {"nodeid": "src/core/creativity", "outcome": "passed", "result": []}, {"nodeid": "src/core/data", "outcome": "passed", "result": []}, {"nodeid": "src/core/database", "outcome": "passed", "result": []}, {"nodeid": "src/core/error", "outcome": "passed", "result": []}, {"nodeid": "src/core/ethics", "outcome": "passed", "result": []}, {"nodeid": "src/core/evolution", "outcome": "passed", "result": []}, {"nodeid": "src/core/fusion", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp/bridge", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp/external", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp/fallback", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp/internal", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp/utils", "outcome": "passed", "result": []}, {"nodeid": "src/core/hsp", "outcome": "passed", "result": [{"nodeid": "src/core/hsp/bridge", "type": "Package"}, {"nodeid": "src/core/hsp/external", "type": "Package"}, {"nodeid": "src/core/hsp/fallback", "type": "Dir"}, {"nodeid": "src/core/hsp/internal", "type": "Package"}, {"nodeid": "src/core/hsp/utils", "type": "Package"}]}, {"nodeid": "src/core/io", "outcome": "passed", "result": []}, {"nodeid": "src/core/knowledge", "outcome": "passed", "result": []}, {"nodeid": "src/core/logging", "outcome": "passed", "result": []}, {"nodeid": "src/core/managers", "outcome": "passed", "result": []}, {"nodeid": "src/core/memory", "outcome": "passed", "result": []}, {"nodeid": "src/core/metacognition", "outcome": "passed", "result": []}, {"nodeid": "src/core/monitoring", "outcome": "passed", "result": []}, {"nodeid": "src/core/security", "outcome": "passed", "result": []}, {"nodeid": "src/core/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "src/core/services", "outcome": "passed", "result": [{"nodeid": "src/core/services/node_services", "type": "Dir"}]}, {"nodeid": "src/core/shared/types", "outcome": "passed", "result": []}, {"nodeid": "src/core/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "src/core/shared", "outcome": "passed", "result": [{"nodeid": "src/core/shared/types", "type": "Package"}, {"nodeid": "src/core/shared/utils", "type": "Dir"}]}, {"nodeid": "src/core/sync", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "src/core/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "src/core/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "src/core/tools", "outcome": "passed", "result": [{"nodeid": "src/core/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "src/core/tools/logic_model", "type": "Package"}, {"nodeid": "src/core/tools/math_model", "type": "Package"}, {"nodeid": "src/core/tools/parameter_extractor", "type": "Package"}, {"nodeid": "src/core/tools/translation_model", "type": "Package"}]}, {"nodeid": "src/core", "outcome": "passed", "result": [{"nodeid": "src/core/cache", "type": "Dir"}, {"nodeid": "src/core/cognitive", "type": "Dir"}, {"nodeid": "src/core/config", "type": "Dir"}, {"nodeid": "src/core/configs", "type": "Dir"}, {"nodeid": "src/core/creativity", "type": "Dir"}, {"nodeid": "src/core/data", "type": "Dir"}, {"nodeid": "src/core/database", "type": "Dir"}, {"nodeid": "src/core/error", "type": "Dir"}, {"nodeid": "src/core/ethics", "type": "Dir"}, {"nodeid": "src/core/evolution", "type": "Dir"}, {"nodeid": "src/core/fusion", "type": "Dir"}, {"nodeid": "src/core/hsp", "type": "Package"}, {"nodeid": "src/core/io", "type": "Dir"}, {"nodeid": "src/core/knowledge", "type": "Dir"}, {"nodeid": "src/core/logging", "type": "Dir"}, {"nodeid": "src/core/managers", "type": "Dir"}, {"nodeid": "src/core/memory", "type": "Dir"}, {"nodeid": "src/core/metacognition", "type": "Dir"}, {"nodeid": "src/core/monitoring", "type": "Dir"}, {"nodeid": "src/core/security", "type": "Dir"}, {"nodeid": "src/core/services", "type": "Package"}, {"nodeid": "src/core/shared", "type": "Package"}, {"nodeid": "src/core/sync", "type": "Dir"}, {"nodeid": "src/core/tools", "type": "Package"}]}, {"nodeid": "src/creation", "outcome": "passed", "result": []}, {"nodeid": "src/data/models", "outcome": "passed", "result": []}, {"nodeid": "src/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "src/data", "outcome": "passed", "result": [{"nodeid": "src/data/models", "type": "Dir"}, {"nodeid": "src/data/raw_datasets", "type": "Dir"}]}, {"nodeid": "src/docs/technical_design", "outcome": "passed", "result": []}, {"nodeid": "src/docs", "outcome": "passed", "result": [{"nodeid": "src/docs/technical_design", "type": "Dir"}]}, {"nodeid": "src/economy", "outcome": "passed", "result": []}, {"nodeid": "src/evaluation", "outcome": "passed", "result": []}, {"nodeid": "src/fragmenta", "outcome": "passed", "result": []}, {"nodeid": "src/game/assets/images/backgrounds", "outcome": "passed", "result": []}, {"nodeid": "src/game/assets/images/portraits", "outcome": "passed", "result": []}, {"nodeid": "src/game/assets/images", "outcome": "passed", "result": [{"nodeid": "src/game/assets/images/backgrounds", "type": "Dir"}, {"nodeid": "src/game/assets/images/portraits", "type": "Dir"}]}, {"nodeid": "src/game/assets/sprites/characters", "outcome": "passed", "result": []}, {"nodeid": "src/game/assets/sprites/icons", "outcome": "passed", "result": []}, {"nodeid": "src/game/assets/sprites", "outcome": "passed", "result": [{"nodeid": "src/game/assets/sprites/characters", "type": "Dir"}, {"nodeid": "src/game/assets/sprites/icons", "type": "Dir"}]}, {"nodeid": "src/game/assets", "outcome": "passed", "result": [{"nodeid": "src/game/assets/images", "type": "Dir"}, {"nodeid": "src/game/assets/sprites", "type": "Dir"}]}, {"nodeid": "src/game/scenes", "outcome": "passed", "result": []}, {"nodeid": "src/game", "outcome": "passed", "result": [{"nodeid": "src/game/assets", "type": "Dir"}, {"nodeid": "src/game/scenes", "type": "Dir"}]}, {"nodeid": "src/integrations", "outcome": "passed", "result": []}, {"nodeid": "src/interfaces", "outcome": "passed", "result": []}, {"nodeid": "src/logs/self_maintenance", "outcome": "passed", "result": []}, {"nodeid": "src/logs", "outcome": "passed", "result": [{"nodeid": "src/logs/self_maintenance", "type": "Dir"}]}, {"nodeid": "src/managers", "outcome": "passed", "result": []}, {"nodeid": "src/mcp/fallback", "outcome": "passed", "result": []}, {"nodeid": "src/mcp", "outcome": "passed", "result": [{"nodeid": "src/mcp/fallback", "type": "Package"}]}, {"nodeid": "src/modules_fragmenta", "outcome": "passed", "result": []}, {"nodeid": "src/monitoring", "outcome": "passed", "result": []}, {"nodeid": "src/optimization", "outcome": "passed", "result": []}, {"nodeid": "src/pet", "outcome": "passed", "result": []}, {"nodeid": "src/search", "outcome": "passed", "result": []}, {"nodeid": "src/security", "outcome": "passed", "result": []}, {"nodeid": "src/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "src/services", "outcome": "passed", "result": [{"nodeid": "src/services/node_services", "type": "Dir"}]}, {"nodeid": "src/shared/types", "outcome": "passed", "result": []}, {"nodeid": "src/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "src/shared", "outcome": "passed", "result": [{"nodeid": "src/shared/types", "type": "Package"}, {"nodeid": "src/shared/utils", "type": "Package"}]}, {"nodeid": "src/stubs", "outcome": "passed", "result": []}, {"nodeid": "src/system", "outcome": "passed", "result": []}, {"nodeid": "src/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "src/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "src/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "src/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "src/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "src/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "src/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "src/tools", "outcome": "passed", "result": [{"nodeid": "src/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "src/tools/logic_model", "type": "Package"}, {"nodeid": "src/tools/math_model", "type": "Package"}, {"nodeid": "src/tools/parameter_extractor", "type": "Package"}, {"nodeid": "src/tools/translation_model", "type": "Package"}]}, {"nodeid": "src/utils", "outcome": "passed", "result": []}, {"nodeid": "src", "outcome": "passed", "result": [{"nodeid": "src/agents", "type": "Dir"}, {"nodeid": "src/ai", "type": "Dir"}, {"nodeid": "src/api", "type": "Package"}, {"nodeid": "src/compat", "type": "Package"}, {"nodeid": "src/configs", "type": "Dir"}, {"nodeid": "src/core", "type": "Dir"}, {"nodeid": "src/creation", "type": "Dir"}, {"nodeid": "src/data", "type": "Dir"}, {"nodeid": "src/docs", "type": "Dir"}, {"nodeid": "src/economy", "type": "Package"}, {"nodeid": "src/evaluation", "type": "Dir"}, {"nodeid": "src/fragmenta", "type": "Package"}, {"nodeid": "src/game", "type": "Package"}, {"nodeid": "src/integrations", "type": "Package"}, {"nodeid": "src/interfaces", "type": "Package"}, {"nodeid": "src/logs", "type": "Dir"}, {"nodeid": "src/managers", "type": "Dir"}, {"nodeid": "src/mcp", "type": "Package"}, {"nodeid": "src/modules_fragmenta", "type": "Package"}, {"nodeid": "src/monitoring", "type": "Dir"}, {"nodeid": "src/optimization", "type": "Package"}, {"nodeid": "src/pet", "type": "Package"}, {"nodeid": "src/search", "type": "Dir"}, {"nodeid": "src/security", "type": "Package"}, {"nodeid": "src/services", "type": "Package"}, {"nodeid": "src/shared", "type": "Package"}, {"nodeid": "src/stubs", "type": "Dir"}, {"nodeid": "src/system", "type": "Package"}, {"nodeid": "src/tools", "type": "Package"}, {"nodeid": "src/utils", "type": "Dir"}]}, {"nodeid": "test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "test_data/templates", "outcome": "passed", "result": []}, {"nodeid": "test_data/test_reports", "outcome": "passed", "result": []}, {"nodeid": "test_data", "outcome": "passed", "result": [{"nodeid": "test_data/task_queue", "type": "Dir"}, {"nodeid": "test_data/templates", "type": "Dir"}, {"nodeid": "test_data/test_reports", "type": "Dir"}]}, {"nodeid": "test_reports", "outcome": "passed", "result": []}, {"nodeid": "test_results", "outcome": "passed", "result": []}, {"nodeid": "tests/agents/simple_test.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/simple_test.py::test_simple", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/agents/test_agent_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_agent_manager.py\", line 48\nE       _ = assert hasattr(agent_manager, 'agents')\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_audio_processing_agent.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_audio_processing_agent.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\agents\\test_audio_processing_agent.py:9: in <module>\n    from apps.backend.src.agents.audio_processing_agent import AudioProcessingAgent\nE   ModuleNotFoundError: No module named 'apps.backend.src.agents.audio_processing_agent'"}, {"nodeid": "tests/agents/test_base_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_base_agent.py\", line 110\nE       _ = assert base_agent.is_healthy() is False\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_code_understanding_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_code_understanding_agent.py\", line 79\nE       _ = assert isinstance(result_payload[\"payload\"], str)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_creative_writing_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_creative_writing_agent.py\", line 55\nE       _ = assert isinstance(result_payload[\"payload\"], str)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_data_analysis_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_data_analysis_agent.py\", line 179\nE       _ = assert len(processed_data) > 0  # Should have some rows after cleaning\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_imports.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_imports.py::test_imports", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/agents/test_knowledge_graph_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\agents\\test_knowledge_graph_agent.py\", line 111\nE       _ = 'llm_interface': MagicMock(),\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/agents/test_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_simple.py::test_simple", "type": "Function", "lineno": 0}]}, {"nodeid": "tests/agents", "outcome": "passed", "result": [{"nodeid": "tests/agents/simple_test.py", "type": "Module"}, {"nodeid": "tests/agents/test_agent_manager.py", "type": "Module"}, {"nodeid": "tests/agents/test_audio_processing_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_base_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_code_understanding_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_creative_writing_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_data_analysis_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_imports.py", "type": "Module"}, {"nodeid": "tests/agents/test_knowledge_graph_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_simple.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/code_understanding/test_lightweight_code_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\code_understanding\\test_lightweight_code_model.py\", line 26\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/code_understanding", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/code_understanding/test_lightweight_code_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/compression/test_alpha_deep_model.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\compression\\test_alpha_deep_model.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\compression\\test_alpha_deep_model.py:11: in <module>\n    from compression.alpha_deep_model import AlphaDeepModel, DeepParameter, HAMGist, RelationalContext, Modalities, CompressionAlgorithm\nE   ModuleNotFoundError: No module named 'compression'"}, {"nodeid": "tests/core_ai/compression", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/compression/test_alpha_deep_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/context/test_context_system.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\context\\test_context_system.py\", line 30\nE       _ = assert isinstance(context_manager.memory_storage, MemoryStorage)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/context", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/context/test_context_system.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/dialogue/test_dialogue_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\dialogue\\test_dialogue_manager.py\", line 7\nE       _ = @pytest.mark.timeout(10)\nE       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\dialogue\\test_project_coordinator.py\", line 143\nE       _ = call(subtasks[0]),\nE       ^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator_fix.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\dialogue\\test_project_coordinator_fix.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\dialogue\\test_project_coordinator_fix.py:5: in <module>\n    from dialogue.project_coordinator import ProjectCoordinator\nE   ModuleNotFoundError: No module named 'dialogue'"}, {"nodeid": "tests/core_ai/dialogue", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/dialogue/test_dialogue_manager.py", "type": "Module"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator.py", "type": "Module"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator_fix.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/formula_engine/test_formula_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\formula_engine\\test_formula_engine.py\", line 79\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/formula_engine", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/formula_engine/test_formula_engine.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/language_models/test_daily_language_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\language_models\\test_daily_language_model.py\", line 66\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/language_models", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/language_models/test_daily_language_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/learning", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\core_ai\\learning\\conftest.py:2: in <module>\n    from apps.backend.src.ai.learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 17\nE       lass ProcessedTripleInfo(TypedDict):\nE            ^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/lis/test_ham_lis_cache.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\lis\\test_ham_lis_cache.py\", line 97\nE       _ = \"timestamp\": entry[\"metadata\"].get(HAM_META_TIMESTAMP_LOGGED, entry[\"metadata\"].get(\"timestamp_logged\", \"1970-01-01T00:00:00Z\")), # Use specific or fallback\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/core_ai/lis/test_tonal_repair_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\lis\\test_tonal_repair_engine.py\", line 6\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/lis", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/lis/test_ham_lis_cache.py", "type": "Module"}, {"nodeid": "tests/core_ai/lis/test_tonal_repair_engine.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/memory/test_ham_chromadb_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\memory\\test_ham_chromadb_integration.py\", line 221\nE       _ = assert \"fallback test sentence\" in results[0][\"rehydrated_gist\"].lower()\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/memory/test_ham_memory_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\memory\\test_ham_memory_manager.py\", line 36\nE       _ = assert isinstance(ham_manager.core_memory_store, dict)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/memory", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/memory/test_ham_chromadb_integration.py", "type": "Module"}, {"nodeid": "tests/core_ai/memory/test_ham_memory_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/meta_formulas/test_meta_formulas.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\meta_formulas\\test_meta_formulas.py\", line 8\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/meta_formulas", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/meta_formulas/test_meta_formulas.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/personality/test_personality_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\personality\\test_personality_manager.py\", line 57\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/personality", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/personality/test_personality_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/rag/test_rag_manager.py", "outcome": "passed", "result": []}, {"nodeid": "tests/core_ai/rag", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/rag/test_rag_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/service_discovery/test_service_discovery_module.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\service_discovery\\test_service_discovery_module.py\", line 21\nE       _ = @pytest.mark.timeout(10)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/service_discovery", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/service_discovery/test_service_discovery_module.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/test_agent_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\test_agent_manager.py\", line 19\nE       _ = 'data_analysis_agent': os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'src', 'agents', 'data_analysis_agent.py')),\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/core_ai/test_crisis_system.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\test_crisis_system.py\", line 33\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/test_deep_mapper.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\test_deep_mapper.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\test_deep_mapper.py:2: in <module>\n    from apps.backend.src.ai.deep_mapper import DeepMapper\nE   ImportError: cannot import name 'DeepMapper' from 'apps.backend.src.ai.deep_mapper' (D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\ai\\deep_mapper\\__init__.py)"}, {"nodeid": "tests/core_ai/test_emotion_system.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\test_emotion_system.py\", line 25\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/test_time_system.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\core_ai\\test_time_system.py\", line 22\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/code_understanding", "type": "Package"}, {"nodeid": "tests/core_ai/compression", "type": "Package"}, {"nodeid": "tests/core_ai/context", "type": "Dir"}, {"nodeid": "tests/core_ai/dialogue", "type": "Package"}, {"nodeid": "tests/core_ai/formula_engine", "type": "Package"}, {"nodeid": "tests/core_ai/language_models", "type": "Package"}, {"nodeid": "tests/core_ai/learning", "type": "Package"}, {"nodeid": "tests/core_ai/lis", "type": "Package"}, {"nodeid": "tests/core_ai/memory", "type": "Dir"}, {"nodeid": "tests/core_ai/meta_formulas", "type": "Dir"}, {"nodeid": "tests/core_ai/personality", "type": "Dir"}, {"nodeid": "tests/core_ai/rag", "type": "Dir"}, {"nodeid": "tests/core_ai/service_discovery", "type": "Dir"}, {"nodeid": "tests/core_ai/test_agent_manager.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_crisis_system.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_deep_mapper.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_emotion_system.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_time_system.py", "type": "Module"}]}, {"nodeid": "tests/creation/test_creation_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\creation\\test_creation_engine.py\", line 10\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/creation", "outcome": "passed", "result": [{"nodeid": "tests/creation/test_creation_engine.py", "type": "Module"}]}, {"nodeid": "tests/debug", "outcome": "passed", "result": []}, {"nodeid": "tests/e2e/test_training_workflow.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\e2e\\test_training_workflow.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\e2e\\test_training_workflow.py:3: in <module>\n    from demo_learning_manager import DemoLearningManager\nE   ModuleNotFoundError: No module named 'demo_learning_manager'"}, {"nodeid": "tests/e2e", "outcome": "passed", "result": [{"nodeid": "tests/e2e/test_training_workflow.py", "type": "Module"}]}, {"nodeid": "tests/economy/test_economy_db.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\economy\\test_economy_db.py:4: in <module>\n    from apps.backend.src.economy.economy_db import EconomyDB\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\economy\\economy_db.py\", line 13\nE       \"\"\"Initializes the SQLite database and creates the 'balances' table if it doesn't exist.\"\"\":\nE                                                                                                  ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/economy/test_economy_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\economy\\test_economy_manager.py:4: in <module>\n    from apps.backend.src.economy.economy_manager import EconomyManager\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\economy\\economy_manager.py\", line 13\nE       \"\"\"Initializes the EconomyManager with a given configuration.\"\"\":\nE                                                                       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/economy", "outcome": "passed", "result": [{"nodeid": "tests/economy/test_economy_db.py", "type": "Module"}, {"nodeid": "tests/economy/test_economy_manager.py", "type": "Module"}]}, {"nodeid": "tests/evaluation/test_evaluation_db.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\evaluation\\test_evaluation_db.py\", line 29\nE       _ = \"timestamp\": datetime.now().isoformat(),\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/evaluation/test_evaluator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\evaluation\\test_evaluator.py\", line 10\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/evaluation/test_task_evaluator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\evaluation\\test_task_evaluator.py:5: in <module>\n    from apps.backend.src.ai.evaluation.task_evaluator import TaskExecutionEvaluator, MetricsCalculator, FeedbackAnalyzer\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\ai\\evaluation\\task_evaluator.py\", line 11\nE       lass MetricsCalculator:\nE            ^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/evaluation", "outcome": "passed", "result": [{"nodeid": "tests/evaluation/test_evaluation_db.py", "type": "Module"}, {"nodeid": "tests/evaluation/test_evaluator.py", "type": "Module"}, {"nodeid": "tests/evaluation/test_task_evaluator.py", "type": "Module"}]}, {"nodeid": "tests/fragmenta/test_fragmenta_orchestrator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\fragmenta\\test_fragmenta_orchestrator.py\", line 8\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/fragmenta", "outcome": "passed", "result": [{"nodeid": "tests/fragmenta/test_fragmenta_orchestrator.py", "type": "Module"}]}, {"nodeid": "tests/game/test_assets.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\game\\test_assets.py\", line 11\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/game/test_main.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\game\\test_main.py\", line 5\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/game/test_npcs.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\game\\test_npcs.py\", line 11\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/game", "outcome": "passed", "result": [{"nodeid": "tests/game/test_assets.py", "type": "Module"}, {"nodeid": "tests/game/test_main.py", "type": "Module"}, {"nodeid": "tests/game/test_npcs.py", "type": "Module"}]}, {"nodeid": "tests/hsp/test_basic.py", "outcome": "passed", "result": [{"nodeid": "tests/hsp/test_basic.py::test_basic", "type": "Function", "lineno": 0}]}, {"nodeid": "tests/hsp/test_debug.py", "outcome": "passed", "result": [{"nodeid": "tests/hsp/test_debug.py::test_simple_async", "type": "Coroutine", "lineno": 8}, {"nodeid": "tests/hsp/test_debug.py::test_simple_sync", "type": "Function", "lineno": 14}]}, {"nodeid": "tests/hsp/test_hsp_ack_retry.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_ack_retry.py\", line 60\nE       _ = \"timestamp_sent\": datetime.now(timezone.utc).isoformat(),\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/hsp/test_hsp_advanced_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_advanced_integration.py\", line 5\nE       HSPMessageEnvelope\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/hsp/test_hsp_connector.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_connector.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\hsp\\test_hsp_connector.py:3: in <module>\n    from ...src.hsp.connector import HSPConnector\nE   ModuleNotFoundError: No module named 'apps.backend.src.hsp'"}, {"nodeid": "tests/hsp/test_hsp_enhanced_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_enhanced_integration.py\", line 6\nE       HSPMessageEnvelope\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/hsp/test_hsp_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_integration.py\", line 284\nE       _ = \"message_id\": str(uuid.uuid4()),\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/hsp/test_hsp_refactored.py", "outcome": "passed", "result": []}, {"nodeid": "tests/hsp/test_hsp_security.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_hsp_security.py\", line 160\nE       _ = assert isinstance(payload, str)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_message_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\hsp\\test_message_bridge.py:5: in <module>\n    from apps.backend.src.core.hsp.bridge.message_bridge import MessageBridge\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\core\\hsp\\bridge\\message_bridge.py\", line 53\nE       f hasattr(self.internal_bus, 'publish_async'):\nE         ^^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_mqtt_broker_startup.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\hsp\\test_mqtt_broker_startup.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\hsp\\test_mqtt_broker_startup.py:6: in <module>\n    from apps.backend.src.hsp.connector import HSPConnector\nE   ModuleNotFoundError: No module named 'apps.backend.src.hsp'"}, {"nodeid": "tests/hsp", "outcome": "passed", "result": [{"nodeid": "tests/hsp/test_basic.py", "type": "Module"}, {"nodeid": "tests/hsp/test_debug.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_ack_retry.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_advanced_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_connector.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_enhanced_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_refactored.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_security.py", "type": "Module"}, {"nodeid": "tests/hsp/test_message_bridge.py", "type": "Module"}, {"nodeid": "tests/hsp/test_mqtt_broker_startup.py", "type": "Module"}]}, {"nodeid": "tests/integration", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integration\\conftest.py\", line 113\nE       _ = \"agent_id\": f\"test_{agent_type}_{id(object())}\",\nE       ^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/integrations/test_atlassian_api.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integrations\\test_atlassian_api.py\", line 26\nE       _ = @patch('apps.backend.src.integrations.atlassian_cli_bridge.subprocess.run')\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations/test_atlassian_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integrations\\test_atlassian_bridge.py\", line 233\nE       _ = assert isinstance(formatted, str)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations/test_atlassian_bridge_fallback.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integrations\\test_atlassian_bridge_fallback.py\", line 131\nE       _ = aiohttp.ClientError(\"Primary failed\"),\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/integrations/test_rovo_dev_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integrations\\test_rovo_dev_agent.py\", line 288\nE       _ = 'timestamp': datetime.now().isoformat()\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "tests/integrations/test_rovo_dev_agent_recovery.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\integrations\\test_rovo_dev_agent_recovery.py\", line 117\nE       _ = assert agent.state_file.exists()\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations/test_rovo_dev_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\integrations\\test_rovo_dev_connector.py:10: in <module>\n    from apps.backend.src.integrations.enhanced_rovo_dev_connector import EnhancedRovoDevConnector\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\integrations\\enhanced_rovo_dev_connector.py\", line 88\nE       nderlying = getattr(self, \"_hsp_connector\", None)\nE   IndentationError: expected an indented block after function definition on line 86"}, {"nodeid": "tests/integrations", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_atlassian_api.py", "type": "Module"}, {"nodeid": "tests/integrations/test_atlassian_bridge.py", "type": "Module"}, {"nodeid": "tests/integrations/test_atlassian_bridge_fallback.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_agent.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_agent_recovery.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_connector.py", "type": "Module"}]}, {"nodeid": "tests/interfaces", "outcome": "passed", "result": []}, {"nodeid": "tests/mcp/test_context7_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\mcp\\test_context7_connector.py\", line 11\nE       Context7MCPConnector,\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/mcp/test_mcp_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\mcp\\test_mcp_connector.py\", line 16\nE       _ = @pytest.mark.timeout(5)\nE       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/mcp", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_context7_connector.py", "type": "Module"}, {"nodeid": "tests/mcp/test_mcp_connector.py", "type": "Module"}]}, {"nodeid": "tests/meta/test_adaptive_learning_controller.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\meta\\test_adaptive_learning_controller.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\meta\\test_adaptive_learning_controller.py:7: in <module>\n    from meta.adaptive_learning_controller import (\nE   ModuleNotFoundError: No module named 'meta'"}, {"nodeid": "tests/meta/test_learning_log_db.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\meta\\test_learning_log_db.py\", line 26\nE       _ = \"timestamp\": datetime.now().isoformat(),\nE       ^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/meta", "outcome": "passed", "result": [{"nodeid": "tests/meta/test_adaptive_learning_controller.py", "type": "Module"}, {"nodeid": "tests/meta/test_learning_log_db.py", "type": "Module"}]}, {"nodeid": "tests/modules_fragmenta/test_element_layer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\modules_fragmenta\\test_element_layer.py\", line 8\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/modules_fragmenta/test_vision_tone_inverter.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\modules_fragmenta\\test_vision_tone_inverter.py\", line 8\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/modules_fragmenta", "outcome": "passed", "result": [{"nodeid": "tests/modules_fragmenta/test_element_layer.py", "type": "Module"}, {"nodeid": "tests/modules_fragmenta/test_vision_tone_inverter.py", "type": "Module"}]}, {"nodeid": "tests/pet/test_pet_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\pet\\test_pet_manager.py:2: in <module>\n    from apps.backend.src.pet.pet_manager import PetManager\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\pet\\pet_manager.py\", line 24\nE       \"\"\"Handles user interaction and updates the pet's state based on behavior rules.\"\"\"\nE                                                      ^\nE   SyntaxError: unterminated string literal (detected at line 24)"}, {"nodeid": "tests/pet", "outcome": "passed", "result": [{"nodeid": "tests/pet/test_pet_manager.py", "type": "Module"}]}, {"nodeid": "tests/search/test_search_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\search\\test_search_engine.py\", line 10\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/search", "outcome": "passed", "result": [{"nodeid": "tests/search/test_search_engine.py", "type": "Module"}]}, {"nodeid": "tests/services/test_ai_virtual_input_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_ai_virtual_input_service.py\", line 4\nE       VirtualMouseCommand,\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/services/test_audio_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_audio_service.py\", line 20\nE       _ = @pytest.mark.timeout(15)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_health_ready_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_health_ready_endpoints.py\", line 24\nE       _ = \"llm_interface\": object(),\nE       ^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/services/test_hot_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_hot_endpoints.py\", line 7\nE       _ = @pytest.mark.timeout(10)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_hsp_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_hsp_endpoints.py\", line 78\nE       _ = \"dialogue_manager\": FakeDialogueManager(),\nE       ^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/services/test_llm_interface.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_llm_interface.py\", line 8\nE       _ = @pytest.mark.timeout(15)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_main_api_server.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "tests/services/test_main_api_server.py", "outcome": "passed", "result": [{"nodeid": "tests/services/test_main_api_server.py::TestClient", "type": "Class"}, {"nodeid": "tests/services/test_main_api_server.py::test_read_main", "type": "Function", "lineno": 9}, {"nodeid": "tests/services/test_main_api_server.py::test_get_status", "type": "Function", "lineno": 15}]}, {"nodeid": "tests/services/test_main_api_server_hsp.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_main_api_server_hsp.py\", line 38\nE       _ = raise ValueError(f\"Missing required field: availability_status\")\nE           ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_models_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_models_endpoints.py\", line 27\nE       _ = \"llm_interface\": object(),\nE       ^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/services/test_node_services.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_node_services.py\", line 11\nE       _ = raise ConnectionError(\"Node.js service is not available\")\nE           ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_resource_awareness_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_resource_awareness_service.py\", line 8\nE       SimulatedCPUConfig,\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/services/test_sandbox_executor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_sandbox_executor.py\", line 20\nE       _ = @patch('tempfile.TemporaryDirectory')\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_vision_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\services\\test_vision_service.py\", line 8\nE       _ = @pytest.mark.timeout(15)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services", "outcome": "passed", "result": [{"nodeid": "tests/services/test_ai_virtual_input_service.py", "type": "Module"}, {"nodeid": "tests/services/test_audio_service.py", "type": "Module"}, {"nodeid": "tests/services/test_health_ready_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_hot_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_hsp_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_llm_interface.py", "type": "Module"}, {"nodeid": "tests/services/test_main_api_server.py", "type": "Module"}, {"nodeid": "tests/services/test_main_api_server_hsp.py", "type": "Module"}, {"nodeid": "tests/services/test_models_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_node_services.py", "type": "Module"}, {"nodeid": "tests/services/test_resource_awareness_service.py", "type": "Module"}, {"nodeid": "tests/services/test_sandbox_executor.py", "type": "Module"}, {"nodeid": "tests/services/test_vision_service.py", "type": "Module"}]}, {"nodeid": "tests/shared/test_key_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\shared\\test_key_manager.py\", line 116\nE       _ = assert isinstance(result, str)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/shared/utils/test_cleanup_utils.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\shared\\utils\\test_cleanup_utils.py:10: in <module>\n    from apps.backend.src.shared.utils import cleanup_utils\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\shared\\utils\\cleanup_utils.py\", line 46\nE       if (file_path.is_file and:\nE                                ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/shared/utils", "outcome": "passed", "result": [{"nodeid": "tests/shared/utils/test_cleanup_utils.py", "type": "Module"}]}, {"nodeid": "tests/shared", "outcome": "passed", "result": [{"nodeid": "tests/shared/test_key_manager.py", "type": "Module"}, {"nodeid": "tests/shared/utils", "type": "Dir"}]}, {"nodeid": "tests/simple_agent_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_agent_test.py::test_imports", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/simple_path_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_path_test.py::test_path_config", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/simple_pytest_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_pytest_test.py::test_example", "type": "Function", "lineno": 2}]}, {"nodeid": "tests/system", "outcome": "passed", "result": []}, {"nodeid": "tests/temp_async_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\temp_async_test.py:2: in <module>\n    from apps.backend.src.ai.trust.trust_manager_module import TrustManager\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\ai\\trust\\trust_manager_module.py\", line 10\nE       MAX_TRUST_SCORE = 1.0\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_ai_editor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_ai_editor.py:13: in <module>\n    from apps.backend.src.services.ai_editor import DataProcessor, AIEditorService\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\services\\ai_editor.py\", line 25\nE       \"\"\"Handles data processing and transformation for the AI editor\"\"\":\nE                                                                         ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_atlassian_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_atlassian_integration.py\", line 63\nE       _ = patch('integrations.rovo_dev_agent.AtlassianBridge'), \\\nE         ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_base_agent_simple.py", "outcome": "passed", "result": [{"nodeid": "tests/test_base_agent_simple.py::test_base_agent_import", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/test_basic.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_basic.py\", line 26\nE       _ = assert os.path.exists(os.path.join(backend_dir, \"src\")), \"src \u76ee\u5f55\u5e94\u8be5\u5b58\u5728\"\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_config_loader.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_config_loader.py:10: in <module>\n    from apps.backend.src.config_loader import load_config, get_config, load_simulated_resources, get_simulated_resources, is_demo_mode, get_mock_placeholder_value\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\config_loader.py\", line 57\nE       \"\"\"\nE       ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 63)"}, {"nodeid": "tests/test_core_service_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_core_service_manager.py:12: in <module>\n    from apps.backend.src.core.managers.core_service_manager import (\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\core\\managers\\core_service_manager.py\", line 27\nE       \"\"\u670d\u52a1\u72b6\u6001\u679a\u4e3e\"\"\"\nE       ^^\nE   IndentationError: expected an indented block after class definition on line 24"}, {"nodeid": "tests/test_core_services.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_core_services.py:8: in <module>\n    from core_services import initialize_services, get_services, shutdown_services\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\..\\src\\core_services.py\", line 82\nE       lass DemoLearningManager:\nE            ^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_core_services_module.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_core_services_module.py\", line 49\nE       _ = @patch('os.path.exists')\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_data", "outcome": "passed", "result": []}, {"nodeid": "tests/test_dependency_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_dependency_manager.py\", line 52\nE       _ = assert isinstance(dm._config, dict)\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_hsp_fixture_fix.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_hsp_fixture_fix.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_hsp_fixture_fix.py:2: in <module>\n    from apps.backend.src.hsp.connector import HSPConnector\nE   ModuleNotFoundError: No module named 'apps.backend.src.hsp'"}, {"nodeid": "tests/test_output_data/ham_memory_chroma/chroma_db", "outcome": "passed", "result": []}, {"nodeid": "tests/test_output_data/ham_memory_chroma", "outcome": "passed", "result": [{"nodeid": "tests/test_output_data/ham_memory_chroma/chroma_db", "type": "Dir"}]}, {"nodeid": "tests/test_output_data/personality_manager_files", "outcome": "passed", "result": []}, {"nodeid": "tests/test_output_data", "outcome": "passed", "result": [{"nodeid": "tests/test_output_data/ham_memory_chroma", "type": "Dir"}, {"nodeid": "tests/test_output_data/personality_manager_files", "type": "Dir"}]}, {"nodeid": "tests/test_path_config.py::TestPathConfig", "outcome": "passed", "result": [{"nodeid": "tests/test_path_config.py::TestPathConfig::test_directories_exist", "type": "TestCaseFunction", "lineno": 88}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_directory_hierarchy", "type": "TestCaseFunction", "lineno": 26}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_directory_paths_defined", "type": "TestCaseFunction", "lineno": 18}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_get_data_path", "type": "TestCaseFunction", "lineno": 39}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_get_training_config_path", "type": "TestCaseFunction", "lineno": 53}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_project_root_exists", "type": "TestCaseFunction", "lineno": 12}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_resolve_path_absolute", "type": "TestCaseFunction", "lineno": 67}, {"nodeid": "tests/test_path_config.py::TestPathConfig::test_resolve_path_relative", "type": "TestCaseFunction", "lineno": 79}]}, {"nodeid": "tests/test_path_config.py", "outcome": "passed", "result": [{"nodeid": "tests/test_path_config.py::TestPathConfig", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_result_processing_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_result_processing_test.py\", line 102\nE       _ = \"total_tests\": test_results.get('summary', {}).get('total', 0),\nE       ^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/test_security.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_security.py\", line 28\nE       EnhancedSandboxExecutor, \nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_simple.py\", line 3\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_smart_dev_runner.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\test_smart_dev_runner.py\", line 56\nE       _ = @patch('subprocess.run')\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_system_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_system_integration.py:7: in <module>\n    from system_integration import UnifiedAISystem\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\..\\src\\system_integration.py\", line 67\nE       \"\"\"Process a user request through the unified system\"\"\"\nE                                                           ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 107)"}, {"nodeid": "tests/tools/test_code_understanding_tool.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_code_understanding_tool.py\", line 25\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools/test_logic_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_logic_model.py\", line 44\nE       _ = @pytest.mark.timeout(10)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools/test_math_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_math_model.py\", line 40\nE       _ = @pytest.mark.timeout(10)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools/test_parameter_extractor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_parameter_extractor.py\", line 9\nE       _ = @patch('apps.backend.src.tools.parameter_extractor.extractor.hf_hub_download')\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools/test_tool_dispatcher_logging.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_tool_dispatcher_logging.py\", line 36\nE       _ = @pytest.mark.timeout(15)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools/test_translation_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\tools\\test_translation_model.py\", line 60\nE       _ = @pytest.mark.timeout(5)\nE           ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/tools", "outcome": "passed", "result": [{"nodeid": "tests/tools/test_code_understanding_tool.py", "type": "Module"}, {"nodeid": "tests/tools/test_logic_model.py", "type": "Module"}, {"nodeid": "tests/tools/test_math_model.py", "type": "Module"}, {"nodeid": "tests/tools/test_parameter_extractor.py", "type": "Module"}, {"nodeid": "tests/tools/test_tool_dispatcher_logging.py", "type": "Module"}, {"nodeid": "tests/tools/test_translation_model.py", "type": "Module"}]}, {"nodeid": "tests/training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "tests/training/configs", "outcome": "passed", "result": []}, {"nodeid": "tests/training/models", "outcome": "passed", "result": []}, {"nodeid": "tests/training/test_training_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\tests\\training\\test_training_manager.py\", line 23\nE       _ = assert hasattr(demo_learning_manager, 'training_configs')\nE           ^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/training", "outcome": "passed", "result": [{"nodeid": "tests/training/checkpoints", "type": "Dir"}, {"nodeid": "tests/training/configs", "type": "Dir"}, {"nodeid": "tests/training/models", "type": "Dir"}, {"nodeid": "tests/training/test_training_manager.py", "type": "Module"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/agents", "type": "Package"}, {"nodeid": "tests/core_ai", "type": "Package"}, {"nodeid": "tests/creation", "type": "Dir"}, {"nodeid": "tests/debug", "type": "Dir"}, {"nodeid": "tests/e2e", "type": "Dir"}, {"nodeid": "tests/economy", "type": "Package"}, {"nodeid": "tests/evaluation", "type": "Dir"}, {"nodeid": "tests/fragmenta", "type": "Package"}, {"nodeid": "tests/game", "type": "Dir"}, {"nodeid": "tests/hsp", "type": "Package"}, {"nodeid": "tests/integration", "type": "Dir"}, {"nodeid": "tests/integrations", "type": "Dir"}, {"nodeid": "tests/interfaces", "type": "Package"}, {"nodeid": "tests/mcp", "type": "Dir"}, {"nodeid": "tests/meta", "type": "Dir"}, {"nodeid": "tests/modules_fragmenta", "type": "Package"}, {"nodeid": "tests/pet", "type": "Dir"}, {"nodeid": "tests/search", "type": "Dir"}, {"nodeid": "tests/services", "type": "Package"}, {"nodeid": "tests/shared", "type": "Dir"}, {"nodeid": "tests/simple_agent_test.py", "type": "Module"}, {"nodeid": "tests/simple_path_test.py", "type": "Module"}, {"nodeid": "tests/simple_pytest_test.py", "type": "Module"}, {"nodeid": "tests/system", "type": "Dir"}, {"nodeid": "tests/temp_async_test.py", "type": "Module"}, {"nodeid": "tests/test_ai_editor.py", "type": "Module"}, {"nodeid": "tests/test_atlassian_integration.py", "type": "Module"}, {"nodeid": "tests/test_base_agent_simple.py", "type": "Module"}, {"nodeid": "tests/test_basic.py", "type": "Module"}, {"nodeid": "tests/test_config_loader.py", "type": "Module"}, {"nodeid": "tests/test_core_service_manager.py", "type": "Module"}, {"nodeid": "tests/test_core_services.py", "type": "Module"}, {"nodeid": "tests/test_core_services_module.py", "type": "Module"}, {"nodeid": "tests/test_data", "type": "Dir"}, {"nodeid": "tests/test_dependency_manager.py", "type": "Module"}, {"nodeid": "tests/test_hsp_fixture_fix.py", "type": "Module"}, {"nodeid": "tests/test_output_data", "type": "Dir"}, {"nodeid": "tests/test_path_config.py", "type": "Module"}, {"nodeid": "tests/test_result_processing_test.py", "type": "Module"}, {"nodeid": "tests/test_security.py", "type": "Module"}, {"nodeid": "tests/test_simple.py", "type": "Module"}, {"nodeid": "tests/test_smart_dev_runner.py", "type": "Module"}, {"nodeid": "tests/test_system_integration.py", "type": "Module"}, {"nodeid": "tests/tools", "type": "Package"}, {"nodeid": "tests/training", "type": "Dir"}]}, {"nodeid": "tools/check", "outcome": "passed", "result": []}, {"nodeid": "tools/fix", "outcome": "passed", "result": []}, {"nodeid": "tools/utils", "outcome": "passed", "result": []}, {"nodeid": "tools", "outcome": "passed", "result": [{"nodeid": "tools/check", "type": "Dir"}, {"nodeid": "tools/fix", "type": "Dir"}, {"nodeid": "tools/utils", "type": "Dir"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "backup", "type": "Dir"}, {"nodeid": "chroma_db", "type": "Dir"}, {"nodeid": "chromadb_local", "type": "Package"}, {"nodeid": "configs", "type": "Package"}, {"nodeid": "context_storage", "type": "Dir"}, {"nodeid": "data", "type": "Dir"}, {"nodeid": "debug", "type": "Dir"}, {"nodeid": "docs", "type": "Dir"}, {"nodeid": "htmlcov", "type": "Dir"}, {"nodeid": "logs", "type": "Dir"}, {"nodeid": "model_cache", "type": "Dir"}, {"nodeid": "reports", "type": "Dir"}, {"nodeid": "schemas", "type": "Dir"}, {"nodeid": "scripts", "type": "Dir"}, {"nodeid": "src", "type": "Package"}, {"nodeid": "test_data", "type": "Dir"}, {"nodeid": "test_reports", "type": "Dir"}, {"nodeid": "test_results", "type": "Dir"}, {"nodeid": "tests", "type": "Package"}, {"nodeid": "tools", "type": "Dir"}]}], "tests": []}