{
  "name": "backend",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "setup": "python -m venv venv && (if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && pip install --upgrade pip && pip install -r requirements.txt && pip install -r requirements-dev.txt",
    "dev": "echo \"Starting Python backend...\" && (if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && python start_chroma_server.py & uvicorn src.services.main_api_server:app --reload --host 0.0.0.0 --port 8000",
    "dev:api": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && uvicorn src.services.main_api_server:app --reload --host 0.0.0.0 --port 8000",
    "dev:chroma": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && python start_chroma_server.py",
    "test": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && pytest --tb=short -v",
    "test:coverage": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && pytest --cov=src --cov-report=html --cov-report=term-missing",
    "test:watch": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && pytest --tb=short -v --timeout=30 -f",
    "clean": "rmdir /s /q venv 2>nul || rm -rf venv",
    "health": "(if exist venv\\Scripts\\activate.bat (call venv\\Scripts\\activate.bat) else (source venv/bin/activate)) && python -c \"import src; print('Backend imports OK')\""
  }
}