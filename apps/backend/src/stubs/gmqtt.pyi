# gmqtt type stub file for Pyright type checking
# This is a minimal stub to satisfy import checks for optional dependency

from typing import Any, Optional, Callable, Awaitable

class Client:
    def __init__(self, client_id: str, clean_session: bool = True, transport: str = "tcp") -> None: ...
    def set_auth_credentials(self, username: str, password: Optional[str] = None) -> None: ...
    def set_ssl(self, ssl_context: Any) -> None: ...
    def on_connect(self, callback: Callable[..., Any]) -> None: ...
    def on_disconnect(self, callback: Callable[..., Any]) -> None: ...
    def on_message(self, callback: Callable[..., Any]) -> None: ...
    async def connect(self, host: str, port: int = 1883, ssl: Any = None, keepalive: int = 60) -> None: ...
    async def disconnect(self) -> None: ...
    async def publish(self, topic: str, payload: Any, qos: int = 0, retain: bool = False, properties: Any = None) -> None: ...
    async def subscribe(self, topic: str, qos: int = 0, properties: Any = None) -> None: ...
    async def unsubscribe(self, topic: str, properties: Any = None) -> None: ...

# For type checking purposes, we define the module interface
__all__ = ["Client"]