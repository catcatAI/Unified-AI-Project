[build-system]
requires = [ "setuptools>=61.0",]
build-backend = "setuptools.build_meta"

[project]
name = "unified-ai-project"
version = "0.1.0"
description = "A unified AI project with modular architecture and optional dependencies"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "Flask>=2.0.0",
    "numpy>=1.21.0",
    "cryptography>=3.4.0",
    "requests>=2.25.0",
    "python-dotenv>=0.19.0",
    "PyYAML>=6.0",
    "typing-extensions>=4.0.0",
    "paho-mqtt>=1.6.0",
    "networkx>=2.6.0",
    "psutil>=5.8.0",
    "pandas",
    "scikit-learn",
]

[[project.authors]]
name = "Unified AI Project Team"

[project.license]
text = "MIT"

[project.optional-dependencies]
standard = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic",
    "httpx",
    "beautifulsoup4",
]
ai = [
    "tensorflow>=2.15.0",
    "spacy>=3.4.0",
    "torch>=2.0.0",
    "transformers>=4.0.0",
    "huggingface-hub>=0.16.0",
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "google-generativeai>=0.3.0",
    "cohere>=4.0.0",
    "azure-ai-inference>=1.0.0b1",
    "azure-identity>=1.0.0",
    "langchain",
    "nltk",
    "textblob",
]
game = [
    "pygame",
]
installer = [
    "PyQt5",
    "pyshortcuts",
    "secret-sharing",
    "qrcode",
    "toml",
]
testing = [
    "pytest>=6.0",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-timeout>=2.1.0",
    "aiounittest",
    "aiohttp",
    "gmqtt>=0.7.0",
    "astunparse>=1.6.0",
]
# The 'full' dependency group installs all optional dependencies.
# It references the other optional dependency groups.
full = [
    "unified-ai-project[standard]",
    "unified-ai-project[ai]",
    "unified-ai-project[game]",
    "unified-ai-project[installer]",
]
# The 'dev' dependency group is for developers working on this project.
dev = [
    "unified-ai-project[full]",
    "unified-ai-project[testing]",
    "black",
    "isort",
    "pylint",
    "mypy",
    "pip-tools",
    "rich>=13.0.0",
    "click>=8.0.0",
    "tqdm>=4.64.0",
]

[project.urls]
Homepage = "https://github.com/pypa/sampleproject"
"Bug Tracker" = "https://github.com/pypa/sampleproject/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = [ "py38", "py39", "py310", "py311",]
include = "\\.pyi?$"
extend-exclude = "/(\\n  # directories\\n  \\\\.eggs\\n  | \\\\.git\\n  | \\\\.hg\\n  | \\\\.mypy_cache\\n  | \\\\.tox\\n  | \\\\.venv\\n  | build\\n  | dist\\n  | data/runtime_data\\n  | docs/09-archive\\n)/\\n"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = [ "src", "tests",]
known_third_party = [ "numpy", "pandas", "flask", "fastapi", "pydantic",]
sections = [ "FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER",]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
[[tool.mypy.overrides]]
module = [ "paho.mqtt.*", "spacy.*", "tensorflow.*", "faiss.*", "sentence_transformers.*",]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [ "tests", "data/runtime_data", "docs/09-archive",]
skips = [ "B101", "B601",]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
pythonpath = [ ".", "src",]
testpaths = [ "tests",]
markers = [
    "slow: marks tests as slow (deselect with '-m not slow')",
    "online: marks tests that require an internet connection",
    "mcp: marks tests related to MCP functionality",
    "context7: marks tests related to Context7 integration",
    "ai_core: marks tests for core AI functionality",
    "timeout: marks tests with a timeout",
    "integration: marks tests that require external services or integration setup",
]
filterwarnings = [ "ignore::DeprecationWarning", "ignore::PendingDeprecationWarning",]
addopts = "-v --tb=short --strict-markers"
asyncio_mode = "auto"

[tool.pylint.messages_control]
disable = [ "C0103", "C0114", "R0903", "R0913", "W0613",]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 8
max-locals = 20
max-branches = 15
max-statements = 60
