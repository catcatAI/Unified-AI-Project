Syntax Error Report
Generated at: D:\Projects\Unified-AI-Project
Total files with errors: 825

.\coverage_analyzer.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (coverage_analyzer.py, line 20)
.\final_syntax_fix.py:   File ".\final_syntax_fix.py", line 9
    def fix_remaining_syntax_errors(file_path)
                                              ^
SyntaxError: expected ':'

.\fix_all_syntax_errors.py:   File ".\fix_all_syntax_errors.py", line 10
    def fix_syntax_errors_in_file(file_path)
                                            ^
SyntaxError: expected ':'

.\fix_project_syntax.py:   File ".\fix_project_syntax.py", line 9
    def fix_syntax_errors_in_file(file_path)
                                            ^
SyntaxError: expected ':'

.\fix_type_issues.py:   File ".\fix_type_issues.py", line 11
    def find_python_files(root_path)
                                    ^
SyntaxError: expected ':'

.\fix_unused_call_results_final.py:   File ".\fix_unused_call_results_final.py", line 11
    def find_python_files(root_path)
                                    ^
SyntaxError: expected ':'

.\performance_benchmark.py: Sorry: IndentationError: expected an indented block after function definition on line 21 (performance_benchmark.py, line 22)
.\run_complete_training.py:   File ".\run_complete_training.py", line 16
    def print_header(text)
                          ^
SyntaxError: expected ':'

.\run_training.py:   File ".\run_training.py", line 10
    def check_tensorflow()
                          ^
SyntaxError: expected ':'

.\tool_call_chain_tracker.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (tool_call_chain_tracker.py, line 19)
.\verify_concept_models.py:   File ".\verify_concept_models.py", line 12
    def verify_imports()
                        ^
SyntaxError: expected ':'

.\all_test_backups\apps_backend_tests\test_security.py:   File ".\all_test_backups\apps_backend_tests\test_security.py", line 31
    )
    ^
SyntaxError: unmatched ')'

.\all_test_backups\apps_backend_tests\agents\test_knowledge_graph_agent.py:   File ".\all_test_backups\apps_backend_tests\agents\test_knowledge_graph_agent.py", line 111
    _ = 'llm_interface': MagicMock(),
    ^
SyntaxError: ':' expected after dictionary key

.\all_test_backups\apps_backend_tests\core_ai\test_agent_manager.py:   File ".\all_test_backups\apps_backend_tests\core_ai\test_agent_manager.py", line 19
    _ = 'data_analysis_agent': os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'src', 'agents', 'data_analysis_agent.py')),
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\all_test_backups\apps_backend_tests\core_ai\learning\test_content_analyzer_module.py:   File ".\all_test_backups\apps_backend_tests\core_ai\learning\test_content_analyzer_module.py", line 84
    _ = f"Relationship {expected_src_label} -> {expected_tgt_label} (type: {expected_rel_type}) not found in KG relationships. "
        
SyntaxError: invalid syntax. Perhaps you forgot a comma?

.\all_test_backups\apps_backend_tests\hsp\test_hsp_advanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_advanced_integration.py, line 5)
.\all_test_backups\apps_backend_tests\hsp\test_hsp_enhanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_enhanced_integration.py, line 6)
.\all_test_backups\apps_backend_tests\integrations\test_atlassian_bridge_fallback.py:   File ".\all_test_backups\apps_backend_tests\integrations\test_atlassian_bridge_fallback.py", line 263
    _ = 'last_check': datetime.now(),
    ^
SyntaxError: ':' expected after dictionary key

.\all_test_backups\apps_backend_tests\integrations\test_rovo_dev_agent.py:   File ".\all_test_backups\apps_backend_tests\integrations\test_rovo_dev_agent.py", line 288
    _ = 'timestamp': datetime.now().isoformat()
    ^
SyntaxError: ':' expected after dictionary key

.\all_test_backups\apps_backend_tests\mcp\test_context7_connector.py: Sorry: IndentationError: unexpected indent (test_context7_connector.py, line 11)
.\all_test_backups\apps_backend_tests\services\test_ai_virtual_input_service.py:   File ".\all_test_backups\apps_backend_tests\services\test_ai_virtual_input_service.py", line 7
    )
    ^
SyntaxError: unmatched ')'

.\all_test_backups\apps_backend_tests\services\test_resource_awareness_service.py:   File ".\all_test_backups\apps_backend_tests\services\test_resource_awareness_service.py", line 10
    )
    ^
SyntaxError: unmatched ')'

.\all_test_backups\apps_backend_tests\services\test_sandbox_executor.py: Sorry: IndentationError: expected an indented block after function definition on line 16 (test_sandbox_executor.py, line 18)
.\apps\backend\check_person_title_v2.py:   File ".\apps\backend\check_person_title_v2.py", line 15
    for i, token in enumerate(doc)
                                  ^
SyntaxError: expected ':'

.\apps\backend\debug_relationships_v2.py:   File ".\apps\backend\debug_relationships_v2.py", line 9
    def debug_content_analyzer()
                                ^
SyntaxError: expected ':'

.\apps\backend\fix_hsp_integration.py:   File ".\apps\backend\fix_hsp_integration.py", line 14
    def fix_hsp_connector_publish()
                                   ^
SyntaxError: expected ':'

.\apps\backend\scan_placeholders.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (scan_placeholders.py, line 14)
.\apps\backend\simple_verify.py:   File ".\apps\backend\simple_verify.py", line 7
    """Verify the logic for test_05_prep_object_relationship""":
                                                               ^
SyntaxError: invalid syntax

.\apps\backend\verify_fixes.py:   File ".\apps\backend\verify_fixes.py", line 24
    for entity_id, entity in kg_data1["entities"].items()
                                                         ^
SyntaxError: expected ':'

.\apps\backend\verify_fix_all.py:   File ".\apps\backend\verify_fix_all.py", line 9
    def verify_all_fixes()
                          ^
SyntaxError: expected ':'

.\apps\backend\chromadb_local\config.py: Sorry: IndentationError: unexpected indent (config.py, line 2)
.\apps\backend\scripts\advanced_auto_fix.py: Sorry: IndentationError: expected an indented block after function definition on line 34 (advanced_auto_fix.py, line 35)
.\apps\backend\scripts\auto_fix_imports.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (auto_fix_imports.py, line 20)
.\apps\backend\scripts\coverage_analyzer.py:   File ".\apps\backend\scripts\coverage_analyzer.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\coverage_monitor.py:   File ".\apps\backend\scripts\coverage_monitor.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\execute_smart_fix.py: Sorry: IndentationError: expected an indented block after function definition on line 26 (execute_smart_fix.py, line 27)
.\apps\backend\scripts\final_validation.py:   File ".\apps\backend\scripts\final_validation.py", line 13
    def setup_environment()
                           ^
SyntaxError: expected ':'

.\apps\backend\scripts\integration_fixer.py: Sorry: IndentationError: expected an indented block after function definition on line 23 (integration_fixer.py, line 24)
.\apps\backend\scripts\manage_backup_dirs.py:   File ".\apps\backend\scripts\manage_backup_dirs.py", line 14
    level: str=logging.INFO, 
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\performance_benchmark_framework.py:   File ".\apps\backend\scripts\performance_benchmark_framework.py", line 21
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\performance_benchmark_workflow.py:   File ".\apps\backend\scripts\performance_benchmark_workflow.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\performance_regression_detector.py:   File ".\apps\backend\scripts\performance_regression_detector.py", line 19
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\apps\backend\scripts\smart_executor.py:   File ".\apps\backend\scripts\smart_executor.py", line 16
    def setup_environment()
                           ^
SyntaxError: expected ':'

.\apps\backend\src\core_services.py:   File ".\apps\backend\src\core_services.py", line 22
    def get_BaseAgent()
                       ^
SyntaxError: expected ':'

.\apps\backend\src\agents\collaboration_demo_agent.py:   File ".\apps\backend\src\agents\collaboration_demo_agent.py", line 21
    class CollaborationDemoAgent(BaseAgent)
                                           ^
SyntaxError: expected ':'

.\apps\backend\src\agents\enhanced_demo_agent.py:   File ".\apps\backend\src\agents\enhanced_demo_agent.py", line 23
    class EnhancedDemoAgent(BaseAgent)
                                      ^
SyntaxError: expected ':'

.\apps\backend\src\agents\monitoring_demo_agent.py:   File ".\apps\backend\src\agents\monitoring_demo_agent.py", line 21
    class MonitoringDemoAgent(BaseAgent)
                                        ^
SyntaxError: expected ':'

.\apps\backend\src\agents\registry_demo_agent.py:   File ".\apps\backend\src\agents\registry_demo_agent.py", line 21
    class RegistryDemoAgent(BaseAgent)
                                      ^
SyntaxError: expected ':'

.\apps\backend\src\ai\agent_collaboration_manager.py:   File ".\apps\backend\src\ai\agent_collaboration_manager.py", line 19
    class CollaborationStatus(Enum)
                                   ^
SyntaxError: expected ':'

.\apps\backend\src\ai\agent_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 15 (agent_manager.py, line 16)
.\apps\backend\src\ai\agent_monitoring_manager.py:   File ".\apps\backend\src\ai\agent_monitoring_manager.py", line 21
    class AgentStatus(Enum)
                           ^
SyntaxError: expected ':'

.\apps\backend\src\ai\crisis_system.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (crisis_system.py, line 9)
.\apps\backend\src\ai\demo_learning_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 27 (demo_learning_manager.py, line 28)
.\apps\backend\src\ai\dependency_manager.py:   File ".\apps\backend\src\ai\dependency_manager.py", line 21
    fallback_available: bool = False, fallback_name: Optional[str] = None)
                                                                          ^
SyntaxError: expected ':'

.\apps\backend\src\ai\dynamic_agent_registry.py: Sorry: IndentationError: expected an indented block after function definition on line 35 (dynamic_agent_registry.py, line 36)
.\apps\backend\src\ai\execution_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 83 (execution_manager.py, line 84)
.\apps\backend\src\ai\execution_monitor.py:   File ".\apps\backend\src\ai\execution_monitor.py", line 26
    class ExecutionStatus(Enum)
                               ^
SyntaxError: expected ':'

.\apps\backend\src\ai\genesis.py:   File ".\apps\backend\src\ai\genesis.py", line 25
    def create_genesis_secret -> Tuple[str, str]:
                              ^^
SyntaxError: expected '('

.\apps\backend\src\ai\simultaneous_translation.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (simultaneous_translation.py, line 14)
.\apps\backend\src\ai\agents\base\base_agent.py: Sorry: IndentationError: expected an indented block after function definition on line 23 (base_agent.py, line 24)
.\apps\backend\src\ai\agents\specialized\nlp_processing_agent.py:   File ".\apps\backend\src\ai\agents\specialized\nlp_processing_agent.py", line 11
    class NLPProcessingAgent(BaseAgent)
                                       ^
SyntaxError: expected ':'

.\apps\backend\src\ai\code_understanding\lightweight_code_model.py: Sorry: IndentationError: expected an indented block after function definition on line 30 (lightweight_code_model.py, line 31)
.\apps\backend\src\ai\compression\alpha_deep_model.py:   File ".\apps\backend\src\ai\compression\alpha_deep_model.py", line 13
    class CompressionAlgorithm(Enum)
                                    ^
SyntaxError: expected ':'

.\apps\backend\src\ai\concept_models\adaptive_learning_controller.py: Sorry: IndentationError: expected an indented block after function definition on line 51 (adaptive_learning_controller.py, line 52)
.\apps\backend\src\ai\concept_models\alpha_deep_model.py: Sorry: IndentationError: expected an indented block after class definition on line 18 (alpha_deep_model.py, line 19)
.\apps\backend\src\ai\concept_models\causal_reasoning_engine.py: Sorry: IndentationError: expected an indented block after function definition on line 50 (causal_reasoning_engine.py, line 51)
.\apps\backend\src\ai\concept_models\environment_simulator.py: Sorry: IndentationError: expected an indented block after function definition on line 40 (environment_simulator.py, line 41)
.\apps\backend\src\ai\concept_models\unified_symbolic_space.py:   File ".\apps\backend\src\ai\concept_models\unified_symbolic_space.py", line 14
    class SymbolType(Enum)
                          ^
SyntaxError: expected ':'

.\apps\backend\src\ai\context\dialogue_context.py: Sorry: IndentationError: expected an indented block after function definition on line 15 (dialogue_context.py, line 16)
.\apps\backend\src\ai\context\manager.py:   File ".\apps\backend\src\ai\context\manager.py", line 18
    self.memory_storage = memory_storage if memory_storage else MemoryStorage:
                                                                             ^
SyntaxError: invalid syntax

.\apps\backend\src\ai\context\memory_context.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (memory_context.py, line 15)
.\apps\backend\src\ai\context\model_context.py:   File ".\apps\backend\src\ai\context\model_context.py", line 15
    result: Any, duration: float, success: bool)
                                                ^
SyntaxError: expected ':'

.\apps\backend\src\ai\context\tool_context.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (tool_context.py, line 15)
.\apps\backend\src\ai\context\utils.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 22 (utils.py, line 24)
.\apps\backend\src\ai\context\storage\base.py:   File ".\apps\backend\src\ai\context\storage\base.py", line 8
    class ContextType(Enum)
                           ^
SyntaxError: expected ':'

.\apps\backend\src\ai\context\storage\database.py:   File ".\apps\backend\src\ai\context\storage\database.py", line 10
    class DatabaseStorage(Storage)
                                  ^
SyntaxError: expected ':'

.\apps\backend\src\ai\context\storage\disk.py:   File ".\apps\backend\src\ai\context\storage\disk.py", line 12
    class DiskStorage(Storage)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\ai\crisis\crisis_system.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (crisis_system.py, line 9)
.\apps\backend\src\ai\deep_mapper\mapper.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (mapper.py, line 11)
.\apps\backend\src\ai\dialogue\dialogue_manager.py:   File ".\apps\backend\src\ai\dialogue\dialogue_manager.py", line 50
    **kwargs) # Catch other services that might be passed
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: expected ':'

.\apps\backend\src\ai\dialogue\project_coordinator.py:   File ".\apps\backend\src\ai\dialogue\project_coordinator.py", line 34
    dialogue_manager_config: Dict[str, Any])
                                            ^
SyntaxError: expected ':'

.\apps\backend\src\ai\discovery\service_discovery_module.py: Sorry: IndentationError: expected an indented block after function definition on line 25 (service_discovery_module.py, line 26)
.\apps\backend\src\ai\emotion\emotion_system.py: Sorry: IndentationError: unexpected indent (emotion_system.py, line 11)
.\apps\backend\src\ai\evaluation\evaluation_db.py: Sorry: IndentationError: expected an indented block after function definition on line 11 (evaluation_db.py, line 12)
.\apps\backend\src\ai\formula_engine\__init__.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (__init__.py, line 14)
.\apps\backend\src\ai\integration\unified_control_center.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (unified_control_center.py, line 19)
.\apps\backend\src\ai\language_models\daily_language_model.py:   File ".\apps\backend\src\ai\language_models\daily_language_model.py", line 21
    def set_llm_service(self, llm_service: MultiLLMService)
                                                           ^
SyntaxError: expected ':'

.\apps\backend\src\ai\language_models\registry.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (registry.py, line 19)
.\apps\backend\src\ai\language_models\router.py:   File ".\apps\backend\src\ai\language_models\router.py", line 28
    self.registry = registry:
                            ^
SyntaxError: invalid syntax

.\apps\backend\src\ai\learning\content_analyzer_module.py:   File ".\apps\backend\src\ai\learning\content_analyzer_module.py", line 17
    class ProcessedTripleInfo(TypedDict)
                                        ^
SyntaxError: expected ':'

.\apps\backend\src\ai\learning\experience_replay.py: Sorry: IndentationError: expected an indented block after function definition on line 7 (experience_replay.py, line 8)
.\apps\backend\src\ai\learning\fact_extractor_module.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (fact_extractor_module.py, line 14)
.\apps\backend\src\ai\learning\learning_manager.py:   File ".\apps\backend\src\ai\learning\learning_manager.py", line 31
    operational_config: Optional[Dict[str, Any]] = None)
                                                        ^
SyntaxError: expected ':'

.\apps\backend\src\ai\learning\self_critique_module.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (self_critique_module.py, line 9)
.\apps\backend\src\ai\lis\lis_cache_interface.py:   File ".\apps\backend\src\ai\lis\lis_cache_interface.py", line 50
    class LISCacheInterface(ABC)
                                ^
SyntaxError: expected ':'

.\apps\backend\src\ai\memory\ham_memory_manager.py:   File ".\apps\backend\src\ai\memory\ham_memory_manager.py", line 35
    chroma_client: Optional[chromadb.Client] = None)
                                                    ^
SyntaxError: expected ':'

.\apps\backend\src\ai\memory\ham_types.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (ham_types.py, line 13)
.\apps\backend\src\ai\meta\learning_log_db.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (learning_log_db.py, line 11)
.\apps\backend\src\ai\optimization\distributed_processing.py:   File ".\apps\backend\src\ai\optimization\distributed_processing.py", line 56
    futures = 
              ^
SyntaxError: invalid syntax

.\apps\backend\src\ai\personality\personality_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 11 (personality_manager.py, line 12)
.\apps\backend\src\ai\rag\rag_manager.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 8 (rag_manager.py, line 10)
.\apps\backend\src\ai\reasoning\causal_reasoning_engine.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (causal_reasoning_engine.py, line 11)
.\apps\backend\src\ai\service_discovery\service_discovery_module.py: Sorry: IndentationError: expected an indented block after function definition on line 25 (service_discovery_module.py, line 26)
.\apps\backend\src\ai\symbolic_space\unified_symbolic_space.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (unified_symbolic_space.py, line 11)
.\apps\backend\src\ai\translation\simultaneous_translation.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (simultaneous_translation.py, line 14)
.\apps\backend\src\ai\trust\trust_manager_module.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (trust_manager_module.py, line 13)
.\apps\backend\src\ai\trust_manager\trust_manager_module.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (trust_manager_module.py, line 13)
.\apps\backend\src\ai\world_model\environment_simulator.py:   File ".\apps\backend\src\ai\world_model\environment_simulator.py", line 8
    async def predict(self, current_state: Dict[...]
                                           ^^^^^^^^^^
SyntaxError: invalid syntax. Perhaps you forgot a comma?

.\apps\backend\src\core\hsp\advanced_performance_optimizer.py: Sorry: IndentationError: expected an indented block after function definition on line 41 (advanced_performance_optimizer.py, line 42)
.\apps\backend\src\core\hsp\connector.py:   File ".\apps\backend\src\core\hsp\connector.py", line 37
    """Constructs a file URI for a given schema name.""":
                                                        ^
SyntaxError: invalid syntax

.\apps\backend\src\core\hsp\extensibility.py:   File ".\apps\backend\src\core\hsp\extensibility.py", line 30
    class HSPMessageHandler(ABC)
                                ^
SyntaxError: expected ':'

.\apps\backend\src\core\hsp\versioning.py: Sorry: IndentationError: expected an indented block after function definition on line 37 (versioning.py, line 38)
.\apps\backend\src\core\hsp\fallback\fallback_protocols.py:   File ".\apps\backend\src\core\hsp\fallback\fallback_protocols.py", line 13
    class ProtocolStatus(Enum)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\core\managers\agent_collaboration_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (agent_collaboration_manager.py, line 20)
.\apps\backend\src\core\managers\agent_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (agent_manager.py, line 14)
.\apps\backend\src\core\managers\core_service_demo.py: Sorry: IndentationError: unexpected indent (core_service_demo.py, line 10)
.\apps\backend\src\core\managers\core_service_manager.py:   File ".\apps\backend\src\core\managers\core_service_manager.py", line 24
    class ServiceStatus(Enum)
                             ^
SyntaxError: expected ':'

.\apps\backend\src\core\managers\demo_learning_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 21 (demo_learning_manager.py, line 22)
.\apps\backend\src\core\managers\execution_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 82 (execution_manager.py, line 83)
.\apps\backend\src\core\managers\execution_monitor.py:   File ".\apps\backend\src\core\managers\execution_monitor.py", line 27
    class ExecutionStatus(Enum)
                               ^
SyntaxError: expected ':'

.\apps\backend\src\core\managers\genesis.py:   File ".\apps\backend\src\core\managers\genesis.py", line 27
    def create_genesis_secret -> Tuple[str, str]:
                              ^^
SyntaxError: expected '('

.\apps\backend\src\core\managers\resource_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 25 (resource_manager.py, line 26)
.\apps\backend\src\core\managers\service_loader_example.py: Sorry: IndentationError: unexpected indent (service_loader_example.py, line 12)
.\apps\backend\src\core\managers\service_monitor.py:   File ".\apps\backend\src\core\managers\service_monitor.py", line 17
    class LogLevel(Enum)
                        ^
SyntaxError: expected ':'

.\apps\backend\src\core\services\ai_editor.py:   File ".\apps\backend\src\core\services\ai_editor.py", line 25
    """Handles data processing and transformation for the AI editor""":
                                                                      ^
SyntaxError: invalid syntax

.\apps\backend\src\core\services\ai_virtual_input_service.py: Sorry: IndentationError: unexpected indent (ai_virtual_input_service.py, line 15)
.\apps\backend\src\core\services\api_models.py:   File ".\apps\backend\src\core\services\api_models.py", line 69
    components: Dict[str, Any] = 
                                 ^
SyntaxError: invalid syntax

.\apps\backend\src\core\services\hot_reload_service.py:   File ".\apps\backend\src\core\services\hot_reload_service.py", line 13
    def get_hot_reload_service -> "HotReloadService":
                               ^^
SyntaxError: expected '('

.\apps\backend\src\core\services\resource_awareness_service.py: Sorry: IndentationError: expected an indented block after function definition on line 24 (resource_awareness_service.py, line 25)
.\apps\backend\src\core\services\sandbox_executor.py:   File ".\apps\backend\src\core\services\sandbox_executor.py", line 15
    EXECUTION_MONITORING_AVAILABLE = True
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: expected 'except' or 'finally' block

.\apps\backend\src\core\services\service_discovery.py:   File ".\apps\backend\src\core\services\service_discovery.py", line 16
    class ServiceStatus(Enum)
                             ^
SyntaxError: expected ':'

.\apps\backend\src\core\services\vision_service.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (vision_service.py, line 15)
.\apps\backend\src\core\shared\types\mappable_data_object.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (mappable_data_object.py, line 11)
.\apps\backend\src\core\shared\utils\env_utils.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 22 (env_utils.py, line 25)
.\apps\backend\src\core\tools\code_understanding_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (code_understanding_tool.py, line 13)
.\apps\backend\src\core\tools\csv_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (csv_tool.py, line 9)
.\apps\backend\src\core\tools\dependency_checker.py:   File ".\apps\backend\src\core\tools\dependency_checker.py", line 22
    def print_dependency_report()
                                 ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\image_generation_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (image_generation_tool.py, line 9)
.\apps\backend\src\core\tools\math_tool.py:   File ".\apps\backend\src\core\tools\math_tool.py", line 15
    def _load_math_model()
                          ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\tool_dispatcher.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 25 (tool_dispatcher.py, line 27)
.\apps\backend\src\core\tools\translation_tool.py:   File ".\apps\backend\src\core\tools\translation_tool.py", line 15
    def _load_dictionary()
                          ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\web_search_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 7 (web_search_tool.py, line 8)
.\apps\backend\src\core\tools\logic_model\evaluate_logic_model.py:   File ".\apps\backend\src\core\tools\logic_model\evaluate_logic_model.py", line 27
    def load_logic_test_dataset(file_path)
                                          ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\logic_model\lightweight_logic_model.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (lightweight_logic_model.py, line 14)
.\apps\backend\src\core\tools\logic_model\logic_data_generator.py:   File ".\apps\backend\src\core\tools\logic_model\logic_data_generator.py", line 20
    def generate_simple_proposition(max_nesting=1, current_nesting=0)
                                                                     ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\logic_model\logic_model_nn.py:   File ".\apps\backend\src\core\tools\logic_model\logic_model_nn.py", line 40
    def _ensure_tensorflow_is_imported()
                                        ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\logic_model\logic_parser_eval.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (logic_parser_eval.py, line 12)
.\apps\backend\src\core\tools\logic_model\simple_logic_generator.py:   File ".\apps\backend\src\core\tools\logic_model\simple_logic_generator.py", line 5
    def generate_simple_logic_dataset(num_samples=1000)
                                                       ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\logic_model\train_logic_model.py: Sorry: IndentationError: unexpected indent (train_logic_model.py, line 55)
.\apps\backend\src\core\tools\math_model\data_generator.py: Sorry: IndentationError: expected an indented block after 'with' statement on line 14 (data_generator.py, line 15)
.\apps\backend\src\core\tools\math_model\evaluate.py:   File ".\apps\backend\src\core\tools\math_model\evaluate.py", line 11
    def load_char_maps(file_path)
                                 ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\math_model\lightweight_math_model.py: Sorry: IndentationError: expected an indented block after function definition on line 11 (lightweight_math_model.py, line 12)
.\apps\backend\src\core\tools\math_model\model.py:   File ".\apps\backend\src\core\tools\math_model\model.py", line 35
    def _ensure_tensorflow_is_imported()
                                        ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\math_model\train.py:   File ".\apps\backend\src\core\tools\math_model\train.py", line 42
    def load_dataset(file_path)
                               ^
SyntaxError: expected ':'

.\apps\backend\src\core\tools\parameter_extractor\extractor.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (extractor.py, line 11)
.\apps\backend\src\data\models\unified_model_loader.py:   File ".\apps\backend\src\data\models\unified_model_loader.py", line 13
    _loaded_models =
                    ^
SyntaxError: invalid syntax

.\apps\backend\src\fragmenta\fragmenta_orchestrator.py: Sorry: IndentationError: expected an indented block after function definition on line 4 (fragmenta_orchestrator.py, line 5)
.\apps\backend\src\game\inventory.py: Sorry: IndentationError: expected an indented block after function definition on line 2 (inventory.py, line 3)
.\apps\backend\src\game\main.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (main.py, line 19)
.\apps\backend\src\game\npcs.py: Sorry: IndentationError: expected an indented block after function definition on line 6 (npcs.py, line 7)
.\apps\backend\src\game\scenes.py: Sorry: IndentationError: expected an indented block after function definition on line 6 (scenes.py, line 7)
.\apps\backend\src\game\scenes\village.py:   File ".\apps\backend\src\game\scenes\village.py", line 5
    class VillageScene(Scene)
                             ^
SyntaxError: expected ':'

.\apps\backend\src\hsp\connector.py:   File ".\apps\backend\src\hsp\connector.py", line 39
    """Constructs a file URI for a given schema name.""":
                                                        ^
SyntaxError: invalid syntax

.\apps\backend\src\hsp\performance_optimizer.py: Sorry: IndentationError: expected an indented block after function definition on line 36 (performance_optimizer.py, line 37)
.\apps\backend\src\hsp\__init__.py: SyntaxError: source code string cannot contain null bytes

.\apps\backend\src\hsp\bridge\data_aligner.py: Sorry: IndentationError: expected an indented block after function definition on line 3 (data_aligner.py, line 4)
.\apps\backend\src\hsp\bridge\message_bridge.py: Sorry: IndentationError: expected an indented block after class definition on line 10 (message_bridge.py, line 11)
.\apps\backend\src\hsp\external\external_connector.py:   File ".\apps\backend\src\hsp\external\external_connector.py", line 24
    def __init__(self, ai_id: str, broker_address: str, broker_port: int, client_id_suffix: str = "hsp_connector", tls_ca_certs: Optional[str] = None, tls_certfile: Optional[str] = None, tls_keyfile: Optional[str] = None, tls_insecure: bool = False, username: Optional[str] = None, password: Optional[str] = None)
                                                                                                                                                                                                                                                                                                                         ^
SyntaxError: expected ':'

.\apps\backend\src\hsp\fallback\fallback_protocols.py:   File ".\apps\backend\src\hsp\fallback\fallback_protocols.py", line 13
    class ProtocolStatus(Enum)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\hsp\internal\internal_bus.py: Sorry: IndentationError: expected an indented block after function definition on line 6 (internal_bus.py, line 7)
.\apps\backend\src\integrations\atlassian_bridge.py: Sorry: IndentationError: expected an indented block after function definition on line 40 (atlassian_bridge.py, line 41)
.\apps\backend\src\integrations\atlassian_cli_bridge.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (atlassian_cli_bridge.py, line 11)
.\apps\backend\src\integrations\confluence_integration.py:   File ".\apps\backend\src\integrations\confluence_integration.py", line 13
    """Confluence Integration for AI system""":
                                              ^
SyntaxError: invalid syntax

.\apps\backend\src\integrations\enhanced_atlassian_bridge.py: Sorry: IndentationError: expected an indented block after function definition on line 15 (enhanced_atlassian_bridge.py, line 16)
.\apps\backend\src\integrations\enhanced_rovo_dev_connector.py:   File ".\apps\backend\src\integrations\enhanced_rovo_dev_connector.py", line 23
    def __post_init__(self)
                           ^
SyntaxError: expected ':'

.\apps\backend\src\integrations\jira_integration.py:   File ".\apps\backend\src\integrations\jira_integration.py", line 14
    """Jira Integration for AI system""":
                                        ^
SyntaxError: invalid syntax

.\apps\backend\src\integrations\rovo_dev_agent.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 23 (rovo_dev_agent.py, line 25)
.\apps\backend\src\managers\agent_collaboration_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (agent_collaboration_manager.py, line 20)
.\apps\backend\src\managers\agent_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (agent_manager.py, line 14)
.\apps\backend\src\managers\demo_learning_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 20 (demo_learning_manager.py, line 21)
.\apps\backend\src\managers\dependency_manager.py:   File ".\apps\backend\src\managers\dependency_manager.py", line 18
    fallback_available: bool = False, fallback_name: Optional[str] = None)
                                                                          ^
SyntaxError: expected ':'

.\apps\backend\src\managers\execution_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 81 (execution_manager.py, line 82)
.\apps\backend\src\managers\execution_monitor.py:   File ".\apps\backend\src\managers\execution_monitor.py", line 26
    class ExecutionStatus(Enum)
                               ^
SyntaxError: expected ':'

.\apps\backend\src\managers\genesis.py:   File ".\apps\backend\src\managers\genesis.py", line 25
    def create_genesis_secret -> Tuple[str, str]:
                              ^^
SyntaxError: expected '('

.\apps\backend\src\mcp\connector.py:   File ".\apps\backend\src\mcp\connector.py", line 14
    enable_fallback: bool = True, fallback_config: Optional[Dict[str, Any]] = None, loop: Optional[asyncio.AbstractEventLoop] = None)
                                                                                                                                     ^
SyntaxError: expected ':'

.\apps\backend\src\mcp\context7_connector.py:   File ".\apps\backend\src\mcp\context7_connector.py", line 19
    """Configuration for Context7 MCP integration.""":
                                                     ^
SyntaxError: invalid syntax

.\apps\backend\src\mcp\fallback\mcp_fallback_protocols.py:   File ".\apps\backend\src\mcp\fallback\mcp_fallback_protocols.py", line 19
    class MCPProtocolStatus(Enum)
                                 ^
SyntaxError: expected ':'

.\apps\backend\src\modules_fragmenta\element_layer.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (element_layer.py, line 9)
.\apps\backend\src\modules_fragmenta\vision_tone_inverter.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (vision_tone_inverter.py, line 9)
.\apps\backend\src\monitoring\system_monitor.py:   File ".\apps\backend\src\monitoring\system_monitor.py", line 29
    def to_dict(self)
                     ^
SyntaxError: expected ':'

.\apps\backend\src\optimization\performance_optimizer.py: Sorry: IndentationError: expected an indented block after function definition on line 40 (performance_optimizer.py, line 41)
.\apps\backend\src\search\search_engine.py: Sorry: IndentationError: expected an indented block after function definition on line 6 (search_engine.py, line 7)
.\apps\backend\src\security\audit_logger.py:   File ".\apps\backend\src\security\audit_logger.py", line 19
    class AuditEventType(Enum)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\security\permission_control.py:   File ".\apps\backend\src\security\permission_control.py", line 17
    class PermissionType(Enum)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\services\ai_editor.py:   File ".\apps\backend\src\services\ai_editor.py", line 25
    """Handles data processing and transformation for the AI editor""":
                                                                      ^
SyntaxError: invalid syntax

.\apps\backend\src\services\ai_virtual_input_service.py: Sorry: IndentationError: expected an indented block after function definition on line 34 (ai_virtual_input_service.py, line 35)
.\apps\backend\src\services\api_models.py:   File ".\apps\backend\src\services\api_models.py", line 69
    components: Dict[str, Any] = 
                                 ^
SyntaxError: invalid syntax

.\apps\backend\src\services\audio_service.py: Sorry: IndentationError: expected an indented block after function definition on line 16 (audio_service.py, line 17)
.\apps\backend\src\services\hot_reload_service.py:   File ".\apps\backend\src\services\hot_reload_service.py", line 11
    def get_hot_reload_service -> "HotReloadService":
                               ^^
SyntaxError: expected '('

.\apps\backend\src\services\main_api_server.py:   File ".\apps\backend\src\services\main_api_server.py", line 30
    from ..ai.language_models.registry import ModelRegistry:
                                                           ^
SyntaxError: invalid syntax

.\apps\backend\src\services\multi_llm_service.py:   File ".\apps\backend\src\services\multi_llm_service.py", line 67
    class ModelProvider(Enum)
                             ^
SyntaxError: expected ':'

.\apps\backend\src\services\resource_awareness_service.py: Sorry: IndentationError: expected an indented block after function definition on line 24 (resource_awareness_service.py, line 25)
.\apps\backend\src\services\vision_service.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (vision_service.py, line 14)
.\apps\backend\src\shared\types\mappable_data_object.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (mappable_data_object.py, line 11)
.\apps\backend\src\shared\utils\env_utils.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 22 (env_utils.py, line 25)
.\apps\backend\src\system\deployment_manager.py:   File ".\apps\backend\src\system\deployment_manager.py", line 19
    class DeploymentMode(Enum)
                              ^
SyntaxError: expected ':'

.\apps\backend\src\system\hardware_probe.py: Sorry: IndentationError: expected an indented block after function definition on line 81 (hardware_probe.py, line 82)
.\apps\backend\src\system\integrated_graphics_optimizer.py: Sorry: IndentationError: expected an indented block after function definition on line 15 (integrated_graphics_optimizer.py, line 16)
.\apps\backend\src\tools\code_understanding_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (code_understanding_tool.py, line 13)
.\apps\backend\src\tools\csv_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (csv_tool.py, line 9)
.\apps\backend\src\tools\dependency_checker.py:   File ".\apps\backend\src\tools\dependency_checker.py", line 22
    def print_dependency_report()
                                 ^
SyntaxError: expected ':'

.\apps\backend\src\tools\image_generation_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 8 (image_generation_tool.py, line 9)
.\apps\backend\src\tools\math_tool.py:   File ".\apps\backend\src\tools\math_tool.py", line 19
    def _load_math_model()
                          ^
SyntaxError: expected ':'

.\apps\backend\src\tools\tool_dispatcher.py:   File ".\apps\backend\src\tools\tool_dispatcher.py", line 37
    def _get_ham(self)
                      ^
SyntaxError: expected ':'

.\apps\backend\src\tools\translation_tool.py:   File ".\apps\backend\src\tools\translation_tool.py", line 14
    def _load_dictionary()
                          ^
SyntaxError: expected ':'

.\apps\backend\src\tools\web_search_tool.py: Sorry: IndentationError: expected an indented block after function definition on line 7 (web_search_tool.py, line 8)
.\apps\backend\src\tools\logic_model\evaluate_logic_model.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 32 (evaluate_logic_model.py, line 34)
.\apps\backend\src\tools\logic_model\lightweight_logic_model.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (lightweight_logic_model.py, line 16)
.\apps\backend\src\tools\logic_model\logic_data_generator.py:   File ".\apps\backend\src\tools\logic_model\logic_data_generator.py", line 21
    def generate_simple_proposition(max_nesting=1, current_nesting=0)
                                                                     ^
SyntaxError: expected ':'

.\apps\backend\src\tools\logic_model\logic_model_nn.py:   File ".\apps\backend\src\tools\logic_model\logic_model_nn.py", line 42
    def _ensure_tensorflow_is_imported()
                                        ^
SyntaxError: expected ':'

.\apps\backend\src\tools\logic_model\logic_parser_eval.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (logic_parser_eval.py, line 12)
.\apps\backend\src\tools\logic_model\simple_logic_generator.py:   File ".\apps\backend\src\tools\logic_model\simple_logic_generator.py", line 5
    def generate_simple_logic_dataset(num_samples=1000)
                                                       ^
SyntaxError: expected ':'

.\apps\backend\src\tools\logic_model\train_logic_model.py:   File ".\apps\backend\src\tools\logic_model\train_logic_model.py", line 40
    if hasattr(tf_imported, 'keras')
                                    ^
SyntaxError: expected ':'

.\apps\backend\src\tools\math_model\data_generator.py:   File ".\apps\backend\src\tools\math_model\data_generator.py", line 29
    if isinstance(node, ast.Constant)  # Python 3.8+
                                       ^^^^^^^^^^^^^^
SyntaxError: expected ':'

.\apps\backend\src\tools\math_model\evaluate.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 30 (evaluate.py, line 32)
.\apps\backend\src\tools\math_model\train.py:   File ".\apps\backend\src\tools\math_model\train.py", line 42
    def load_dataset(file_path)
                               ^
SyntaxError: expected ':'

.\apps\backend\src\tools\parameter_extractor\extractor.py: Sorry: IndentationError: expected an indented block after function definition on line 10 (extractor.py, line 11)
.\auto_fix_workspace\scripts\auto_fix_project.py:   File ".\auto_fix_workspace\scripts\auto_fix_project.py", line 12
    def check_virtual_environment()
                                   ^
SyntaxError: expected ':'

.\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v2.py:   File ".\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v2.py", line 254
    def_match = re.search(r'def\s+\w+\s*[^(
                          ^
SyntaxError: unterminated string literal (detected at line 254)

.\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v3.py:   File ".\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v3.py", line 252
    def_match = re.search(r'def\s+\w+\s*[^(
                          ^
SyntaxError: unterminated string literal (detected at line 252)

.\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v4.py:   File ".\auto_fix_workspace\scripts\enhanced_layered_auto_fix_v4.py", line 252
    def_match = re.search(r'def\s+\w+\s*[^(
                          ^
SyntaxError: unterminated string literal (detected at line 252)

.\auto_fix_workspace\scripts\unified_auto_fix.py:   File ".\auto_fix_workspace\scripts\unified_auto_fix.py", line 31
    class OperationMode(Enum)
                             ^
SyntaxError: expected ':'

.\backup\20250927_062428\apps\backend\check_person_title_v2.py:   File ".\backup\20250927_062428\apps\backend\check_person_title_v2.py", line 40
    _ = {"POS": {"IN": ["NOUN", "ADJ", "DET"]}, "OP": "*"},  # TITLE (e.g., "a CEO", "the founder")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\detailed_debug.py:   File ".\backup\20250927_062428\apps\backend\detailed_debug.py", line 15
    _ = ("Microsoft is based in Redmond.", "BASED_IN pattern"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\final_test.py:   File ".\backup\20250927_062428\apps\backend\final_test.py", line 16
    _ = ("Microsoft is based in Redmond.", "BASED_IN"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\fix_hsp_integration.py:   File ".\backup\20250927_062428\apps\backend\fix_hsp_integration.py", line 45
    _ = new_lines.append('                self.logger.error(f"Failed to publish fact {fact_payload.get(\'id\')}.").replace(").replace(", "")
                         ^
SyntaxError: unterminated string literal (detected at line 45)

.\backup\20250927_062428\apps\backend\run_test_fix.py:   File ".\backup\20250927_062428\apps\backend\run_test_fix.py", line 35
    _ = assert hasattr(mock_services["dialogue_manager"], "get_simple_response")
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scan_placeholders.py:   File ".\backup\20250927_062428\apps\backend\scan_placeholders.py", line 30
    _ = 'file': str(file_path),
    ^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\simple_verify.py:   File ".\backup\20250927_062428\apps\backend\simple_verify.py", line 13
    _ = ("ent_microsoft_982f4d3c", "ent_redmond_0a494868"): {
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\test_agi_integration.py:   File ".\backup\20250927_062428\apps\backend\test_agi_integration.py", line 34
    _ = 'task_id': task.get('id'),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\chromadb_local\config.py: Sorry: IndentationError: unexpected indent (config.py, line 2)
.\backup\20250927_062428\apps\backend\chromadb_local\__init__.py:   File ".\backup\20250927_062428\apps\backend\chromadb_local\__init__.py", line 29
    _ = raise ValueError("documents, metadatas, and ids must have the same length")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\advanced_auto_fix.py:   File ".\backup\20250927_062428\apps\backend\scripts\advanced_auto_fix.py", line 312
    _ = "import sys; sys.path.insert(0, '.'); "
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\automated_integration_test_pipeline.py:   File ".\backup\20250927_062428\apps\backend\scripts\automated_integration_test_pipeline.py", line 18
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\auto_fix_complete.py:   File ".\backup\20250927_062428\apps\backend\scripts\auto_fix_complete.py", line 127
    _ = (r'from\s+\.\.services\.', 'from apps.backend.src.core.services.'),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\continuous_test_improvement.py:   File ".\backup\20250927_062428\apps\backend\scripts\continuous_test_improvement.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\coverage_analyzer.py:   File ".\backup\20250927_062428\apps\backend\scripts\coverage_analyzer.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\coverage_monitor.py:   File ".\backup\20250927_062428\apps\backend\scripts\coverage_monitor.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\enhanced_auto_fix.py:   File ".\backup\20250927_062428\apps\backend\scripts\enhanced_auto_fix.py", line 26
    _ = "async_warnings": self._fix_async_warnings(),
    ^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\error_analyzer.py:   File ".\backup\20250927_062428\apps\backend\scripts\error_analyzer.py", line 44
    _ = ErrorType.TIMEOUT_ERROR: r"(TimeoutError|test timeout exceeded)",
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\scripts\execute_smart_fix.py:   File ".\backup\20250927_062428\apps\backend\scripts\execute_smart_fix.py", line 42
    _ = "python", str(smart_fix_script), "--all"
    ^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\final_validation.py: Sorry: IndentationError: unindent does not match any outer indentation level (final_validation.py, line 74)
.\backup\20250927_062428\apps\backend\scripts\generate_test_report.py:   File ".\backup\20250927_062428\apps\backend\scripts\generate_test_report.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\integration_fixer.py:   File ".\backup\20250927_062428\apps\backend\scripts\integration_fixer.py", line 82
    _ = "file": str(hsp_connector_path),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\scripts\integration_test.py:   File ".\backup\20250927_062428\apps\backend\scripts\integration_test.py", line 21
    _ = ("简化版修复工具", "scripts/simple_auto_fix.py"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\manage_backup_dirs.py:   File ".\backup\20250927_062428\apps\backend\scripts\manage_backup_dirs.py", line 14
    level: str=logging.INFO, 
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\performance_benchmark_framework.py:   File ".\backup\20250927_062428\apps\backend\scripts\performance_benchmark_framework.py", line 21
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\performance_benchmark_workflow.py:   File ".\backup\20250927_062428\apps\backend\scripts\performance_benchmark_workflow.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\performance_regression_detector.py:   File ".\backup\20250927_062428\apps\backend\scripts\performance_regression_detector.py", line 19
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\scripts\runtime_auto_fix.py:   File ".\backup\20250927_062428\apps\backend\scripts\runtime_auto_fix.py", line 29
    _ = "import_error": r"ModuleNotFoundError: No module named '([^']+)'",
    ^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\run_integration_tests.py:   File ".\backup\20250927_062428\apps\backend\scripts\run_integration_tests.py", line 153
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\smart_auto_fix.py:   File ".\backup\20250927_062428\apps\backend\scripts\smart_auto_fix.py", line 218
    _ = "file": str(file_path),
    ^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\smart_dev_runner.py:   File ".\backup\20250927_062428\apps\backend\scripts\smart_dev_runner.py", line 407
    _ = r"ModuleNotFoundError: No module named '([^']+)'",
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\smart_executor.py:   File ".\backup\20250927_062428\apps\backend\scripts\smart_executor.py", line 27
    _ = r"ModuleNotFoundError: No module named '(\w+)'",
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\smart_test_runner.py:   File ".\backup\20250927_062428\apps\backend\scripts\smart_test_runner.py", line 49
    _ = r"ModuleNotFoundError: No module named '([^']+)'",
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\test_data_manager.py:   File ".\backup\20250927_062428\apps\backend\scripts\test_data_manager.py", line 48
    _ = "created_at": datetime.now().isoformat()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\scripts\test_fix_demo.py:   File ".\backup\20250927_062428\apps\backend\scripts\test_fix_demo.py", line 61
    _ = "python", str(test_file)
    ^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\test_quality_assessor.py:   File ".\backup\20250927_062428\apps\backend\scripts\test_quality_assessor.py", line 67
    _ = "assessment_timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\test_result_analyzer.py:   File ".\backup\20250927_062428\apps\backend\scripts\test_result_analyzer.py", line 149
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\test_runner.py:   File ".\backup\20250927_062428\apps\backend\scripts\test_runner.py", line 70
    _ = "command": " ".join(cmd),
    ^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\scripts\workflow_controller.py:   File ".\backup\20250927_062428\apps\backend\scripts\workflow_controller.py", line 148
    _ = "-File", str(script_path)
    ^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_services.py:   File ".\backup\20250927_062428\apps\backend\src\core_services.py", line 669
    _ = hasattr(learning_manager_instance, 'process_and_store_hsp_fact') and 
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\system_integration.py:   File ".\backup\20250927_062428\apps\backend\src\system_integration.py", line 81
    _ = "message": f"Error processing request: {str(e)}"
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\agents\audio_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\audio_processing_agent.py", line 61
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (noise_reduction, clarity, etc.)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\agents\base_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\base_agent.py", line 145
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\agents\code_understanding_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\code_understanding_agent.py", line 37
    _ = {"name": "style", "type": "string", "required": False, "description": "Documentation style (e.g., 'technical', 'user')"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\agents\collaboration_demo_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\collaboration_demo_agent.py", line 68
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\agents\creative_writing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\creative_writing_agent.py", line 77
    _ = raise ValueError("Both product_description and target_audience are required")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\agents\data_analysis_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\data_analysis_agent.py", line 26
    _ = {"name": "analysis_type", "type": "string", "required": True, "description": "Type of analysis to perform (e.g., 'descriptive', 'correlation')"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\agents\enhanced_demo_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\enhanced_demo_agent.py", line 140
    _ = "is_healthy": self.is_healthy(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\agents\knowledge_graph_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\knowledge_graph_agent.py", line 99
    _ = "start": text.find(clean_word),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\agents\monitoring_demo_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\monitoring_demo_agent.py", line 72
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\agents\nlp_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\nlp_processing_agent.py", line 24
    _ = {"name": "summary_length", "type": "string", "required": False, "description": "Desired summary length (short, medium, long)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\agents\planning_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\planning_agent.py", line 162
    _ = "start_date": task_start.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\agents\registry_demo_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\registry_demo_agent.py", line 71
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\agents\vision_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\agents\vision_processing_agent.py", line 44
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (sharpen, denoise, brighten)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\audio_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\audio_processing_agent.py", line 43
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (noise_reduction, clarity, etc.)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\code_understanding_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\code_understanding_agent.py", line 36
    _ = {"name": "style", "type": "string", "required": False, "description": "Documentation style (e.g., 'technical', 'user')"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\data_analysis_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\data_analysis_agent.py", line 23
    _ = {"name": "analysis_type", "type": "string", "required": False, "description": "Type of analysis (mean, median, std, correlation)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\knowledge_graph_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\knowledge_graph_agent.py", line 101
    _ = "start": text.find(clean_word),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\nlp_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\nlp_processing_agent.py", line 24
    _ = {"name": "summary_length", "type": "string", "required": False, "description": "Desired summary length (short, medium, long)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\planning_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\planning_agent.py", line 162
    _ = "start_date": task_start.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\agents\specialized\vision_processing_agent.py:   File ".\backup\20250927_062428\apps\backend\src\ai\agents\specialized\vision_processing_agent.py", line 44
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (sharpen, denoise, brighten)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\code_understanding\lightweight_code_model.py:   File ".\backup\20250927_062428\apps\backend\src\ai\code_understanding\lightweight_code_model.py", line 200
    _ = "docstring": ast.get_docstring(node),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\compression\alpha_deep_model.py:   File ".\backup\20250927_062428\apps\backend\src\ai\compression\alpha_deep_model.py", line 76
    _ = raise ValueError(f"Node {from_node} not found in chain")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\concept_models\adaptive_learning_controller.py:   File ".\backup\20250927_062428\apps\backend\src\ai\concept_models\adaptive_learning_controller.py", line 36
    _ = effectiveness: float  # 策略有效性 (0-1)
                     ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\concept_models\alpha_deep_model.py:   File ".\backup\20250927_062428\apps\backend\src\ai\concept_models\alpha_deep_model.py", line 81
    _ = raise ValueError(f"Node {from_node} not found in chain")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\concept_models\causal_reasoning_engine.py:   File ".\backup\20250927_062428\apps\backend\src\ai\concept_models\causal_reasoning_engine.py", line 21
    _ = strength: float  # 因果关系强度 (0-1)
                ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\concept_models\environment_simulator.py:   File ".\backup\20250927_062428\apps\backend\src\ai\concept_models\environment_simulator.py", line 281
    effect["light_change"] = action.parameters.get("level", 0.5) - \
                             
SyntaxError: cannot assign to expression

.\backup\20250927_062428\apps\backend\src\ai\concept_models\integration_test.py:   File ".\backup\20250927_062428\apps\backend\src\ai\concept_models\integration_test.py", line 61
    _ = CausalRelationship("temperature", "comfort_level", 0.8, 0.9)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\dialogue\dialogue_manager.py:   File ".\backup\20250927_062428\apps\backend\src\ai\dialogue\dialogue_manager.py", line 165
    _ = "timestamp": datetime.now(timezone.utc).isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\dialogue\project_coordinator.py:   File ".\backup\20250927_062428\apps\backend\src\ai\dialogue\project_coordinator.py", line 115
    _ = else: raise ValueError(f"Task {i} has an invalid dependency on a future task {dep_index}.")
        ^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\discovery\service_discovery_module.py:   File ".\backup\20250927_062428\apps\backend\src\ai\discovery\service_discovery_module.py", line 134
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\ai\emotion\emotion_system.py:   File ".\backup\20250927_062428\apps\backend\src\ai\emotion\emotion_system.py", line 19
    _ = "empathetic": {"text_ending": " (gently)"},
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\evaluation\evaluation_db.py:   File ".\backup\20250927_062428\apps\backend\src\ai\evaluation\evaluation_db.py", line 75
    _ = "metrics": json.loads(row[3]),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\evaluation\task_evaluator.py:   File ".\backup\20250927_062428\apps\backend\src\ai\evaluation\task_evaluator.py", line 26
    _ = "cpu_usage": round(min(1.0, cpu_usage), 4), # Cap at 100%
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\formula_engine\__init__.py:   File ".\backup\20250927_062428\apps\backend\src\ai\formula_engine\__init__.py", line 142
    _ = "action_name": formula.get("action"),
    ^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\integration\unified_control_center.py:   File ".\backup\20250927_062428\apps\backend\src\ai\integration\unified_control_center.py", line 125
    _ = 'error': str(e),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\knowledge_graph\types.py:   File ".\backup\20250927_062428\apps\backend\src\ai\knowledge_graph\types.py", line 26
    _ = type: Required[str]      # Type of the relationship (e.g., "is_a", "works_for", verb_lemma)
            ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\language_models\daily_language_model.py:   File ".\backup\20250927_062428\apps\backend\src\ai\language_models\daily_language_model.py", line 229
    _ = "parameters": {"query": "(true or false) and true", "method": "parser"}}),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\learning\content_analyzer_module.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 10 (content_analyzer_module.py, line 14)
.\backup\20250927_062428\apps\backend\src\ai\learning\experience_replay.py:   File ".\backup\20250927_062428\apps\backend\src\ai\learning\experience_replay.py", line 22
    _ = 'timestamp': datetime.now(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\learning\fact_extractor_module.py:   File ".\backup\20250927_062428\apps\backend\src\ai\learning\fact_extractor_module.py", line 78
    _ = "fact_type" in item_raw and isinstance(item_raw["fact_type"], str) and \
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\learning\learning_manager.py:   File ".\backup\20250927_062428\apps\backend\src\ai\learning\learning_manager.py", line 167
    _ = "hsp_originator_ai_id": hsp_fact_payload.get('source_ai_id')
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\learning\self_critique_module.py:   File ".\backup\20250927_062428\apps\backend\src\ai\learning\self_critique_module.py", line 66
    _ = "score": float(parsed_critique["score"]),
    ^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\lis\lis_cache_interface.py:   File ".\backup\20250927_062428\apps\backend\src\ai\lis\lis_cache_interface.py", line 276
    _ = HAM_META_LIS_OBJECT_ID: incident_record.get("incident_id"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\memory\ham_memory_manager.py:   File ".\backup\20250927_062428\apps\backend\src\ai\memory\ham_memory_manager.py", line 294
    _ = "original_length": len(text),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\memory\ham_types.py:   File ".\backup\20250927_062428\apps\backend\src\ai\memory\ham_types.py", line 15
    _ = "timestamp": self.timestamp.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\memory\vector_store.py:   File ".\backup\20250927_062428\apps\backend\src\ai\memory\vector_store.py", line 174
    _ = raise VectorStoreError("Vector store is not initialized. Cannot add memory.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\meta\adaptive_learning_controller.py:   File ".\backup\20250927_062428\apps\backend\src\ai\meta\adaptive_learning_controller.py", line 209
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\meta_formulas\meta_formula.py:   File ".\backup\20250927_062428\apps\backend\src\ai\meta_formulas\meta_formula.py", line 14
    _ = raise NotImplementedError("This meta-formula has not been implemented yet.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\personality\personality_manager.py:   File ".\backup\20250927_062428\apps\backend\src\ai\personality\personality_manager.py", line 98
    _ = {"name": name, "display_name": info.get("display_name", name)}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\rag\rag_manager.py:   File ".\backup\20250927_062428\apps\backend\src\ai\rag\rag_manager.py", line 25
    _ = raise RuntimeError("SentenceTransformer is not available. RAG functionality is disabled.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\ai\reasoning\causal_reasoning_engine.py:   File ".\backup\20250927_062428\apps\backend\src\ai\reasoning\causal_reasoning_engine.py", line 106
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\ai\symbolic_space\unified_symbolic_space.py:   File ".\backup\20250927_062428\apps\backend\src\ai\symbolic_space\unified_symbolic_space.py", line 78
    _ = 'properties': json.loads(row[3])
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\test_utils\deadlock_detector.py:   File ".\backup\20250927_062428\apps\backend\src\ai\test_utils\deadlock_detector.py", line 104
    _ = 'first_seen': time.time(),
    ^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\ai\translation\simultaneous_translation.py:   File ".\backup\20250927_062428\apps\backend\src\ai\translation\simultaneous_translation.py", line 49
    _ = "translated_text": (chunk or ""),  # mock
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\ai\world_model\environment_simulator.py:   File ".\backup\20250927_062428\apps\backend\src\ai\world_model\environment_simulator.py", line 132
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core\hsp\advanced_performance_optimizer.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\advanced_performance_optimizer.py", line 101
    _ = 'created_at': time.time(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\hsp\connector.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\connector.py", line 362
    _ = 'timestamp': time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\hsp\extensibility.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\extensibility.py", line 144
    _ = raise ValueError(f"Message decryption failed: {e}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\hsp\performance_optimizer.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\performance_optimizer.py", line 55
    _ = 'timestamp': time.time(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\hsp\security.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\security.py", line 197
    format: str=serialization.PublicFormat.SubjectPublicKeyInfo
          ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core\hsp\types.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\types.py", line 166
    _ = phenomenon_type: str # Required, URI/namespaced string (e.g., "hsp:event:UserMoodShift")
                       ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\hsp\versioning.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\versioning.py", line 156
    _ = raise ValueError(f"未找到版本转换器: {version_pair}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\hsp\fallback\fallback_protocols.py:   File ".\backup\20250927_062428\apps\backend\src\core\hsp\fallback\fallback_protocols.py", line 149
    _ = 'timestamp': time.time(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\managers\agent_collaboration_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\agent_collaboration_manager.py", line 50
    _ = "total_subtasks": len(subtasks),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\managers\core_service_demo.py: Sorry: IndentationError: unexpected indent (core_service_demo.py, line 10)
.\backup\20250927_062428\apps\backend\src\core\managers\core_service_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\core_service_manager.py", line 257
    _ = raise ValueError(f"Circular dependency detected involving {name}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\managers\demo_learning_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\demo_learning_manager.py", line 33
    self.storage_path = Path(self.config.get('demo_credentials', {})
                             ^
SyntaxError: invalid syntax. Perhaps you forgot a comma?

.\backup\20250927_062428\apps\backend\src\core\managers\dependency_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\dependency_manager.py", line 78
    all_deps = self._config.get('dependencies', {}).get('core', []) + \
               ^
SyntaxError: cannot assign to expression

.\backup\20250927_062428\apps\backend\src\core\managers\execution_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\execution_manager.py", line 257
    _ = 'timestamp': time.time(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\managers\execution_monitor.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\execution_monitor.py", line 228
    _ = 'timestamp': time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\managers\genesis.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\genesis.py", line 97
    _ = assert genesis_secret.startswith(uid)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\managers\resource_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\resource_manager.py", line 181
    // 如果缓存大小超过限制，清理最旧的条目
                 ^
SyntaxError: invalid character '，' (U+FF0C)

.\backup\20250927_062428\apps\backend\src\core\managers\service_loader_example.py: Sorry: IndentationError: unexpected indent (service_loader_example.py, line 13)
.\backup\20250927_062428\apps\backend\src\core\managers\service_monitor.py:   File ".\backup\20250927_062428\apps\backend\src\core\managers\service_monitor.py", line 86
    level: str=level: str,
         ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core\services\ai_editor.py:   File ".\backup\20250927_062428\apps\backend\src\core\services\ai_editor.py", line 52
    _ = raise ValueError(f"Unsupported data type: {data_type}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\services\ai_virtual_input_service.py: Sorry: IndentationError: unexpected indent (ai_virtual_input_service.py, line 15)
.\backup\20250927_062428\apps\backend\src\core\services\atlassian_api.py:   File ".\backup\20250927_062428\apps\backend\src\core\services\atlassian_api.py", line 46
    _ = @atlassian_router.post("/configure")
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\services\multi_llm_service.py:   File ".\backup\20250927_062428\apps\backend\src\core\services\multi_llm_service.py", line 161
    _ = "prompt_tokens": usage_dict.get("prompt_tokens", 0),
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\services\resource_awareness_service.py: Sorry: IndentationError: unexpected indent (resource_awareness_service.py, line 9)
.\backup\20250927_062428\apps\backend\src\core\services\sandbox_executor.py: Sorry: IndentationError: unindent does not match any outer indentation level (sandbox_executor.py, line 13)
.\backup\20250927_062428\apps\backend\src\core\services\vision_service.py:   File ".\backup\20250927_062428\apps\backend\src\core\services\vision_service.py", line 53
    _ = "image_size": len(image_data),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\shared\network_resilience.py:   File ".\backup\20250927_062428\apps\backend\src\core\shared\network_resilience.py", line 39
    _ = raise NetworkError(f"Operation failed after {self.max_attempts} attempts due to network issues.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\tools\calculator_tool.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\calculator_tool.py", line 29
    _ = raise TypeError(node)
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\tools\logic_tool.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\logic_tool.py", line 49
    _ = raise FileNotFoundError("NN Model or Char Map not found.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\tools\math_tool.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\math_tool.py", line 24
    _ = raise FileNotFoundError("Model or char map file not found.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\tools\tool_dispatcher.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\tool_dispatcher.py", line 52
    _ = "ham_meta_tool_name": record.get("tool_name"),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core\tools\translation_tool.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\translation_tool.py", line 146
    _ = ("你好", "en", "Hello"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\tools\logic_model\evaluate_logic_model.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 14 (evaluate_logic_model.py, line 15)
.\backup\20250927_062428\apps\backend\src\core\tools\logic_model\lightweight_logic_model.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\logic_model\lightweight_logic_model.py", line 37
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core\tools\logic_model\logic_parser_eval.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\logic_model\logic_parser_eval.py", line 13
    _ = (r'\s+', None),  # Whitespace
    ^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\tools\logic_model\train_logic_model.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\logic_model\train_logic_model.py", line 56
    _ = raise ValueError("Dataset format is incorrect. Expected list of {'proposition': str, 'answer': bool}.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core\tools\math_model\data_generator.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\math_model\data_generator.py", line 92
    _ = "output_path": str(filepath),
    ^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\tools\math_model\lightweight_math_model.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\math_model\lightweight_math_model.py", line 190
    _ = 'error': str(e),
    ^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core\tools\math_model\train.py:   File ".\backup\20250927_062428\apps\backend\src\core\tools\math_model\train.py", line 49
    _ = raise ValueError("Dataset format is incorrect. Expected a list of {'problem': str, 'answer': str} dicts.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\agent_monitoring_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\agent_monitoring_manager.py", line 294
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\demo_learning_manager.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 19 (demo_learning_manager.py, line 21)
.\backup\20250927_062428\apps\backend\src\core_ai\dependency_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\dependency_manager.py", line 78
    all_deps = self._config.get('dependencies', {}).get('core', []) + \
               ^
SyntaxError: cannot assign to expression

.\backup\20250927_062428\apps\backend\src\core_ai\dynamic_agent_registry.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\dynamic_agent_registry.py", line 116
    _ = "first_seen": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\emotion_system.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\emotion_system.py", line 23
    _ = "empathetic": {"text_ending": " (gently)"},
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\execution_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\execution_manager.py", line 299
    _ = 'timestamp': time.time(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\execution_monitor.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\execution_monitor.py", line 228
    _ = 'timestamp': time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\genesis.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\genesis.py", line 97
    _ = assert genesis_secret.startswith(uid)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\simultaneous_translation.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\simultaneous_translation.py", line 49
    _ = "translated_text": (chunk or ""),  # mock
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\code_understanding\lightweight_code_model.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\code_understanding\lightweight_code_model.py", line 192
    _ = "docstring": ast.get_docstring(node),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\compression\alpha_deep_model.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\compression\alpha_deep_model.py", line 77
    _ = raise ValueError(f"Node {from_node} not found in chain")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\context\dialogue_context.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\dialogue_context.py", line 69
    _ = "start_time": conversation.start_time.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\exceptions.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\exceptions.py", line 112
    _ = raise ContextNotFoundError("test_context_001")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\context\integration_with_ham.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\integration_with_ham.py", line 59
    _ = "created_at": context.created_at.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\manager.py", line 38
    _ = raise Exception("Failed to save context to memory storage")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\context\memory_context.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\memory_context.py", line 52
    _ = "created_at": memory.created_at.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\model_context.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\model_context.py", line 113
    _ = "timestamp": call_record.timestamp.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\tool_context.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\tool_context.py", line 156
    _ = "timestamp": usage_record.timestamp.isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\context\utils.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\utils.py", line 26
    _ = "created_at": context.created_at.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\__init__.py: Sorry: IndentationError: unexpected indent (__init__.py, line 3)
.\backup\20250927_062428\apps\backend\src\core_ai\context\storage\database.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\storage\database.py", line 28
    _ = "created_at": context.created_at.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\storage\disk.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\storage\disk.py", line 29
    _ = "created_at": context.created_at.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\context\storage\memory.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\context\storage\memory.py", line 104
    _ = "total_contexts": len(self._storage),
    ^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\dialogue\dialogue_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\dialogue\dialogue_manager.py", line 174
    _ = "capability_id": capability_advertisement.get("capability_id"),
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\dialogue\project_coordinator.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\dialogue\project_coordinator.py", line 113
    _ = else: raise ValueError(f"Task {i} has an invalid dependency on a future task {dep_index}.")
        ^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\evaluation\evaluation_db.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\evaluation\evaluation_db.py", line 75
    _ = "metrics": json.loads(row[3]),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\evaluation\task_evaluator.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\evaluation\task_evaluator.py", line 26
    _ = "cpu_usage": round(min(1.0, cpu_usage), 4), # Cap at 100%
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\formula_engine\__init__.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\formula_engine\__init__.py", line 142
    _ = "action_name": formula.get("action"),
    ^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\integration\unified_control_center.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\integration\unified_control_center.py", line 125
    _ = 'error': str(e),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\knowledge_graph\types.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\knowledge_graph\types.py", line 26
    _ = type: Required[str]      # Type of the relationship (e.g., "is_a", "works_for", verb_lemma)
            ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\language_models\daily_language_model.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\language_models\daily_language_model.py", line 229
    _ = "parameters": {"query": "(true or false) and true", "method": "parser"}}),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\learning\content_analyzer_module.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\learning\content_analyzer_module.py", line 157
    _ = {"POS": {"IN": ["DET", "ADJ"]}, "OP": "*"},  # Optional determiner or adjective (e.g., "a", "the")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\learning\experience_replay.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\learning\experience_replay.py", line 22
    _ = 'timestamp': datetime.now(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\learning\fact_extractor_module.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\learning\fact_extractor_module.py", line 78
    _ = "fact_type" in item_raw and isinstance(item_raw["fact_type"], str) and \
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\learning\learning_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\learning\learning_manager.py", line 149
    _ = "hsp_originator_ai_id": hsp_fact_payload.get('source_ai_id')
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\learning\self_critique_module.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\learning\self_critique_module.py", line 66
    _ = "score": float(parsed_critique["score"]),
    ^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\lis\lis_cache_interface.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\lis\lis_cache_interface.py", line 276
    _ = HAM_META_LIS_OBJECT_ID: incident_record.get("incident_id"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\memory\ham_types.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\memory\ham_types.py", line 15
    _ = "timestamp": self.timestamp.isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\meta\adaptive_learning_controller.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\meta\adaptive_learning_controller.py", line 209
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\meta_formulas\meta_formula.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\meta_formulas\meta_formula.py", line 14
    _ = raise NotImplementedError("This meta-formula has not been implemented yet.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\core_ai\personality\personality_manager.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\personality\personality_manager.py", line 96
    _ = {"name": name, "display_name": info.get("display_name", name)}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\reasoning\causal_reasoning_engine.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\reasoning\causal_reasoning_engine.py", line 106
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core_ai\service_discovery\service_discovery_module.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\service_discovery\service_discovery_module.py", line 133
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\core_ai\symbolic_space\unified_symbolic_space.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\symbolic_space\unified_symbolic_space.py", line 78
    _ = 'properties': json.loads(row[3])
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\core_ai\test_utils\deadlock_detector.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\test_utils\deadlock_detector.py", line 104
    _ = 'first_seen': time.time(),
    ^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\core_ai\world_model\environment_simulator.py:   File ".\backup\20250927_062428\apps\backend\src\core_ai\world_model\environment_simulator.py", line 132
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\data\models\unified_model_loader.py:   File ".\backup\20250927_062428\apps\backend\src\data\models\unified_model_loader.py", line 33
    _ = raise FileNotFoundError("Math model or char map file not found.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\economy\economy_manager.py:   File ".\backup\20250927_062428\apps\backend\src\economy\economy_manager.py", line 16
    _ = "transaction_tax_rate": self.config.get("initial_tax_rate", 0.05),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\fragmenta\fragmenta_orchestrator.py:   File ".\backup\20250927_062428\apps\backend\src\fragmenta\fragmenta_orchestrator.py", line 27
    _ = "memory_id": memory.get('id'),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\game\items.py:   File ".\backup\20250927_062428\apps\backend\src\game\items.py", line 14
    _ = "name": "雫 (Shizuku)",
    ^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\game\scenes.py:   File ".\backup\20250927_062428\apps\backend\src\game\scenes.py", line 72
    _ = 'village': VillageScene(game),
    ^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\hsp\connector.py:   File ".\backup\20250927_062428\apps\backend\src\hsp\connector.py", line 416
    _ = 'timestamp': time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\hsp\performance_optimizer.py:   File ".\backup\20250927_062428\apps\backend\src\hsp\performance_optimizer.py", line 88
    _ = 'timestamp': time.time(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\hsp\__init__.py: SyntaxError: source code string cannot contain null bytes

.\backup\20250927_062428\apps\backend\src\hsp\fallback\fallback_protocols.py:   File ".\backup\20250927_062428\apps\backend\src\hsp\fallback\fallback_protocols.py", line 149
    _ = 'timestamp': time.time(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\integrations\atlassian_bridge.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\atlassian_bridge.py", line 141
    _ = raise ValueError(f"未知服務: {service}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\integrations\atlassian_cli_bridge.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\atlassian_cli_bridge.py", line 53
    _ = "error": str(e),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\integrations\confluence_integration.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\confluence_integration.py", line 59
    _ = "spaces": data.get('results', []),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\integrations\enhanced_atlassian_bridge.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\enhanced_atlassian_bridge.py", line 62
    _ = 'api_token': self.config.get('api_token', ''),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\integrations\enhanced_rovo_dev_connector.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\enhanced_rovo_dev_connector.py", line 54
    _ = raise Exception("Circuit breaker is open")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\integrations\jira_integration.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\jira_integration.py", line 60
    _ = "projects": data.get('values', []),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\integrations\rovo_dev_agent.py:   File ".\backup\20250927_062428\apps\backend\src\integrations\rovo_dev_agent.py", line 162
    _ = 'parameters': self._get_capability_parameters(cap_config['name'])
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\managers\agent_collaboration_manager.py:   File ".\backup\20250927_062428\apps\backend\src\managers\agent_collaboration_manager.py", line 50
    _ = "total_subtasks": len(subtasks),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\managers\demo_learning_manager.py:   File ".\backup\20250927_062428\apps\backend\src\managers\demo_learning_manager.py", line 33
    self.storage_path = Path(self.config.get('demo_credentials', {})
                             ^
SyntaxError: invalid syntax. Perhaps you forgot a comma?

.\backup\20250927_062428\apps\backend\src\managers\dependency_manager.py:   File ".\backup\20250927_062428\apps\backend\src\managers\dependency_manager.py", line 78
    all_deps = self._config.get('dependencies', {}).get('core', []) + \
               ^
SyntaxError: cannot assign to expression

.\backup\20250927_062428\apps\backend\src\managers\execution_manager.py:   File ".\backup\20250927_062428\apps\backend\src\managers\execution_manager.py", line 255
    _ = 'timestamp': time.time(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\managers\execution_monitor.py:   File ".\backup\20250927_062428\apps\backend\src\managers\execution_monitor.py", line 228
    _ = 'timestamp': time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\managers\genesis.py:   File ".\backup\20250927_062428\apps\backend\src\managers\genesis.py", line 97
    _ = assert genesis_secret.startswith(uid)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\mcp\connector.py:   File ".\backup\20250927_062428\apps\backend\src\mcp\connector.py", line 105
    _ = "timestamp_sent": datetime.now(timezone.utc).isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\mcp\context7_connector.py:   File ".\backup\20250927_062428\apps\backend\src\mcp\context7_connector.py", line 110
    _ = raise RuntimeError("Not connected to Context7 MCP")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\mcp\fallback\mcp_fallback_protocols.py:   File ".\backup\20250927_062428\apps\backend\src\mcp\fallback\mcp_fallback_protocols.py", line 407
    _ = os.path.exists(self.inbox_path) and 
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\monitoring\system_monitor.py:   File ".\backup\20250927_062428\apps\backend\src\monitoring\system_monitor.py", line 81
    _ = 'memory_total_gb': memory_info.total / (1024**3),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\optimization\performance_optimizer.py:   File ".\backup\20250927_062428\apps\backend\src\optimization\performance_optimizer.py", line 61
    _ = 'expires': time.time() + ttl
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\optimization\__init__.py: Sorry: IndentationError: unexpected indent (__init__.py, line 6)
.\backup\20250927_062428\apps\backend\src\security\audit_logger.py:   File ".\backup\20250927_062428\apps\backend\src\security\audit_logger.py", line 234
    _ = **(details or {})
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\security\enhanced_sandbox.py:   File ".\backup\20250927_062428\apps\backend\src\security\enhanced_sandbox.py", line 258
    _ = "param_count": len(method_params)
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\security\permission_control.py:   File ".\backup\20250927_062428\apps\backend\src\security\permission_control.py", line 81
    level: str=PermissionLevel(rule_data['level: str']),
         ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\security\__init__.py: Sorry: IndentationError: unexpected indent (__init__.py, line 7)
.\backup\20250927_062428\apps\backend\src\services\ai_editor.py:   File ".\backup\20250927_062428\apps\backend\src\services\ai_editor.py", line 52
    _ = raise ValueError(f"Unsupported data type: {data_type}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\services\ai_virtual_input_service.py: Sorry: IndentationError: unexpected indent (ai_virtual_input_service.py, line 15)
.\backup\20250927_062428\apps\backend\src\services\atlassian_api.py:   File ".\backup\20250927_062428\apps\backend\src\services\atlassian_api.py", line 44
    _ = @atlassian_router.post("/configure")
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\services\audio_service.py:   File ".\backup\20250927_062428\apps\backend\src\services\audio_service.py", line 53
    _ = "audio_size": len(audio_data),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\services\hot_reload_service.py:   File ".\backup\20250927_062428\apps\backend\src\services\hot_reload_service.py", line 8
    from ..core_services import 
                                ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\services\main_api_server.py:   File ".\backup\20250927_062428\apps\backend\src\services\main_api_server.py", line 264
    _ = @app.get("/")
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\services\multi_llm_service.py:   File ".\backup\20250927_062428\apps\backend\src\services\multi_llm_service.py", line 161
    _ = "prompt_tokens": usage_dict.get("prompt_tokens", 0),
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\services\resource_awareness_service.py: Sorry: IndentationError: unexpected indent (resource_awareness_service.py, line 9)
.\backup\20250927_062428\apps\backend\src\services\sandbox_executor.py: Sorry: IndentationError: unindent does not match any outer indentation level (sandbox_executor.py, line 13)
.\backup\20250927_062428\apps\backend\src\services\vision_service.py:   File ".\backup\20250927_062428\apps\backend\src\services\vision_service.py", line 53
    _ = "image_size": len(image_data),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\shared\network_resilience.py:   File ".\backup\20250927_062428\apps\backend\src\shared\network_resilience.py", line 39
    _ = raise NetworkError(f"Operation failed after {self.max_attempts} attempts due to network issues.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\system\deployment_manager.py:   File ".\backup\20250927_062428\apps\backend\src\system\deployment_manager.py", line 162
    _ = "cpu_threads": min(1, cpu_cores),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\system\hardware_probe.py:   File ".\backup\20250927_062428\apps\backend\src\system\hardware_probe.py", line 62
    _ = bandwidth_download: float  # Mbps (estimated)
                          ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\system\integrated_graphics_optimizer.py:   File ".\backup\20250927_062428\apps\backend\src\system\integrated_graphics_optimizer.py", line 53
    _ = "gpu_count": len(self.hardware_profile.gpu),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\system\__init__.py: Sorry: IndentationError: unexpected indent (__init__.py, line 14)
.\backup\20250927_062428\apps\backend\src\tools\calculator_tool.py:   File ".\backup\20250927_062428\apps\backend\src\tools\calculator_tool.py", line 29
    _ = raise TypeError(node)
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\logic_tool.py:   File ".\backup\20250927_062428\apps\backend\src\tools\logic_tool.py", line 50
    _ = raise FileNotFoundError("NN Model or Char Map not found.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\math_tool.py:   File ".\backup\20250927_062428\apps\backend\src\tools\math_tool.py", line 30
    _ = raise FileNotFoundError("Model or char map file not found.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\tool_dispatcher.py:   File ".\backup\20250927_062428\apps\backend\src\tools\tool_dispatcher.py", line 52
    _ = "ham_meta_tool_name": record.get("tool_name"),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\src\tools\translation_tool.py:   File ".\backup\20250927_062428\apps\backend\src\tools\translation_tool.py", line 146
    _ = ("你好", "en", "Hello"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\tools\logic_model\evaluate_logic_model.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 14 (evaluate_logic_model.py, line 15)
.\backup\20250927_062428\apps\backend\src\tools\logic_model\lightweight_logic_model.py:   File ".\backup\20250927_062428\apps\backend\src\tools\logic_model\lightweight_logic_model.py", line 38
    )
    ^
SyntaxError: positional argument follows keyword argument

.\backup\20250927_062428\apps\backend\src\tools\logic_model\logic_data_generator.py:   File ".\backup\20250927_062428\apps\backend\src\tools\logic_model\logic_data_generator.py", line 70
    _ = raise ValueError(f"Unexpected constant value type: {type(node.value)}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\logic_model\logic_parser_eval.py:   File ".\backup\20250927_062428\apps\backend\src\tools\logic_model\logic_parser_eval.py", line 12
    _ = (r'\s+', None),  # Whitespace
    ^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\src\tools\logic_model\train_logic_model.py:   File ".\backup\20250927_062428\apps\backend\src\tools\logic_model\train_logic_model.py", line 57
    _ = raise ValueError("Dataset format is incorrect. Expected list of {'proposition': str, 'answer': bool}.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\math_model\data_generator.py:   File ".\backup\20250927_062428\apps\backend\src\tools\math_model\data_generator.py", line 34
    _ = raise ValueError(f"Unsupported constant value type: {type(value)}")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\tools\math_model\lightweight_math_model.py: Sorry: IndentationError: unexpected indent (lightweight_math_model.py, line 6)
.\backup\20250927_062428\apps\backend\src\tools\math_model\train.py:   File ".\backup\20250927_062428\apps\backend\src\tools\math_model\train.py", line 49
    _ = raise ValueError("Dataset format is incorrect. Expected a list of {'problem': str, 'answer': str} dicts.")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\src\utils\async_utils.py:   File ".\backup\20250927_062428\apps\backend\src\utils\async_utils.py", line 22
    _ = @functools.wraps(func)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\conftest.py: Sorry: IndentationError: unindent does not match any outer indentation level (conftest.py, line 48)
.\backup\20250927_062428\apps\backend\tests\test_atlassian_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\test_atlassian_integration.py", line 63
    _ = patch('integrations.rovo_dev_agent.AtlassianBridge'), \
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\test_basic.py:   File ".\backup\20250927_062428\apps\backend\tests\test_basic.py", line 26
    _ = assert os.path.exists(os.path.join(backend_dir, "src")), "src 目录应该存在"
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\test_core_services_module.py:   File ".\backup\20250927_062428\apps\backend\tests\test_core_services_module.py", line 49
    _ = @patch('os.path.exists')
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\test_dependency_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\test_dependency_manager.py", line 52
    _ = assert isinstance(dm._config, dict)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\test_result_processing_test.py:   File ".\backup\20250927_062428\apps\backend\tests\test_result_processing_test.py", line 102
    _ = "total_tests": test_results.get('summary', {}).get('total', 0),
    ^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\test_security.py: Sorry: IndentationError: unexpected indent (test_security.py, line 28)
.\backup\20250927_062428\apps\backend\tests\test_simple.py:   File ".\backup\20250927_062428\apps\backend\tests\test_simple.py", line 3
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\test_smart_dev_runner.py:   File ".\backup\20250927_062428\apps\backend\tests\test_smart_dev_runner.py", line 56
    _ = @patch('subprocess.run')
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\verify_all_agents.py:   File ".\backup\20250927_062428\apps\backend\tests\verify_all_agents.py", line 10
    _ = ("BaseAgent", "agents.base_agent", "BaseAgent"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\agents\test_agent_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_agent_manager.py", line 48
    _ = assert hasattr(agent_manager, 'agents')
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\agents\test_base_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_base_agent.py", line 110
    _ = assert base_agent.is_healthy() is False
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\agents\test_code_understanding_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_code_understanding_agent.py", line 79
    _ = assert isinstance(result_payload["payload"], str)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\agents\test_creative_writing_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_creative_writing_agent.py", line 55
    _ = assert isinstance(result_payload["payload"], str)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\agents\test_data_analysis_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_data_analysis_agent.py", line 179
    _ = assert len(processed_data) > 0  # Should have some rows after cleaning
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\agents\test_knowledge_graph_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\agents\test_knowledge_graph_agent.py", line 111
    _ = 'llm_interface': MagicMock(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\core_ai\test_agent_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\test_agent_manager.py", line 19
    _ = 'data_analysis_agent': os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', 'src', 'agents', 'data_analysis_agent.py')),
    ^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\core_ai\test_crisis_system.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\test_crisis_system.py", line 33
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\test_emotion_system.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\test_emotion_system.py", line 25
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\test_time_system.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\test_time_system.py", line 22
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\code_understanding\test_lightweight_code_model.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\code_understanding\test_lightweight_code_model.py", line 26
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\context\test_context_system.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\context\test_context_system.py", line 30
    _ = assert isinstance(context_manager.memory_storage, MemoryStorage)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\dialogue\test_dialogue_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\dialogue\test_dialogue_manager.py", line 7
    _ = @pytest.mark.timeout(10)
    ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\dialogue\test_project_coordinator.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\dialogue\test_project_coordinator.py", line 143
    _ = call(subtasks[0]),
    ^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\core_ai\formula_engine\test_formula_engine.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\formula_engine\test_formula_engine.py", line 79
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\language_models\test_daily_language_model.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\language_models\test_daily_language_model.py", line 66
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\learning\test_content_analyzer_module.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\learning\test_content_analyzer_module.py", line 84
    _ = f"Relationship {expected_src_label} -> {expected_tgt_label} (type: {expected_rel_type}) not found in KG relationships. "
        
SyntaxError: invalid syntax. Perhaps you forgot a comma?

.\backup\20250927_062428\apps\backend\tests\core_ai\learning\test_learning_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\learning\test_learning_manager.py", line 103
    _ = assert result is None or isinstance(result, dict)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\lis\test_ham_lis_cache.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\lis\test_ham_lis_cache.py", line 97
    _ = "timestamp": entry["metadata"].get(HAM_META_TIMESTAMP_LOGGED, entry["metadata"].get("timestamp_logged", "1970-01-01T00:00:00Z")), # Use specific or fallback
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\core_ai\lis\test_tonal_repair_engine.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\lis\test_tonal_repair_engine.py", line 6
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\memory\test_ham_chromadb_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\memory\test_ham_chromadb_integration.py", line 221
    _ = assert "fallback test sentence" in results[0]["rehydrated_gist"].lower()
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\memory\test_ham_memory_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\memory\test_ham_memory_manager.py", line 36
    _ = assert isinstance(ham_manager.core_memory_store, dict)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\meta_formulas\test_meta_formulas.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\meta_formulas\test_meta_formulas.py", line 8
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\personality\test_personality_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\personality\test_personality_manager.py", line 57
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\core_ai\service_discovery\test_service_discovery_module.py:   File ".\backup\20250927_062428\apps\backend\tests\core_ai\service_discovery\test_service_discovery_module.py", line 21
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\creation\test_creation_engine.py:   File ".\backup\20250927_062428\apps\backend\tests\creation\test_creation_engine.py", line 10
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\evaluation\test_evaluation_db.py:   File ".\backup\20250927_062428\apps\backend\tests\evaluation\test_evaluation_db.py", line 29
    _ = "timestamp": datetime.now().isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\evaluation\test_evaluator.py:   File ".\backup\20250927_062428\apps\backend\tests\evaluation\test_evaluator.py", line 10
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\fragmenta\test_fragmenta_orchestrator.py:   File ".\backup\20250927_062428\apps\backend\tests\fragmenta\test_fragmenta_orchestrator.py", line 8
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\game\test_assets.py:   File ".\backup\20250927_062428\apps\backend\tests\game\test_assets.py", line 11
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\game\test_main.py:   File ".\backup\20250927_062428\apps\backend\tests\game\test_main.py", line 5
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\game\test_npcs.py:   File ".\backup\20250927_062428\apps\backend\tests\game\test_npcs.py", line 11
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\hsp\mock_mqtt_broker.py:   File ".\backup\20250927_062428\apps\backend\tests\hsp\mock_mqtt_broker.py", line 43
    _ = raise Exception("Broker is not running")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_ack_retry.py:   File ".\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_ack_retry.py", line 60
    _ = "timestamp_sent": datetime.now(timezone.utc).isoformat(),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_advanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_advanced_integration.py, line 5)
.\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_enhanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_enhanced_integration.py, line 6)
.\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_integration.py", line 284
    _ = "message_id": str(uuid.uuid4()),
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_security.py:   File ".\backup\20250927_062428\apps\backend\tests\hsp\test_hsp_security.py", line 160
    _ = assert isinstance(payload, str)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\conftest.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\conftest.py", line 113
    _ = "agent_id": f"test_{agent_type}_{id(object())}",
    ^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\integration\test_agent_collaboration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_agent_collaboration.py", line 49
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_core_services_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_core_services_integration.py", line 134
    _ = assert len(user_memories) > 0
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_data_factory.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_data_factory.py", line 51
    _ = "created_at": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\integration\test_end_to_end_project_flow.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_end_to_end_project_flow.py", line 231
    _ = @pytest.mark.timeout(30)
    ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_example_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_example_integration.py", line 91
    _ = patch('apps.backend.src.hsp.connector.HSPConnector') as mock_hsp_connector, \
      ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_hsp_debug.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_hsp_debug.py", line 97
    _ = assert received_event.is_set()
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_hsp_simple.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_hsp_simple.py", line 22
    _ = "id": fact_payload.get("id", "fact_001"),
    ^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\integration\test_knowledge_update.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_knowledge_update.py", line 12
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_learning_and_trust.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_learning_and_trust.py", line 38
    _ = @pytest.mark.timeout(10)
    ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_memory_system_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_memory_system_integration.py", line 348
    _ = assert len(related_memories) > 0
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_performance_benchmarks.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_performance_benchmarks.py", line 234
    _ = "input": item["input"].upper(),
    ^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\integration\test_self_improvement.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_self_improvement.py", line 12
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_system_level_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_system_level_integration.py", line 535
    _ = assert len(select_result["results"]) > 0
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_training_system_integration.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_training_system_integration.py", line 403
    _ = assert len(augmented_data) > len(filtered_result["filtered_data"])
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integration\test_utils.py:   File ".\backup\20250927_062428\apps\backend\tests\integration\test_utils.py", line 144
    _ = "timestamp": time.time()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_api.py:   File ".\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_api.py", line 26
    _ = @patch('apps.backend.src.integrations.atlassian_cli_bridge.subprocess.run')
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_bridge.py:   File ".\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_bridge.py", line 233
    _ = assert isinstance(formatted, str)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_bridge_fallback.py:   File ".\backup\20250927_062428\apps\backend\tests\integrations\test_atlassian_bridge_fallback.py", line 131
    _ = aiohttp.ClientError("Primary failed"),
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\integrations\test_rovo_dev_agent.py:   File ".\backup\20250927_062428\apps\backend\tests\integrations\test_rovo_dev_agent.py", line 288
    _ = 'timestamp': datetime.now().isoformat()
    ^
SyntaxError: ':' expected after dictionary key

.\backup\20250927_062428\apps\backend\tests\integrations\test_rovo_dev_agent_recovery.py:   File ".\backup\20250927_062428\apps\backend\tests\integrations\test_rovo_dev_agent_recovery.py", line 117
    _ = assert agent.state_file.exists()
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\mcp\test_context7_connector.py: Sorry: IndentationError: unexpected indent (test_context7_connector.py, line 11)
.\backup\20250927_062428\apps\backend\tests\mcp\test_mcp_connector.py:   File ".\backup\20250927_062428\apps\backend\tests\mcp\test_mcp_connector.py", line 16
    _ = @pytest.mark.timeout(5)
    ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\meta\test_learning_log_db.py:   File ".\backup\20250927_062428\apps\backend\tests\meta\test_learning_log_db.py", line 26
    _ = "timestamp": datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\modules_fragmenta\test_element_layer.py:   File ".\backup\20250927_062428\apps\backend\tests\modules_fragmenta\test_element_layer.py", line 8
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\modules_fragmenta\test_vision_tone_inverter.py:   File ".\backup\20250927_062428\apps\backend\tests\modules_fragmenta\test_vision_tone_inverter.py", line 8
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\search\test_search_engine.py:   File ".\backup\20250927_062428\apps\backend\tests\search\test_search_engine.py", line 10
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_ai_virtual_input_service.py: Sorry: IndentationError: unexpected indent (test_ai_virtual_input_service.py, line 4)
.\backup\20250927_062428\apps\backend\tests\services\test_audio_service.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_audio_service.py", line 20
    _ = @pytest.mark.timeout(15)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_health_ready_endpoints.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_health_ready_endpoints.py", line 24
    _ = "llm_interface": object(),
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\services\test_hot_endpoints.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_hot_endpoints.py", line 7
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_hsp_endpoints.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_hsp_endpoints.py", line 78
    _ = "dialogue_manager": FakeDialogueManager(),
    ^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\services\test_llm_interface.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_llm_interface.py", line 8
    _ = @pytest.mark.timeout(15)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_main_api_server_hsp.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_main_api_server_hsp.py", line 38
    _ = raise ValueError(f"Missing required field: availability_status")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_models_endpoints.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_models_endpoints.py", line 27
    _ = "llm_interface": object(),
    ^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup\20250927_062428\apps\backend\tests\services\test_node_services.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_node_services.py", line 11
    _ = raise ConnectionError("Node.js service is not available")
        ^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_resource_awareness_service.py: Sorry: IndentationError: unexpected indent (test_resource_awareness_service.py, line 8)
.\backup\20250927_062428\apps\backend\tests\services\test_sandbox_executor.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_sandbox_executor.py", line 20
    _ = @patch('tempfile.TemporaryDirectory')
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\services\test_vision_service.py:   File ".\backup\20250927_062428\apps\backend\tests\services\test_vision_service.py", line 8
    _ = @pytest.mark.timeout(15)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\shared\test_key_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\shared\test_key_manager.py", line 116
    _ = assert isinstance(result, str)
        ^^^^^^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_code_understanding_tool.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_code_understanding_tool.py", line 25
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_logic_model.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_logic_model.py", line 44
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_math_model.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_math_model.py", line 40
    _ = @pytest.mark.timeout(10)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_parameter_extractor.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_parameter_extractor.py", line 9
    _ = @patch('apps.backend.src.tools.parameter_extractor.extractor.hf_hub_download')
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_tool_dispatcher_logging.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_tool_dispatcher_logging.py", line 36
    _ = @pytest.mark.timeout(15)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\tools\test_translation_model.py:   File ".\backup\20250927_062428\apps\backend\tests\tools\test_translation_model.py", line 60
    _ = @pytest.mark.timeout(5)
        ^
SyntaxError: invalid syntax

.\backup\20250927_062428\apps\backend\tests\training\test_training_manager.py:   File ".\backup\20250927_062428\apps\backend\tests\training\test_training_manager.py", line 23
    _ = assert hasattr(demo_learning_manager, 'training_configs')
        ^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\dependency_manager.py:   File ".\backup_modules\ai_backup\dependency_manager.py", line 39
    self._config: Dict[str, Any] = 
                                   ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\agents\base\base_agent.py:   File ".\backup_modules\ai_backup\agents\base\base_agent.py", line 52
    "fallback_config": 
                     ^
SyntaxError: expression expected after dictionary key and ':'

.\backup_modules\ai_backup\agents\specialized\audio_processing_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\audio_processing_agent.py", line 43
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (noise_reduction, clarity, etc.)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup_modules\ai_backup\agents\specialized\code_understanding_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\code_understanding_agent.py", line 36
    _ = {"name": "style", "type": "string", "required": False, "description": "Documentation style (e.g., 'technical', 'user')"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup_modules\ai_backup\agents\specialized\creative_writing_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\creative_writing_agent.py", line 62
    self.prompts = 
                   ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\agents\specialized\data_analysis_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\data_analysis_agent.py", line 23
    _ = {"name": "analysis_type", "type": "string", "required": False, "description": "Type of analysis (mean, median, std, correlation)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup_modules\ai_backup\agents\specialized\image_generation_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\image_generation_agent.py", line 60
    async def main -> None:
                   ^^
SyntaxError: expected '('

.\backup_modules\ai_backup\agents\specialized\knowledge_graph_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\knowledge_graph_agent.py", line 91
    entities = 
               ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\agents\specialized\nlp_processing_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\nlp_processing_agent.py", line 24
    _ = {"name": "summary_length", "type": "string", "required": False, "description": "Desired summary length (short, medium, long)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup_modules\ai_backup\agents\specialized\planning_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\planning_agent.py", line 148
    timeline = 
               ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\agents\specialized\vision_processing_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\vision_processing_agent.py", line 44
    _ = {"name": "enhancement_type", "type": "string", "required": False, "description": "Type of enhancement (sharpen, denoise, brighten)"}
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\backup_modules\ai_backup\agents\specialized\web_search_agent.py:   File ".\backup_modules\ai_backup\agents\specialized\web_search_agent.py", line 86
    async def main -> None:
                   ^^
SyntaxError: expected '('

.\backup_modules\ai_backup\code_understanding\lightweight_code_model.py:   File ".\backup_modules\ai_backup\code_understanding\lightweight_code_model.py", line 39
    self.dna_chains: Dict[str, DNADataChain] =   # DNA数据链存储
                                                 ^^^^^^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\concept_models\adaptive_learning_controller.py:   File ".\backup_modules\ai_backup\concept_models\adaptive_learning_controller.py", line 110
    records = 
              ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\concept_models\alpha_deep_model.py:   File ".\backup_modules\ai_backup\concept_models\alpha_deep_model.py", line 69
    self.nodes: List[str] =   # 内存ID链
                              ^^^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\concept_models\causal_reasoning_engine.py:   File ".\backup_modules\ai_backup\concept_models\causal_reasoning_engine.py", line 51
    self.nodes: Dict[str, Dict[str, Any]] =   # 节点信息
                                              ^^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\concept_models\environment_simulator.py:   File ".\backup_modules\ai_backup\concept_models\environment_simulator.py", line 41
    self.model_weights = 
                         ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\concept_models\unified_symbolic_space.py:   File ".\backup_modules\ai_backup\concept_models\unified_symbolic_space.py", line 205
    updates = 
              ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\crisis\crisis_system.py:   File ".\backup_modules\ai_backup\crisis\crisis_system.py", line 9
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\deep_mapper\mapper.py:   File ".\backup_modules\ai_backup\deep_mapper\mapper.py", line 17
    self.mapping_rules = mapping_rules or 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\dialogue\dialogue_manager.py:   File ".\backup_modules\ai_backup\dialogue\dialogue_manager.py", line 59
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\dialogue\project_coordinator.py:   File ".\backup_modules\ai_backup\dialogue\project_coordinator.py", line 45
    self.pending_hsp_task_requests: Dict[str, PendingHSPTaskInfo] = 
                                                                    ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\discovery\service_discovery_module.py:   File ".\backup_modules\ai_backup\discovery\service_discovery_module.py", line 38
    self.known_capabilities: Dict[str, Tuple[HSPCapabilityAdvertisementPayload, datetime]] = 
                                                                                             ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\emotion\emotion_system.py:   File ".\backup_modules\ai_backup\emotion\emotion_system.py", line 6
    self.personality = personality_profile or  # Allow None for basic operation
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\evaluation\evaluation_db.py:   File ".\backup_modules\ai_backup\evaluation\evaluation_db.py", line 69
    evaluations = 
                  ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\evaluation\task_evaluator.py:   File ".\backup_modules\ai_backup\evaluation\task_evaluator.py", line 45
    categories = 
                 ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\formula_engine\__init__.py:   File ".\backup_modules\ai_backup\formula_engine\__init__.py", line 21
    self.formulas: List[FormulaConfigEntry] = 
                                              ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\integration\unified_control_center.py:   File ".\backup_modules\ai_backup\integration\unified_control_center.py", line 20
    self.components: Dict[str, Any] = 
                                      ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\language_models\daily_language_model.py:   File ".\backup_modules\ai_backup\language_models\daily_language_model.py", line 26
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\language_models\registry.py:   File ".\backup_modules\ai_backup\language_models\registry.py", line 57
    profiles: List[ModelProfile] = 
                                   ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\language_models\router.py:   File ".\backup_modules\ai_backup\language_models\router.py", line 40
    return {"error": "no_available_models", "candidates": }
                                                        ^
SyntaxError: expression expected after dictionary key and ':'

.\backup_modules\ai_backup\learning\content_analyzer_module.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 10 (content_analyzer_module.py, line 14)
.\backup_modules\ai_backup\learning\experience_replay.py:   File ".\backup_modules\ai_backup\learning\experience_replay.py", line 10
    self.buffer = 
                  ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\learning\fact_extractor_module.py:   File ".\backup_modules\ai_backup\learning\fact_extractor_module.py", line 75
    valid_facts: List[ExtractedFact] = 
                                       ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\learning\learning_manager.py:   File ".\backup_modules\ai_backup\learning\learning_manager.py", line 39
    self.operational_config = operational_config or 
                                                    ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\learning\self_critique_module.py:   File ".\backup_modules\ai_backup\learning\self_critique_module.py", line 10
    self.operational_config = operational_config or 
                                                    ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\lis\lis_cache_interface.py:   File ".\backup_modules\ai_backup\lis\lis_cache_interface.py", line 416
    metadata_filters: Dict[str, Any] = 
                                       ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\memory\ham_memory_manager.py:   File ".\backup_modules\ai_backup\memory\ham_memory_manager.py", line 90
    self.core_memory_store: Dict[str, HAMDataPackageInternal] = 
                                                                ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\memory\ham_types.py:   File ".\backup_modules\ai_backup\memory\ham_types.py", line 9
    self.metadata = metadata if metadata is not None else 
                                                          ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\memory\ham_utils.py:   File ".\backup_modules\ai_backup\memory\ham_utils.py", line 13
    def get_current_utc_timestamp -> float:
                                  ^^
SyntaxError: expected '('

.\backup_modules\ai_backup\memory\vector_store.py:   File ".\backup_modules\ai_backup\memory\vector_store.py", line 54
    self.search_history =   # 搜尋歷史
                            ^^^^^^^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\meta\learning_log_db.py:   File ".\backup_modules\ai_backup\meta\learning_log_db.py", line 64
    params = 
             ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\optimization\distributed_processing.py:   File ".\backup_modules\ai_backup\optimization\distributed_processing.py", line 56
    futures = 
              ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\personality\personality_manager.py:   File ".\backup_modules\ai_backup\personality\personality_manager.py", line 38
    profiles: Dict[str, Dict[str, str]] = 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\rag\rag_manager.py:   File ".\backup_modules\ai_backup\rag\rag_manager.py", line 30
    self.documents: Dict[int, str] = 
                                     ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\reasoning\causal_reasoning_engine.py:   File ".\backup_modules\ai_backup\reasoning\causal_reasoning_engine.py", line 11
    self.edges = 
                 ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\test_utils\deadlock_detector.py:   File ".\backup_modules\ai_backup\test_utils\deadlock_detector.py", line 53
    self.thread_states: Dict[int, Dict] = 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\time\time_system.py:   File ".\backup_modules\ai_backup\time\time_system.py", line 8
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\translation\simultaneous_translation.py:   File ".\backup_modules\ai_backup\translation\simultaneous_translation.py", line 42
    for idx, chunk in enumerate(chunks or ):
                                          ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\trust\trust_manager_module.py:   File ".\backup_modules\ai_backup\trust\trust_manager_module.py", line 20
    self.trust_scores: Dict[str, Dict[str, float]] = 
                                                     ^
SyntaxError: invalid syntax

.\backup_modules\ai_backup\world_model\environment_simulator.py:   File ".\backup_modules\ai_backup\world_model\environment_simulator.py", line 99
    scenarios = 
                ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\agent_collaboration_manager.py:   File ".\backup_modules\core_ai_backup\agent_collaboration_manager.py", line 44
    self.active_collaborations: Dict[str, CollaborationTask] = 
                                                               ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\agent_manager.py:   File ".\backup_modules\core_ai_backup\agent_manager.py", line 24
    self.agents = 
                  ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\crisis_system.py:   File ".\backup_modules\core_ai_backup\crisis_system.py", line 9
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\demo_learning_manager.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 19 (demo_learning_manager.py, line 21)
.\backup_modules\core_ai_backup\dependency_manager.py:   File ".\backup_modules\core_ai_backup\dependency_manager.py", line 32
    self._dependencies: Dict[str, DependencyStatus] = 
                                                      ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\dynamic_agent_registry.py:   File ".\backup_modules\core_ai_backup\dynamic_agent_registry.py", line 37
    self.registered_agents: Dict[str, RegisteredAgent] = 
                                                         ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\emotion_system.py:   File ".\backup_modules\core_ai_backup\emotion_system.py", line 10
    self.personality = personality_profile or 
                                              ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\execution_manager.py:   File ".\backup_modules\core_ai_backup\execution_manager.py", line 111
    self.task_queue = 
                      ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\execution_monitor.py:   File ".\backup_modules\core_ai_backup\execution_monitor.py", line 93
    self._resource_usage: Dict[str, Any] = 
                                           ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\genesis.py:   File ".\backup_modules\core_ai_backup\genesis.py", line 25
    def create_genesis_secret -> Tuple[str, str]:
                              ^^
SyntaxError: expected '('

.\backup_modules\core_ai_backup\simultaneous_translation.py:   File ".\backup_modules\core_ai_backup\simultaneous_translation.py", line 42
    for idx, chunk in enumerate(chunks or ):
                                          ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\time_system.py:   File ".\backup_modules\core_ai_backup\time_system.py", line 9
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\deep_mapper\mapper.py:   File ".\backup_modules\core_ai_backup\deep_mapper\mapper.py", line 17
    self.mapping_rules = mapping_rules or 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\dialogue\dialogue_manager.py:   File ".\backup_modules\core_ai_backup\dialogue\dialogue_manager.py", line 63
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\dialogue\project_coordinator.py:   File ".\backup_modules\core_ai_backup\dialogue\project_coordinator.py", line 44
    self.pending_hsp_task_requests: Dict[str, PendingHSPTaskInfo] = 
                                                                    ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\evaluation\evaluation_db.py:   File ".\backup_modules\core_ai_backup\evaluation\evaluation_db.py", line 69
    evaluations = 
                  ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\evaluation\task_evaluator.py:   File ".\backup_modules\core_ai_backup\evaluation\task_evaluator.py", line 45
    categories = 
                 ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\formula_engine\__init__.py:   File ".\backup_modules\core_ai_backup\formula_engine\__init__.py", line 21
    self.formulas: List[FormulaConfigEntry] = 
                                              ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\integration\unified_control_center.py:   File ".\backup_modules\core_ai_backup\integration\unified_control_center.py", line 20
    self.components: Dict[str, Any] = 
                                      ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\language_models\daily_language_model.py:   File ".\backup_modules\core_ai_backup\language_models\daily_language_model.py", line 26
    self.config = config or 
                            ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\language_models\registry.py:   File ".\backup_modules\core_ai_backup\language_models\registry.py", line 51
    profiles: List[ModelProfile] = 
                                   ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\language_models\router.py:   File ".\backup_modules\core_ai_backup\language_models\router.py", line 33
    return {"error": "no_available_models", "candidates": }
                                                        ^
SyntaxError: expression expected after dictionary key and ':'

.\backup_modules\core_ai_backup\learning\content_analyzer_module.py:   File ".\backup_modules\core_ai_backup\learning\content_analyzer_module.py", line 75
    self.ontology_mapping: Dict[str, str] = 
                                            ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\learning\experience_replay.py:   File ".\backup_modules\core_ai_backup\learning\experience_replay.py", line 10
    self.buffer = 
                  ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\learning\fact_extractor_module.py:   File ".\backup_modules\core_ai_backup\learning\fact_extractor_module.py", line 75
    valid_facts: List[ExtractedFact] = 
                                       ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\learning\learning_manager.py:   File ".\backup_modules\core_ai_backup\learning\learning_manager.py", line 37
    self.operational_config = operational_config or 
                                                    ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\learning\self_critique_module.py:   File ".\backup_modules\core_ai_backup\learning\self_critique_module.py", line 10
    self.operational_config = operational_config or 
                                                    ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\lis\lis_cache_interface.py:   File ".\backup_modules\core_ai_backup\lis\lis_cache_interface.py", line 416
    metadata_filters: Dict[str, Any] = 
                                       ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\memory\ham_types.py:   File ".\backup_modules\core_ai_backup\memory\ham_types.py", line 9
    self.metadata = metadata if metadata is not None else 
                                                          ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\memory\ham_utils.py:   File ".\backup_modules\core_ai_backup\memory\ham_utils.py", line 13
    def get_current_utc_timestamp -> float:
                                  ^^
SyntaxError: expected '('

.\backup_modules\core_ai_backup\meta\learning_log_db.py:   File ".\backup_modules\core_ai_backup\meta\learning_log_db.py", line 64
    params = 
             ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\optimization\distributed_processing.py:   File ".\backup_modules\core_ai_backup\optimization\distributed_processing.py", line 56
    futures = 
              ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\personality\personality_manager.py:   File ".\backup_modules\core_ai_backup\personality\personality_manager.py", line 38
    profiles: Dict[str, Dict[str, str]] = 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\rag\rag_manager.py:   File ".\backup_modules\core_ai_backup\rag\rag_manager.py", line 27
    self.documents: Dict[int, str] = 
                                     ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\reasoning\causal_reasoning_engine.py:   File ".\backup_modules\core_ai_backup\reasoning\causal_reasoning_engine.py", line 11
    self.edges = 
                 ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\service_discovery\service_discovery_module.py:   File ".\backup_modules\core_ai_backup\service_discovery\service_discovery_module.py", line 38
    self.known_capabilities: Dict[str, Tuple[HSPCapabilityAdvertisementPayload, datetime]] = 
                                                                                             ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\symbolic_space\unified_symbolic_space.py:   File ".\backup_modules\core_ai_backup\symbolic_space\unified_symbolic_space.py", line 54
    current_props = self.get_symbol(symbol_name)['properties'] if self.get_symbol(symbol_name) else 
                                                                                                    ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\test_utils\deadlock_detector.py:   File ".\backup_modules\core_ai_backup\test_utils\deadlock_detector.py", line 53
    self.thread_states: Dict[int, Dict] = 
                                          ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\trust_manager\trust_manager_module.py:   File ".\backup_modules\core_ai_backup\trust_manager\trust_manager_module.py", line 20
    self.trust_scores: Dict[str, Dict[str, float]] = 
                                                     ^
SyntaxError: invalid syntax

.\backup_modules\core_ai_backup\world_model\environment_simulator.py:   File ".\backup_modules\core_ai_backup\world_model\environment_simulator.py", line 99
    scenarios = 
                ^
SyntaxError: invalid syntax

.\cli\main.py:   File ".\cli\main.py", line 26
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\deps.py:   File ".\cli\commands\deps.py", line 14
    def deps()
              ^
SyntaxError: expected ':'

.\cli\commands\dev.py:   File ".\cli\commands\dev.py", line 13
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\editor.py:   File ".\cli\commands\editor.py", line 18
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\git.py:   File ".\cli\commands\git.py", line 11
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\integrate.py:   File ".\cli\commands\integrate.py", line 17
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\rovo.py:   File ".\cli\commands\rovo.py", line 16
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\security.py:   File ".\cli\commands\security.py", line 16
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\commands\system.py:   File ".\cli\commands\system.py", line 16
    def system()
                ^
SyntaxError: expected ':'

.\cli\commands\test.py:   File ".\cli\commands\test.py", line 14
    _ = @click.group()
        ^
SyntaxError: invalid syntax

.\cli\utils\environment.py:   File ".\cli\utils\environment.py", line 12
    def check_environment()
                           ^
SyntaxError: expected ':'

.\data\flickr30k_sample\master\flickr30k_entities-master\flickr30k_entities_utils.py: Sorry: IndentationError: expected an indented block after 'with' statement on line 23 (flickr30k_entities_utils.py, line 24)
.\packages\cli\cli\ai_models_cli.py:   File ".\packages\cli\cli\ai_models_cli.py", line 35
    def __init__(self)
                      ^
SyntaxError: expected ':'

.\packages\cli\cli\main.py:   File ".\packages\cli\cli\main.py", line 48
    def cli_handle_incoming_hsp_fact(fact_payload: HSPFactPayload, sender_ai_id: str, full_envelope: HSPMessageEnvelope)
                                                                                                                        ^
SyntaxError: expected ':'

.\scripts\ai_orchestrator.py: Sorry: IndentationError: unexpected indent (ai_orchestrator.py, line 34)
.\scripts\apply_test_timeouts.py:   File ".\scripts\apply_test_timeouts.py", line 26
    def get_timeout_for_file(file_path)
                                       ^
SyntaxError: expected ':'

.\scripts\automated_test_runner.py: Sorry: IndentationError: expected an indented block after function definition on line 17 (automated_test_runner.py, line 18)
.\scripts\check_ai_docstrings.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (check_ai_docstrings.py, line 19)
.\scripts\check_dependency_conflicts.py:   File ".\scripts\check_dependency_conflicts.py", line 9
    def check_dependency_conflicts()
                                    ^
SyntaxError: expected ':'

.\scripts\clean_backup_archive.py:   File ".\scripts\clean_backup_archive.py", line 14
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\comprehensive_backup_cleanup.py:   File ".\scripts\comprehensive_backup_cleanup.py", line 51
    _ = (item.name.startswith("backup_") or 
      ^
SyntaxError: invalid syntax

.\scripts\document_update_plan.py:   File ".\scripts\document_update_plan.py", line 22
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\download_training_data.py:   File ".\scripts\download_training_data.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\enhance_project.py: Sorry: IndentationError: expected an indented block after function definition on line 20 (enhance_project.py, line 21)
.\scripts\execution_monitor_cli.py: Sorry: IndentationError: unexpected indent (execution_monitor_cli.py, line 21)
.\scripts\extract_common_voice.py:   File ".\scripts\extract_common_voice.py", line 14
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\extract_common_voice_improved.py:   File ".\scripts\extract_common_voice_improved.py", line 15
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\fix_import_paths.py:   File ".\scripts\fix_import_paths.py", line 10
    def fix_import_paths_in_file(file_path)
                                           ^
SyntaxError: expected ':'

.\scripts\generate_mock_data.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (generate_mock_data.py, line 19)
.\scripts\health_monitor.py: Sorry: IndentationError: expected an indented block after function definition on line 27 (health_monitor.py, line 28)
.\scripts\mock_hsp_peer.py: Sorry: IndentationError: expected an indented block after function definition on line 20 (mock_hsp_peer.py, line 21)
.\scripts\optimized_health_check.py:   File ".\scripts\optimized_health_check.py", line 24
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\scripts\performance_benchmark.py: Sorry: IndentationError: expected an indented block after function definition on line 22 (performance_benchmark.py, line 23)
.\scripts\project_ai_orchestrator.py: Sorry: IndentationError: expected an indented block after 'if' statement on line 64 (project_ai_orchestrator.py, line 66)
.\scripts\project_setup_utils.py: Sorry: IndentationError: expected an indented block after function definition on line 12 (project_setup_utils.py, line 13)
.\scripts\run_comprehensive_tests.py: Sorry: IndentationError: expected an indented block after function definition on line 28 (run_comprehensive_tests.py, line 29)
.\scripts\run_parameter_extractor_example.py:   File ".\scripts\run_parameter_extractor_example.py", line 16
    _ = assert os.path.exists(model_path)
        ^^^^^^
SyntaxError: invalid syntax

.\scripts\setup_ai_models.py:   File ".\scripts\setup_ai_models.py", line 13
    def check_python_version()
                              ^
SyntaxError: expected ':'

.\scripts\start_atlassian_server.py:   File ".\scripts\start_atlassian_server.py", line 17
    def setup_logging()
                       ^
SyntaxError: expected ':'

.\scripts\style_check.py:   File ".\scripts\style_check.py", line 16
    """Custom style checker for Unified AI Project.""":
                                                      ^
SyntaxError: invalid syntax

.\scripts\test_coverage_monitor.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (test_coverage_monitor.py, line 19)
.\scripts\test_environment_setup.py: Sorry: IndentationError: expected an indented block after function definition on line 15 (test_environment_setup.py, line 16)
.\scripts\test_execution_monitor.py:   File ".\scripts\test_execution_monitor.py", line 74
    for i in range(3)
                     ^
SyntaxError: expected ':'

.\scripts\test_failure_alert.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (test_failure_alert.py, line 20)
.\scripts\training_monitoring_visualization.py: Sorry: IndentationError: unexpected indent (training_monitoring_visualization.py, line 23)
.\scripts\update_common_voice_metadata.py:   File ".\scripts\update_common_voice_metadata.py", line 15
    def generate_common_voice_metadata()
                                        ^
SyntaxError: expected ':'

.\scripts\update_doc_status.py:   File ".\scripts\update_doc_status.py", line 36
    def get_all_statuses(cls)
                             ^
SyntaxError: expected ':'

.\scripts\validate_doc_links.py: Sorry: IndentationError: expected an indented block after function definition on line 45 (validate_doc_links.py, line 46)
.\scripts\validate_mcp_types.py:   File ".\scripts\validate_mcp_types.py", line 16
    """Validator for MCP type definitions.""":
                                             ^
SyntaxError: invalid syntax

.\scripts\core\config_manager.py:   File ".\scripts\core\config_manager.py", line 11
    class ConfigType(Enum)
                          ^
SyntaxError: expected ':'

.\scripts\core\environment_checker.py:   File ".\scripts\core\environment_checker.py", line 15
    class EnvironmentComponent(Enum)
                                    ^
SyntaxError: expected ':'

.\scripts\core\fix_engine.py:   File ".\scripts\core\fix_engine.py", line 26
    class FixType(Enum)
                       ^
SyntaxError: expected ':'

.\scripts\core\report_generator.py:   File ".\scripts\core\report_generator.py", line 10
    class ReportType(Enum)
                          ^
SyntaxError: expected ':'

.\scripts\data_processing\ingest_processed_logs_to_ham.py: Sorry: IndentationError: unexpected indent (ingest_processed_logs_to_ham.py, line 24)
.\scripts\modules\cleanup_module.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (cleanup_module.py, line 14)
.\scripts\modules\dependency_fixer.py: Sorry: IndentationError: expected an indented block after function definition on line 16 (dependency_fixer.py, line 17)
.\scripts\modules\import_fixer.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (import_fixer.py, line 15)
.\scripts\prototypes\miko_core_ham_prototype.py:   File ".\scripts\prototypes\miko_core_ham_prototype.py", line 23
    def run_prototype()
                       ^
SyntaxError: expected ':'

.\scripts\utils\file_utils.py:   File ".\scripts\utils\file_utils.py", line 11
    class FileType(Enum)
                        ^
SyntaxError: expected ':'

.\scripts\utils\process_utils.py:   File ".\scripts\utils\process_utils.py", line 14
    class ProcessStatus(Enum)
                             ^
SyntaxError: expected ':'

.\tests\automated_integration_test_pipeline.py:   File ".\tests\automated_integration_test_pipeline.py", line 18
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\tests\continuous_test_improvement.py:   File ".\tests\continuous_test_improvement.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\tests\deadlock_detector.py:   File ".\tests\deadlock_detector.py", line 26
    class DetectionType(Enum)
                             ^
SyntaxError: expected ':'

.\tests\generate_test_report.py:   File ".\tests\generate_test_report.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\tests\maintain_test_suite.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (maintain_test_suite.py, line 20)
.\tests\smart_test_runner.py:   File ".\tests\smart_test_runner.py", line 18
    def setup_environment()
                           ^
SyntaxError: expected ':'

.\tests\test_agi_integration.py: Sorry: IndentationError: expected an indented block after class definition on line 23 (test_agi_integration.py, line 24)
.\tests\test_atlassian_integration.py:   File ".\tests\test_atlassian_integration.py", line 20
    class TestAtlassianIntegration(unittest.TestCase)
                                                     ^
SyntaxError: expected ':'

.\tests\test_core_service_manager.py:   File ".\tests\test_core_service_manager.py", line 20
    class TestCoreServiceManager(unittest.TestCase)
                                                   ^
SyntaxError: expected ':'

.\tests\test_coverage_analyzer.py:   File ".\tests\test_coverage_analyzer.py", line 16
    class TestCoverageAnalyzer(unittest.TestCase)
                                                 ^
SyntaxError: expected ':'

.\tests\test_dependency_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 7 (test_dependency_manager.py, line 8)
.\tests\test_fix_debug.py:   File ".\tests\test_fix_debug.py", line 22
    for entity_id, entity in kg_data["entities"].items()
                                                        ^
SyntaxError: expected ':'

.\tests\test_fix_demo.py:   File ".\tests\test_fix_demo.py", line 14
    def create_problematic_file()
                                 ^
SyntaxError: expected ':'

.\tests\test_message_bridge.py:   File ".\tests\test_message_bridge.py", line 11
    def mock_external_connector()
                                 ^
SyntaxError: expected ':'

.\tests\test_performance_benchmark.py:   File ".\tests\test_performance_benchmark.py", line 15
    class TestPerformanceMetrics(unittest.TestCase)
                                                   ^
SyntaxError: expected ':'

.\tests\test_result_analyzer.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (test_result_analyzer.py, line 20)
.\tests\test_result_feedback.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (test_result_feedback.py, line 20)
.\tests\test_result_visualizer.py: Sorry: IndentationError: expected an indented block after function definition on line 23 (test_result_visualizer.py, line 24)
.\tests\test_runner.py: Sorry: IndentationError: expected an indented block after function definition on line 23 (test_runner.py, line 24)
.\tests\test_security.py:   File ".\tests\test_security.py", line 31
    )
    ^
SyntaxError: unmatched ')'

.\tests\test_security_improvements.py:   File ".\tests\test_security_improvements.py", line 11
    class TestSecurityImprovements(unittest.TestCase)
                                                     ^
SyntaxError: expected ':'

.\tests\test_trained_models.py:   File ".\tests\test_trained_models.py", line 50
    _ = str(char_map_path)
    ^^^^^^^^^^^^^^^^^^^^^^
SyntaxError: keyword argument repeated: _

.\tests\agents\test_knowledge_graph_agent.py:   File ".\tests\agents\test_knowledge_graph_agent.py", line 7
    def mock_hsp_connector()
                            ^
SyntaxError: expected ':'

.\tests\core_ai\test_agent_manager.py:   File ".\tests\core_ai\test_agent_manager.py", line 12
    class TestAgentManager(unittest.TestCase)
                                             ^
SyntaxError: expected ':'

.\tests\core_ai\code_understanding\test_lightweight_code_model.py:   File ".\tests\core_ai\code_understanding\test_lightweight_code_model.py", line 10
    class TestLightweightCodeModel(unittest.TestCase)
                                                     ^
SyntaxError: expected ':'

.\tests\core_ai\language_models\test_daily_language_model.py: Sorry: IndentationError: unexpected indent (test_daily_language_model.py, line 3)
.\tests\core_ai\learning\test_content_analyzer_module.py:   File ".\tests\core_ai\learning\test_content_analyzer_module.py", line 6
    class TestContentAnalyzerModule(unittest.TestCase)
                                                      ^
SyntaxError: expected ':'

.\tests\core_ai\lis\test_ham_lis_cache.py:   File ".\tests\core_ai\lis\test_ham_lis_cache.py", line 29
    class MockHAMMemoryManager(HAMMemoryManager)
                                                ^
SyntaxError: expected ':'

.\tests\hsp\test_hsp_advanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_advanced_integration.py, line 5)
.\tests\hsp\test_hsp_connector.py:   File ".\tests\hsp\test_hsp_connector.py", line 17
    class HSPOpinionPayload(TypedDict, total=False)
                                                   ^
SyntaxError: expected ':'

.\tests\hsp\test_hsp_enhanced_integration.py: Sorry: IndentationError: unexpected indent (test_hsp_enhanced_integration.py, line 6)
.\tests\integration\test_example_integration.py: Sorry: IndentationError: expected an indented block after function definition on line 13 (test_example_integration.py, line 14)
.\tests\integration\test_utils.py: Sorry: IndentationError: expected an indented block after function definition on line 14 (test_utils.py, line 15)
.\tests\integrations\test_atlassian_bridge_fallback.py:   File ".\tests\integrations\test_atlassian_bridge_fallback.py", line 15
    def mock_config(self)
                         ^
SyntaxError: expected ':'

.\tests\integrations\test_rovo_dev_agent.py:   File ".\tests\integrations\test_rovo_dev_agent.py", line 18
    def mock_config(self)
                         ^
SyntaxError: expected ':'

.\tests\integrations\test_rovo_dev_agent_recovery.py:   File ".\tests\integrations\test_rovo_dev_agent_recovery.py", line 19
    def mock_config(self)
                         ^
SyntaxError: expected ':'

.\tests\mcp\test_context7_connector.py: Sorry: IndentationError: unexpected indent (test_context7_connector.py, line 11)
.\tests\search\test_search_engine.py:   File ".\tests\search\test_search_engine.py", line 5
    class TestSearchEngine(unittest.TestCase)
                                             ^
SyntaxError: expected ':'

.\tests\services\test_ai_virtual_input_service.py:   File ".\tests\services\test_ai_virtual_input_service.py", line 7
    )
    ^
SyntaxError: unmatched ')'

.\tests\services\test_main_api_server_hsp.py: Sorry: IndentationError: expected an indented block after function definition on line 32 (test_main_api_server_hsp.py, line 33)
.\tests\services\test_resource_awareness_service.py:   File ".\tests\services\test_resource_awareness_service.py", line 10
    )
    ^
SyntaxError: unmatched ')'

.\tests\services\test_sandbox_executor.py:   File ".\tests\services\test_sandbox_executor.py", line 14
    class TestSandboxExecutor(unittest.TestCase)
                                                ^
SyntaxError: expected ':'

.\tests\tools\test_logic_model.py:   File ".\tests\tools\test_logic_model.py", line 22
    class TestLogicModelComponents(unittest.TestCase)
                                                     ^
SyntaxError: expected ':'

.\tests\tools\test_translation_model.py:   File ".\tests\tools\test_translation_model.py", line 23
    class TestTranslationModelComponents(unittest.TestCase)
                                                           ^
SyntaxError: expected ':'

.\tools\automated_data_pipeline.py:   File ".\tools\automated_data_pipeline.py", line 28
    self.project_root = Path(project_root) if project_root else Path(__file__).parent.parent:
                                                                                            ^
SyntaxError: invalid syntax

.\tools\debug_visualizer.py:   File ".\tools\debug_visualizer.py", line 24
    self.log_db_path = Path(log_db_path) if log_db_path else \:
                                                              ^
SyntaxError: unexpected character after line continuation character

.\tools\distributed_debug_logger.py:   File ".\tools\distributed_debug_logger.py", line 21
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\tools\e2e_test.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 18 (e2e_test.py, line 20)
.\tools\enhance_training_data.py:   File ".\tools\enhance_training_data.py", line 23
    def load_trained_model(model_name)
                                      ^
SyntaxError: expected ':'

.\tools\feature_status_tracker.py:   File ".\tools\feature_status_tracker.py", line 19
    class FeatureStatus(Enum)
                             ^
SyntaxError: expected ':'

.\tools\fix_import_paths.py:   File ".\tools\fix_import_paths.py", line 16
    def fix_import_paths_in_file(file_path)
                                           ^
SyntaxError: expected ':'

.\tools\generate_minimal_training_data.py:   File ".\tools\generate_minimal_training_data.py", line 20
    def create_minimal_training_data()
                                      ^
SyntaxError: expected ':'

.\tools\generate_multimodal_data.py: Sorry: IndentationError: expected an indented block after function definition on line 33 (generate_multimodal_data.py, line 34)
.\tools\prepare_concept_models_training_data.py:   File ".\tools\prepare_concept_models_training_data.py", line 24
    def extract_text_from_markdown(file_path)
                                             ^
SyntaxError: expected ':'

.\tools\process_traditional_data.py: Sorry: IndentationError: expected an indented block after function definition on line 27 (process_traditional_data.py, line 28)
.\tools\technical_debt_tracker.py:   File ".\tools\technical_debt_tracker.py", line 20
    class DebtType(Enum)
                        ^
SyntaxError: expected ':'

.\tools\test_atlassian_full.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 17 (test_atlassian_full.py, line 20)
.\tools\test_data_manager.py: Sorry: IndentationError: expected an indented block after function definition on line 18 (test_data_manager.py, line 19)
.\tools\test_integration.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 17 (test_integration.py, line 20)
.\tools\test_rovo_cli.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 17 (test_rovo_cli.py, line 19)
.\tools\test_rovo_integration.py: Sorry: IndentationError: expected an indented block after function definition on line 16 (test_rovo_integration.py, line 17)
.\tools\train_audio_model.py:   File ".\tools\train_audio_model.py", line 28
    class AudioDataset(Dataset)
                               ^
SyntaxError: expected ':'

.\tools\train_text_model.py:   File ".\tools\train_text_model.py", line 28
    class TextDataset(Dataset)
                              ^
SyntaxError: expected ':'

.\tools\train_vision_model.py:   File ".\tools\train_vision_model.py", line 29
    class VisionDataset(Dataset)
                                ^
SyntaxError: expected ':'

.\tools\user_acceptance_test.py: Sorry: IndentationError: expected an indented block after function definition on line 20 (user_acceptance_test.py, line 21)
.\tools\validate_generated_data.py: Sorry: IndentationError: expected an indented block after function definition on line 27 (validate_generated_data.py, line 28)
.\training\auto_training_manager.py:   File ".\training\auto_training_manager.py", line 30
    )
    ^
SyntaxError: unmatched ')'

.\training\collaborative_training_manager.py:   File ".\training\collaborative_training_manager.py", line 85
    def update_metrics(self, new_metrics: Dict[str, Any])
                                                         ^
SyntaxError: expected ':'

.\training\comprehensive_system_test.py:   File ".\training\comprehensive_system_test.py", line 18
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\data_manager.py:   File ".\training\data_manager.py", line 38
    def handle_error(error, context, strategy=None)
                                                   ^
SyntaxError: expected ':'

.\training\distributed_optimizer.py:   File ".\training\distributed_optimizer.py", line 50
    _ = 'last_heartbeat': time.time(),
    ^
SyntaxError: ':' expected after dictionary key

.\training\dynamic_loader.py: Sorry: IndentationError: expected an indented block after function definition on line 23 (dynamic_loader.py, line 24)
.\training\enhanced_checkpoint_manager.py:   File ".\training\enhanced_checkpoint_manager.py", line 32
    def handle_error(error, context, strategy=None)
                                                   ^
SyntaxError: expected ':'

.\training\enhanced_distributed_training_fault_tolerance.py:   File ".\training\enhanced_distributed_training_fault_tolerance.py", line 335
    _ = 'timestamp': datetime.now().isoformat(),
    ^^^^^^^^^^^^^^^
SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

.\training\enhanced_unit_tests.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 26 (enhanced_unit_tests.py, line 29)
.\training\error_handling_framework.py:   File ".\training\error_handling_framework.py", line 15
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\fault_detector.py: Sorry: IndentationError: expected an indented block after function definition on line 40 (fault_detector.py, line 41)
.\training\gpu_optimizer.py: Sorry: IndentationError: expected an indented block after function definition on line 30 (gpu_optimizer.py, line 31)
.\training\incremental_learning_manager.py:   File ".\training\incremental_learning_manager.py", line 31
    )
    ^
SyntaxError: unmatched ')'

.\training\model_knowledge_sharing.py: Sorry: IndentationError: expected an indented block after function definition on line 19 (model_knowledge_sharing.py, line 20)
.\training\model_version_controller.py:   File ".\training\model_version_controller.py", line 29
    )
    ^
SyntaxError: unmatched ')'

.\training\optimized_data_scanner.py: Sorry: IndentationError: expected an indented block after function definition on line 21 (optimized_data_scanner.py, line 22)
.\training\parallel_optimized_data_scanner.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 22 (parallel_optimized_data_scanner.py, line 24)
.\training\quick_hardware_test.py:   File ".\training\quick_hardware_test.py", line 23
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\resource_manager.py:   File ".\training\resource_manager.py", line 30
    )
    ^
SyntaxError: unmatched ')'

.\training\simple_health_check.py:   File ".\training\simple_health_check.py", line 14
    def check_core_components()
                               ^
SyntaxError: expected ':'

.\training\simple_test.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 20 (simple_test.py, line 23)
.\training\smart_resource_allocator.py: Sorry: IndentationError: expected an indented block after function definition on line 41 (smart_resource_allocator.py, line 42)
.\training\system_health_check.py:   File ".\training\system_health_check.py", line 17
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\task_migrator.py: Sorry: IndentationError: expected an indented block after function definition on line 38 (task_migrator.py, line 39)
.\training\task_priority_evaluator.py:   File ".\training\task_priority_evaluator.py", line 25
    )
    ^
SyntaxError: unmatched ')'

.\training\test_collaborative_training.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 29 (test_collaborative_training.py, line 32)
.\training\test_collaborative_training_simple.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 21 (test_collaborative_training_simple.py, line 23)
.\training\test_dynamic_loading.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 27 (test_dynamic_loading.py, line 30)
.\training\test_error_handling.py:   File ".\training\test_error_handling.py", line 20
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\test_fault_tolerance.py:   File ".\training\test_fault_tolerance.py", line 27
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\test_hardware_compatibility.py:   File ".\training\test_hardware_compatibility.py", line 39
    )
    ^
SyntaxError: unmatched ')'

.\training\test_integrated_graphics_training.py:   File ".\training\test_integrated_graphics_training.py", line 20
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\test_quick_validation.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 25 (test_quick_validation.py, line 28)
.\training\test_simple_collaborative.py: Sorry: IndentationError: expected an indented block after 'try' statement on line 19 (test_simple_collaborative.py, line 22)
.\training\training_monitor.py:   File ".\training\training_monitor.py", line 25
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

.\training\training_visualizer.py:   File ".\training\training_visualizer.py", line 26
    def __init__(self, component, operation, details=None)
                                                          ^
SyntaxError: expected ':'

.\training\train_model.py:   File ".\training\train_model.py", line 51
    def handle_error(error, context, strategy=None)
                                                   ^
SyntaxError: expected ':'

.\training\unified_execution_framework.py:   File ".\training\unified_execution_framework.py", line 26
    def __init__(self)
                      ^
SyntaxError: expected ':'

.\training\examples\distributed_training_fault_tolerance_example.py:   File ".\training\examples\distributed_training_fault_tolerance_example.py", line 22
    level: str=logging.INFO,
         ^
SyntaxError: invalid syntax

