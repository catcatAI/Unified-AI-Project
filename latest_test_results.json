{"created": 1760455061.9791937, "duration": 2631.2202887535095, "exitcode": 2, "root": "D:\\Projects\\Unified-AI-Project", "environment": {}, "summary": {"total": 0, "collected": 270}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "-p", "outcome": "passed", "result": []}, {"nodeid": "adaptive_learning_controller", "outcome": "passed", "result": []}, {"nodeid": "apps/apps/backend/tests/test_output_data/personality_manager_files", "outcome": "passed", "result": []}, {"nodeid": "apps/apps/backend/tests/test_output_data", "outcome": "passed", "result": [{"nodeid": "apps/apps/backend/tests/test_output_data/personality_manager_files", "type": "Dir"}]}, {"nodeid": "apps/apps/backend/tests", "outcome": "passed", "result": [{"nodeid": "apps/apps/backend/tests/test_output_data", "type": "Dir"}]}, {"nodeid": "apps/apps/backend", "outcome": "passed", "result": [{"nodeid": "apps/apps/backend/tests", "type": "Dir"}]}, {"nodeid": "apps/apps", "outcome": "passed", "result": [{"nodeid": "apps/apps/backend", "type": "Dir"}]}, {"nodeid": "apps/backend/backup", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/chroma_db", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/chromadb_local", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/configs/formula_configs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/configs/personality_profiles", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/configs", "outcome": "passed", "result": [{"nodeid": "apps/backend/configs/formula_configs", "type": "Dir"}, {"nodeid": "apps/backend/configs/personality_profiles", "type": "Dir"}]}, {"nodeid": "apps/backend/context_storage", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/chat_histories", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "apps/backend/data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "apps/backend/data/firebase", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/game_data", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/knowledge_bases", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/logs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/model_cache", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/models", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/processed_data/chroma_db", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "type": "Dir"}]}, {"nodeid": "apps/backend/data/processed_data", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/processed_data/chroma_db", "type": "Dir"}]}, {"nodeid": "apps/backend/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/runtime_data/data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "apps/backend/data/runtime_data/data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/data", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/runtime_data/data/atlassian_cache", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/data/demo_learning", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/data/fallback_comm", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/data/task_queue", "type": "Dir"}]}, {"nodeid": "apps/backend/data/runtime_data/test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data/test_data", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/runtime_data/test_data/task_queue", "type": "Dir"}]}, {"nodeid": "apps/backend/data/runtime_data/test_output_data", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data/runtime_data", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/runtime_data/data", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/test_data", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data/test_output_data", "type": "Dir"}]}, {"nodeid": "apps/backend/data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/data", "outcome": "passed", "result": [{"nodeid": "apps/backend/data/atlassian_cache", "type": "Dir"}, {"nodeid": "apps/backend/data/chat_histories", "type": "Dir"}, {"nodeid": "apps/backend/data/demo_learning", "type": "Dir"}, {"nodeid": "apps/backend/data/fallback_comm", "type": "Dir"}, {"nodeid": "apps/backend/data/firebase", "type": "Dir"}, {"nodeid": "apps/backend/data/game_data", "type": "Dir"}, {"nodeid": "apps/backend/data/knowledge_bases", "type": "Dir"}, {"nodeid": "apps/backend/data/logs", "type": "Dir"}, {"nodeid": "apps/backend/data/model_cache", "type": "Dir"}, {"nodeid": "apps/backend/data/models", "type": "Dir"}, {"nodeid": "apps/backend/data/processed_data", "type": "Dir"}, {"nodeid": "apps/backend/data/raw_datasets", "type": "Dir"}, {"nodeid": "apps/backend/data/runtime_data", "type": "Dir"}, {"nodeid": "apps/backend/data/task_queue", "type": "Dir"}]}, {"nodeid": "apps/backend/debug", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/docs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/htmlcov", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/logs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/model_cache", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/reports", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/schemas", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/scripts", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/agents", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/agents/base", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/agents/specialized", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/agents", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/ai/agents/base", "type": "Package"}, {"nodeid": "apps/backend/src/ai/agents/specialized", "type": "Package"}]}, {"nodeid": "apps/backend/src/ai/audio", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/code_understanding", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/compression", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/concept_models", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/context/storage", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/context", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/ai/context/storage", "type": "Dir"}]}, {"nodeid": "apps/backend/src/ai/crisis", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/deep_mapper", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/dialogue", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/discovery", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/emotion", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/evaluation", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/formula_engine", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/integration", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/knowledge_graph", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/language_models", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/learning", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/lis", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/memory", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/meta", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/meta_formulas", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/multimodal", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/ops", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/optimization", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/personality", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/rag", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/reasoning", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/service_discovery", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/symbolic_space", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/test_utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/time", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/token", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/translation", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/trust", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/trust_manager", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai/world_model", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/ai", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/ai/agents", "type": "Package"}, {"nodeid": "apps/backend/src/ai/audio", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/code_understanding", "type": "Package"}, {"nodeid": "apps/backend/src/ai/compression", "type": "Package"}, {"nodeid": "apps/backend/src/ai/concept_models", "type": "Package"}, {"nodeid": "apps/backend/src/ai/context", "type": "Package"}, {"nodeid": "apps/backend/src/ai/crisis", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/deep_mapper", "type": "Package"}, {"nodeid": "apps/backend/src/ai/dialogue", "type": "Package"}, {"nodeid": "apps/backend/src/ai/discovery", "type": "Package"}, {"nodeid": "apps/backend/src/ai/emotion", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/evaluation", "type": "Package"}, {"nodeid": "apps/backend/src/ai/formula_engine", "type": "Package"}, {"nodeid": "apps/backend/src/ai/integration", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/knowledge_graph", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/language_models", "type": "Package"}, {"nodeid": "apps/backend/src/ai/learning", "type": "Package"}, {"nodeid": "apps/backend/src/ai/lis", "type": "Package"}, {"nodeid": "apps/backend/src/ai/memory", "type": "Package"}, {"nodeid": "apps/backend/src/ai/meta", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/meta_formulas", "type": "Package"}, {"nodeid": "apps/backend/src/ai/multimodal", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/ops", "type": "Package"}, {"nodeid": "apps/backend/src/ai/optimization", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/personality", "type": "Package"}, {"nodeid": "apps/backend/src/ai/rag", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/reasoning", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/service_discovery", "type": "Package"}, {"nodeid": "apps/backend/src/ai/symbolic_space", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/test_utils", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/time", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/token", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/translation", "type": "Dir"}, {"nodeid": "apps/backend/src/ai/trust", "type": "Package"}, {"nodeid": "apps/backend/src/ai/trust_manager", "type": "Package"}, {"nodeid": "apps/backend/src/ai/world_model", "type": "Dir"}]}, {"nodeid": "apps/backend/src/api/routes", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/api", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/api/routes", "type": "Dir"}]}, {"nodeid": "apps/backend/src/compat", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/configs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/cache", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/cognitive", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/config", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/configs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/creativity", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/data", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/database", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/error", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/ethics", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/evolution", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/fusion", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp/bridge", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp/external", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp/fallback", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp/internal", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp/utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/hsp", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/hsp/bridge", "type": "Package"}, {"nodeid": "apps/backend/src/core/hsp/external", "type": "Package"}, {"nodeid": "apps/backend/src/core/hsp/fallback", "type": "Dir"}, {"nodeid": "apps/backend/src/core/hsp/internal", "type": "Package"}, {"nodeid": "apps/backend/src/core/hsp/utils", "type": "Package"}]}, {"nodeid": "apps/backend/src/core/io", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/knowledge", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/logging", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/managers", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/memory", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/metacognition", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/monitoring", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/security", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/services", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/services/node_services", "type": "Dir"}]}, {"nodeid": "apps/backend/src/core/shared/types", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/shared", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/shared/types", "type": "Package"}, {"nodeid": "apps/backend/src/core/shared/utils", "type": "Dir"}]}, {"nodeid": "apps/backend/src/core/sync", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/core/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "apps/backend/src/core/tools", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "apps/backend/src/core/tools/logic_model", "type": "Package"}, {"nodeid": "apps/backend/src/core/tools/math_model", "type": "Package"}, {"nodeid": "apps/backend/src/core/tools/parameter_extractor", "type": "Package"}, {"nodeid": "apps/backend/src/core/tools/translation_model", "type": "Package"}]}, {"nodeid": "apps/backend/src/core", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/core/cache", "type": "Dir"}, {"nodeid": "apps/backend/src/core/cognitive", "type": "Dir"}, {"nodeid": "apps/backend/src/core/config", "type": "Dir"}, {"nodeid": "apps/backend/src/core/configs", "type": "Dir"}, {"nodeid": "apps/backend/src/core/creativity", "type": "Dir"}, {"nodeid": "apps/backend/src/core/data", "type": "Dir"}, {"nodeid": "apps/backend/src/core/database", "type": "Dir"}, {"nodeid": "apps/backend/src/core/error", "type": "Dir"}, {"nodeid": "apps/backend/src/core/ethics", "type": "Dir"}, {"nodeid": "apps/backend/src/core/evolution", "type": "Dir"}, {"nodeid": "apps/backend/src/core/fusion", "type": "Dir"}, {"nodeid": "apps/backend/src/core/hsp", "type": "Package"}, {"nodeid": "apps/backend/src/core/io", "type": "Dir"}, {"nodeid": "apps/backend/src/core/knowledge", "type": "Dir"}, {"nodeid": "apps/backend/src/core/logging", "type": "Dir"}, {"nodeid": "apps/backend/src/core/managers", "type": "Dir"}, {"nodeid": "apps/backend/src/core/memory", "type": "Dir"}, {"nodeid": "apps/backend/src/core/metacognition", "type": "Dir"}, {"nodeid": "apps/backend/src/core/monitoring", "type": "Dir"}, {"nodeid": "apps/backend/src/core/security", "type": "Dir"}, {"nodeid": "apps/backend/src/core/services", "type": "Package"}, {"nodeid": "apps/backend/src/core/shared", "type": "Package"}, {"nodeid": "apps/backend/src/core/sync", "type": "Dir"}, {"nodeid": "apps/backend/src/core/tools", "type": "Package"}]}, {"nodeid": "apps/backend/src/creation", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/data/models", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/data", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/data/models", "type": "Dir"}, {"nodeid": "apps/backend/src/data/raw_datasets", "type": "Dir"}]}, {"nodeid": "apps/backend/src/docs/technical_design", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/docs", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/docs/technical_design", "type": "Dir"}]}, {"nodeid": "apps/backend/src/economy", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/evaluation", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/fragmenta", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game/assets/images/backgrounds", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game/assets/images/portraits", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game/assets/images", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/game/assets/images/backgrounds", "type": "Dir"}, {"nodeid": "apps/backend/src/game/assets/images/portraits", "type": "Dir"}]}, {"nodeid": "apps/backend/src/game/assets/sprites/characters", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game/assets/sprites/icons", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game/assets/sprites", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/game/assets/sprites/characters", "type": "Dir"}, {"nodeid": "apps/backend/src/game/assets/sprites/icons", "type": "Dir"}]}, {"nodeid": "apps/backend/src/game/assets", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/game/assets/images", "type": "Dir"}, {"nodeid": "apps/backend/src/game/assets/sprites", "type": "Dir"}]}, {"nodeid": "apps/backend/src/game/scenes", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/game", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/game/assets", "type": "Dir"}, {"nodeid": "apps/backend/src/game/scenes", "type": "Dir"}]}, {"nodeid": "apps/backend/src/integrations", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/interfaces", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/logs/self_maintenance", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/logs", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/logs/self_maintenance", "type": "Dir"}]}, {"nodeid": "apps/backend/src/managers", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/mcp/fallback", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/mcp", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/mcp/fallback", "type": "Package"}]}, {"nodeid": "apps/backend/src/modules_fragmenta", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/monitoring", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/optimization", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/pet", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/search", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/security", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/services", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/services/node_services", "type": "Dir"}]}, {"nodeid": "apps/backend/src/shared/types", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/shared", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/shared/types", "type": "Package"}, {"nodeid": "apps/backend/src/shared/utils", "type": "Package"}]}, {"nodeid": "apps/backend/src/stubs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/system", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "apps/backend/src/tools", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "apps/backend/src/tools/logic_model", "type": "Package"}, {"nodeid": "apps/backend/src/tools/math_model", "type": "Package"}, {"nodeid": "apps/backend/src/tools/parameter_extractor", "type": "Package"}, {"nodeid": "apps/backend/src/tools/translation_model", "type": "Package"}]}, {"nodeid": "apps/backend/src/utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/src", "outcome": "passed", "result": [{"nodeid": "apps/backend/src/agents", "type": "Package"}, {"nodeid": "apps/backend/src/ai", "type": "Dir"}, {"nodeid": "apps/backend/src/api", "type": "Package"}, {"nodeid": "apps/backend/src/compat", "type": "Package"}, {"nodeid": "apps/backend/src/configs", "type": "Dir"}, {"nodeid": "apps/backend/src/core", "type": "Dir"}, {"nodeid": "apps/backend/src/creation", "type": "Dir"}, {"nodeid": "apps/backend/src/data", "type": "Dir"}, {"nodeid": "apps/backend/src/docs", "type": "Dir"}, {"nodeid": "apps/backend/src/economy", "type": "Package"}, {"nodeid": "apps/backend/src/evaluation", "type": "Dir"}, {"nodeid": "apps/backend/src/fragmenta", "type": "Package"}, {"nodeid": "apps/backend/src/game", "type": "Package"}, {"nodeid": "apps/backend/src/integrations", "type": "Package"}, {"nodeid": "apps/backend/src/interfaces", "type": "Package"}, {"nodeid": "apps/backend/src/logs", "type": "Dir"}, {"nodeid": "apps/backend/src/managers", "type": "Dir"}, {"nodeid": "apps/backend/src/mcp", "type": "Package"}, {"nodeid": "apps/backend/src/modules_fragmenta", "type": "Package"}, {"nodeid": "apps/backend/src/monitoring", "type": "Dir"}, {"nodeid": "apps/backend/src/optimization", "type": "Package"}, {"nodeid": "apps/backend/src/pet", "type": "Package"}, {"nodeid": "apps/backend/src/search", "type": "Dir"}, {"nodeid": "apps/backend/src/security", "type": "Package"}, {"nodeid": "apps/backend/src/services", "type": "Package"}, {"nodeid": "apps/backend/src/shared", "type": "Package"}, {"nodeid": "apps/backend/src/stubs", "type": "Dir"}, {"nodeid": "apps/backend/src/system", "type": "Package"}, {"nodeid": "apps/backend/src/tools", "type": "Package"}, {"nodeid": "apps/backend/src/utils", "type": "Dir"}]}, {"nodeid": "apps/backend/test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/test_data/templates", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/test_data/test_reports", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/test_data", "outcome": "passed", "result": [{"nodeid": "apps/backend/test_data/task_queue", "type": "Dir"}, {"nodeid": "apps/backend/test_data/templates", "type": "Dir"}, {"nodeid": "apps/backend/test_data/test_reports", "type": "Dir"}]}, {"nodeid": "apps/backend/test_reports", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/test_results", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/tests/debug", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/tests", "outcome": "passed", "result": [{"nodeid": "apps/backend/tests/debug", "type": "Dir"}]}, {"nodeid": "apps/backend/tools/check", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/tools/fix", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/tools/utils", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/tools", "outcome": "passed", "result": [{"nodeid": "apps/backend/tools/check", "type": "Dir"}, {"nodeid": "apps/backend/tools/fix", "type": "Dir"}, {"nodeid": "apps/backend/tools/utils", "type": "Dir"}]}, {"nodeid": "apps/backend/training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/training/configs", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/training/models", "outcome": "passed", "result": []}, {"nodeid": "apps/backend/training", "outcome": "passed", "result": [{"nodeid": "apps/backend/training/checkpoints", "type": "Dir"}, {"nodeid": "apps/backend/training/configs", "type": "Dir"}, {"nodeid": "apps/backend/training/models", "type": "Dir"}]}, {"nodeid": "apps/backend", "outcome": "passed", "result": [{"nodeid": "apps/backend/backup", "type": "Dir"}, {"nodeid": "apps/backend/chroma_db", "type": "Dir"}, {"nodeid": "apps/backend/chromadb_local", "type": "Package"}, {"nodeid": "apps/backend/configs", "type": "Package"}, {"nodeid": "apps/backend/context_storage", "type": "Dir"}, {"nodeid": "apps/backend/data", "type": "Dir"}, {"nodeid": "apps/backend/debug", "type": "Dir"}, {"nodeid": "apps/backend/docs", "type": "Dir"}, {"nodeid": "apps/backend/htmlcov", "type": "Dir"}, {"nodeid": "apps/backend/logs", "type": "Dir"}, {"nodeid": "apps/backend/model_cache", "type": "Dir"}, {"nodeid": "apps/backend/reports", "type": "Dir"}, {"nodeid": "apps/backend/schemas", "type": "Dir"}, {"nodeid": "apps/backend/scripts", "type": "Dir"}, {"nodeid": "apps/backend/src", "type": "Package"}, {"nodeid": "apps/backend/test_data", "type": "Dir"}, {"nodeid": "apps/backend/test_reports", "type": "Dir"}, {"nodeid": "apps/backend/test_results", "type": "Dir"}, {"nodeid": "apps/backend/tests", "type": "Dir"}, {"nodeid": "apps/backend/tools", "type": "Dir"}, {"nodeid": "apps/backend/training", "type": "Dir"}]}, {"nodeid": "apps/backup/integration_fix_20250904_211322", "outcome": "passed", "result": []}, {"nodeid": "apps/backup/integration_fix_20250904_211355", "outcome": "passed", "result": []}, {"nodeid": "apps/backup", "outcome": "passed", "result": [{"nodeid": "apps/backup/integration_fix_20250904_211322", "type": "Dir"}, {"nodeid": "apps/backup/integration_fix_20250904_211355", "type": "Dir"}]}, {"nodeid": "apps/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "apps/data", "outcome": "passed", "result": [{"nodeid": "apps/data/raw_datasets", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/__tests__", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/coverage/lcov-report", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/coverage", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/coverage/lcov-report", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/docs", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/agents", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/api", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/components/ui", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/components", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/src/components/ui", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/electron_app/src/config", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/contexts", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src/pages", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/src", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/src/agents", "type": "Package"}, {"nodeid": "apps/desktop-app/electron_app/src/api", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/src/components", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/src/config", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/src/contexts", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/src/pages", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/electron_app/test", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/views/code_inspect/src/api", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/views/code_inspect/src", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/views/code_inspect/src/api", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/electron_app/views/code_inspect", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/views/code_inspect/src", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/electron_app/views/uni_ai_dashboard", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app/electron_app/views", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/views/code_inspect", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/views/uni_ai_dashboard", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/electron_app", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/electron_app/src", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/test", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app/views", "type": "Dir"}]}, {"nodeid": "apps/desktop-app/logs", "outcome": "passed", "result": []}, {"nodeid": "apps/desktop-app", "outcome": "passed", "result": [{"nodeid": "apps/desktop-app/__tests__", "type": "Dir"}, {"nodeid": "apps/desktop-app/coverage", "type": "Dir"}, {"nodeid": "apps/desktop-app/docs", "type": "Dir"}, {"nodeid": "apps/desktop-app/electron_app", "type": "Dir"}, {"nodeid": "apps/desktop-app/logs", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/__tests__", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/coverage/lcov-report", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/coverage", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/coverage/lcov-report", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/docs", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/examples/websocket", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/examples", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/examples/websocket", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/prisma", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/public", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/chat", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/code", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/health", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/image", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/search", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api/status", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/api", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/app/api/chat", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/api/code", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/api/health", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/api/image", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/api/search", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/api/status", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/src/app/quest/ai-chat", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/angela-game", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/architecture-editor", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/atlassian-management", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/code-editor", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/dashboard", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/documentation", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/function-editor", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/knowledge-graph", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/model-training", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest/system-monitor", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/app/quest", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/app/quest/ai-chat", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/angela-game", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/architecture-editor", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/atlassian-management", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/code-editor", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/dashboard", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/documentation", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/function-editor", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/knowledge-graph", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/model-training", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest/system-monitor", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/src/app", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/app/api", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/app/quest", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/src/components/ai-dashboard/tabs", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/components/ai-dashboard", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/components/ai-dashboard/tabs", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/src/components/ui", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/components", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/components/ai-dashboard", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/components/ui", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard/src/hooks", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/lib", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src/types", "outcome": "passed", "result": []}, {"nodeid": "apps/frontend-dashboard/src", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/src/app", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/components", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/hooks", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/lib", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src/types", "type": "Dir"}]}, {"nodeid": "apps/frontend-dashboard", "outcome": "passed", "result": [{"nodeid": "apps/frontend-dashboard/__tests__", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/coverage", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/docs", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/examples", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/prisma", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/public", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard/src", "type": "Dir"}]}, {"nodeid": "apps/training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "apps/training/configs", "outcome": "passed", "result": []}, {"nodeid": "apps/training/models", "outcome": "passed", "result": []}, {"nodeid": "apps/training", "outcome": "passed", "result": [{"nodeid": "apps/training/checkpoints", "type": "Dir"}, {"nodeid": "apps/training/configs", "type": "Dir"}, {"nodeid": "apps/training/models", "type": "Dir"}]}, {"nodeid": "apps", "outcome": "passed", "result": [{"nodeid": "apps/apps", "type": "Dir"}, {"nodeid": "apps/backend", "type": "Package"}, {"nodeid": "apps/backup", "type": "Dir"}, {"nodeid": "apps/data", "type": "Dir"}, {"nodeid": "apps/desktop-app", "type": "Dir"}, {"nodeid": "apps/frontend-dashboard", "type": "Dir"}, {"nodeid": "apps/training", "type": "Dir"}]}, {"nodeid": "archived_docs/auto_fix_documents_20251006", "outcome": "passed", "result": []}, {"nodeid": "archived_docs", "outcome": "passed", "result": [{"nodeid": "archived_docs/auto_fix_documents_20251006", "type": "Dir"}]}, {"nodeid": "archived_fix_scripts/check_scripts", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts/enhanced_scripts", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts/fix_scripts", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts/quick_repair_test.py", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts/root_scripts_archive_20251006/import_test.py", "outcome": "failed", "result": [], "longrepr": "archived_fix_scripts\\root_scripts_archive_20251006\\import_test.py:1: in <module>\n    from unified_auto_fix_system.interfaces.cli_interface import CLIFixInterface\nunified_auto_fix_system\\__init__.py:27: in <module>\n    from .core.unified_fix_engine import UnifiedFixEngine\nunified_auto_fix_system\\core\\unified_fix_engine.py:21: in <module>\n    from .fix_types import FixType, FixStatus, FixScope, FixPriority\nunified_auto_fix_system\\core\\fix_types.py:70: in <module>\n    class FixCategory:\nunified_auto_fix_system\\core\\fix_types.py:120: in FixCategory\n    FixType.TYPE_HINT_FIX,\n    ^^^^^^^^^^^^^^^^^^^^^\nE   AttributeError: type object 'FixType' has no attribute 'TYPE_HINT_FIX'"}, {"nodeid": "archived_fix_scripts/root_scripts_archive_20251006", "outcome": "passed", "result": [{"nodeid": "archived_fix_scripts/root_scripts_archive_20251006/import_test.py", "type": "Module"}]}, {"nodeid": "archived_fix_scripts/unified_scripts", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts/unrestricted_scripts_20251013", "outcome": "passed", "result": []}, {"nodeid": "archived_fix_scripts", "outcome": "passed", "result": [{"nodeid": "archived_fix_scripts/check_scripts", "type": "Dir"}, {"nodeid": "archived_fix_scripts/enhanced_scripts", "type": "Dir"}, {"nodeid": "archived_fix_scripts/fix_scripts", "type": "Dir"}, {"nodeid": "archived_fix_scripts/quick_repair_test.py", "type": "Module"}, {"nodeid": "archived_fix_scripts/root_scripts_archive_20251006", "type": "Dir"}, {"nodeid": "archived_fix_scripts/unified_scripts", "type": "Dir"}, {"nodeid": "archived_fix_scripts/unrestricted_scripts_20251013", "type": "Dir"}]}, {"nodeid": "archived_systems/auto_repair_development_20251008/comprehensive_repair_test.py", "outcome": "passed", "result": [{"nodeid": "archived_systems/auto_repair_development_20251008/comprehensive_repair_test.py::test_unified_auto_repair_system", "type": "Function", "lineno": 127}, {"nodeid": "archived_systems/auto_repair_development_20251008/comprehensive_repair_test.py::test_integration_manager", "type": "Function", "lineno": 212}, {"nodeid": "archived_systems/auto_repair_development_20251008/comprehensive_repair_test.py::test_archived_files_repair", "type": "Function", "lineno": 242}]}, {"nodeid": "archived_systems/auto_repair_development_20251008", "outcome": "passed", "result": [{"nodeid": "archived_systems/auto_repair_development_20251008/comprehensive_repair_test.py", "type": "Module"}]}, {"nodeid": "archived_systems/auto_repair_systems_20251008", "outcome": "passed", "result": []}, {"nodeid": "archived_systems/context_system_20251008/storage", "outcome": "passed", "result": []}, {"nodeid": "archived_systems/context_system_20251008", "outcome": "passed", "result": [{"nodeid": "archived_systems/context_system_20251008/storage", "type": "Dir"}]}, {"nodeid": "archived_systems/test_detector.py", "outcome": "passed", "result": []}, {"nodeid": "archived_systems/test_import.py", "outcome": "passed", "result": []}, {"nodeid": "archived_systems/unified_system_migration", "outcome": "passed", "result": []}, {"nodeid": "archived_systems", "outcome": "passed", "result": [{"nodeid": "archived_systems/auto_repair_development_20251008", "type": "Dir"}, {"nodeid": "archived_systems/auto_repair_systems_20251008", "type": "Dir"}, {"nodeid": "archived_systems/context_system_20251008", "type": "Package"}, {"nodeid": "archived_systems/test_detector.py", "type": "Module"}, {"nodeid": "archived_systems/test_import.py", "type": "Module"}, {"nodeid": "archived_systems/unified_system_migration", "type": "Dir"}]}, {"nodeid": "auto_fix_system_tests/enhanced_unified_fix_backups", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/logs", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/test_basic_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_basic_system.py::test_basic_imports", "type": "Function", "lineno": 13}, {"nodeid": "auto_fix_system_tests/test_basic_system.py::test_simple_functionality", "type": "Function", "lineno": 51}]}, {"nodeid": "auto_fix_system_tests/test_comprehensive.py", "outcome": "failed", "result": [], "longrepr": "auto_fix_system_tests\\test_comprehensive.py:21: in <module>\n    @undefined_decorator\n     ^^^^^^^^^^^^^^^^^^^\nE   NameError: name 'undefined_decorator' is not defined"}, {"nodeid": "auto_fix_system_tests/test_comprehensive_system_status.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_comprehensive_system_status.py::test_system_imports", "type": "Function", "lineno": 15}, {"nodeid": "auto_fix_system_tests/test_comprehensive_system_status.py::test_fix_types", "type": "Function", "lineno": 70}, {"nodeid": "auto_fix_system_tests/test_comprehensive_system_status.py::test_basic_functionality", "type": "Function", "lineno": 99}]}, {"nodeid": "auto_fix_system_tests/test_core_functions.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_core_functions.py::test_core_functionality", "type": "Function", "lineno": 10}, {"nodeid": "auto_fix_system_tests/test_core_functions.py::test_cli_interface", "type": "Function", "lineno": 60}, {"nodeid": "auto_fix_system_tests/test_core_functions.py::test_safety_mechanisms", "type": "Function", "lineno": 78}]}, {"nodeid": "auto_fix_system_tests/test_enhanced_auto_fix_comprehensive.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_enhanced_auto_fix_comprehensive.py::test_enhanced_system", "type": "Function", "lineno": 15}]}, {"nodeid": "auto_fix_system_tests/test_enhanced_auto_fix_system.py", "outcome": "failed", "result": [], "longrepr": "auto_fix_system_tests\\test_enhanced_auto_fix_system.py:16: in <module>\n    from unified_auto_fix_system.core.enhanced_unified_fix_engine import EnhancedUnifiedFixEngine\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n<frozen importlib._bootstrap_external>:1532: in find_spec\n    ???\n<frozen importlib._bootstrap_external>:1501: in _get_spec\n    ???\n<frozen importlib._bootstrap_external>:1372: in __iter__\n    ???\n<frozen importlib._bootstrap_external>:1359: in _recalculate\n    ???\n<frozen importlib._bootstrap_external>:1355: in _get_parent_path\n    ???\nE   KeyError: 'unified_auto_fix_system'"}, {"nodeid": "auto_fix_system_tests/test_fix_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_fix_system.py::test_basic_import", "type": "Function", "lineno": 6}, {"nodeid": "auto_fix_system_tests/test_fix_system.py::test_module_imports", "type": "Function", "lineno": 17}, {"nodeid": "auto_fix_system_tests/test_fix_system.py::test_fix_context_creation", "type": "Function", "lineno": 38}]}, {"nodeid": "auto_fix_system_tests/test_iterative_import.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/test_quick_enhanced_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_quick_enhanced_system.py::test_quick_functionality", "type": "Function", "lineno": 13}]}, {"nodeid": "auto_fix_system_tests/test_safety_features.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_safety_features.py::test_scope_control", "type": "Function", "lineno": 6}, {"nodeid": "auto_fix_system_tests/test_safety_features.py::test_dry_run_protection", "type": "Function", "lineno": 50}, {"nodeid": "auto_fix_system_tests/test_safety_features.py::test_backup_protection", "type": "Function", "lineno": 85}]}, {"nodeid": "auto_fix_system_tests/test_simple_enhanced_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_simple_enhanced_system.py::test_basic_functionality", "type": "Function", "lineno": 13}]}, {"nodeid": "auto_fix_system_tests/test_simplified_enhanced_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/test_simplified_enhanced_system.py::test_simplified_system", "type": "Function", "lineno": 14}]}, {"nodeid": "auto_fix_system_tests/test_syntax_fixer.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/enhanced_unified_fix_backups", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/logs", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_basic_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_basic_system' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_basic_system.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_basic_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_comprehensive.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_comprehensive.py\", line 9\nE       if True\nE              ^\nE   SyntaxError: expected ':'"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_comprehensive_system_status.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_comprehensive_system_status' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_comprehensive_system_status.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_comprehensive_system_status.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_core_functions.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_core_functions' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_core_functions.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_core_functions.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_enhanced_auto_fix_comprehensive.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_enhanced_auto_fix_comprehensive' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_enhanced_auto_fix_comprehensive.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_enhanced_auto_fix_comprehensive.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_enhanced_auto_fix_system.py", "outcome": "failed", "result": [], "longrepr": "auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_enhanced_auto_fix_system.py:16: in <module>\n    from unified_auto_fix_system.core.enhanced_unified_fix_engine import EnhancedUnifiedFixEngine\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n<frozen importlib._bootstrap_external>:1532: in find_spec\n    ???\n<frozen importlib._bootstrap_external>:1501: in _get_spec\n    ???\n<frozen importlib._bootstrap_external>:1372: in __iter__\n    ???\n<frozen importlib._bootstrap_external>:1359: in _recalculate\n    ???\n<frozen importlib._bootstrap_external>:1355: in _get_parent_path\n    ???\nE   KeyError: 'unified_auto_fix_system'"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_fix_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_fix_system' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_fix_system.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_fix_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_iterative_import.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_iterative_import' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_iterative_import.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_iterative_import.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_quick_enhanced_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_quick_enhanced_system' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_quick_enhanced_system.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_quick_enhanced_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_safety_features.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_safety_features' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_safety_features.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_safety_features.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_simple_enhanced_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_simple_enhanced_system' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_simple_enhanced_system.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_simple_enhanced_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_simplified_enhanced_system.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_simplified_enhanced_system' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_simplified_enhanced_system.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_simplified_enhanced_system.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_syntax_fixer.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_syntax_fixer' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\test_syntax_fixer.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\auto_fix_system_tests\\unified_fix_backups\\fix_backup_20251006_063131\\test_syntax_fixer.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/enhanced_unified_fix_backups", "type": "Dir"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/logs", "type": "Dir"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_basic_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_comprehensive.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_comprehensive_system_status.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_core_functions.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_enhanced_auto_fix_comprehensive.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_enhanced_auto_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_iterative_import.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_quick_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_safety_features.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_simple_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_simplified_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131/test_syntax_fixer.py", "type": "Module"}]}, {"nodeid": "auto_fix_system_tests/unified_fix_backups", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/unified_fix_backups/fix_backup_20251006_063131", "type": "Dir"}]}, {"nodeid": "auto_fix_system_tests/unified_fix_reports", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_system_tests", "outcome": "passed", "result": [{"nodeid": "auto_fix_system_tests/enhanced_unified_fix_backups", "type": "Dir"}, {"nodeid": "auto_fix_system_tests/logs", "type": "Dir"}, {"nodeid": "auto_fix_system_tests/test_basic_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_comprehensive.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_comprehensive_system_status.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_core_functions.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_enhanced_auto_fix_comprehensive.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_enhanced_auto_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_iterative_import.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_quick_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_safety_features.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_simple_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_simplified_enhanced_system.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/test_syntax_fixer.py", "type": "Module"}, {"nodeid": "auto_fix_system_tests/unified_fix_backups", "type": "Dir"}, {"nodeid": "auto_fix_system_tests/unified_fix_reports", "type": "Dir"}]}, {"nodeid": "auto_fix_workspace/sandbox", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/scripts/comprehensive_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_workspace\\scripts\\comprehensive_test.py\", line 4\nE       def test_function()\nE                          ^\nE   SyntaxError: expected ':'"}, {"nodeid": "auto_fix_workspace/scripts/full_width_syntax_error_test.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/scripts/full_width_syntax_error_test.py::test_function", "type": "Function", "lineno": 2}]}, {"nodeid": "auto_fix_workspace/scripts/full_width_test.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/scripts/indentation_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_workspace\\scripts\\indentation_test.py\", line 4\nE       print(\"This should be indented\")\nE       ^^^^^\nE   IndentationError: expected an indented block after function definition on line 3"}, {"nodeid": "auto_fix_workspace/scripts/layered_error_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_workspace\\scripts\\layered_error_test.py\", line 4\nE       def test_function()\nE                          ^\nE   SyntaxError: expected ':'"}, {"nodeid": "auto_fix_workspace/scripts/multi_error_test.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/scripts/simple_indentation_test.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/scripts/single_error_test.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/scripts/single_error_test.py::test_function", "type": "Function", "lineno": 2}]}, {"nodeid": "auto_fix_workspace/scripts/test_enhanced_auto_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nauto_fix_workspace\\scripts\\test_enhanced_auto_fix.py:19: in <module>\n    from unified_auto_fix import UnifiedAutoFix, OperationMode, ExecutionScope\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_workspace\\scripts\\unified_auto_fix.py\", line 31\nE       class OperationMode(Enum)\nE                                ^\nE   SyntaxError: expected ':'"}, {"nodeid": "auto_fix_workspace/scripts/test_syntax_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\auto_fix_workspace\\scripts\\test_syntax_fix.py\", line 30\nE       s = \"This is an unterminated string\nE           ^\nE   SyntaxError: unterminated string literal (detected at line 30)"}, {"nodeid": "auto_fix_workspace/scripts", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/scripts/comprehensive_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/full_width_syntax_error_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/full_width_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/indentation_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/layered_error_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/multi_error_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/simple_indentation_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/single_error_test.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/test_enhanced_auto_fix.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/scripts/test_syntax_fix.py", "type": "Module"}]}, {"nodeid": "auto_fix_workspace/test_enhanced_fix_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_enhanced_fix_system.py::test_enhanced_fix_system", "type": "Function", "lineno": 15}]}, {"nodeid": "auto_fix_workspace/test_fix_files.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_fix_files.py::test_fix_specific_files", "type": "Function", "lineno": 13}]}, {"nodeid": "auto_fix_workspace/test_get_files.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/test_improved_fix_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_improved_fix_system.py::test_improved_fix_system", "type": "Function", "lineno": 15}]}, {"nodeid": "auto_fix_workspace/test_layered_fix_system.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_layered_fix_system.py::test_layered_fix_system", "type": "Function", "lineno": 15}]}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py::TestClass1", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_real_syntax_errors.py::test_function1", "type": "Function", "lineno": 3}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py::TestClass1", "type": "Class"}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py::test_function2", "type": "Function", "lineno": 19}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py::test_function3", "type": "Function", "lineno": 28}]}, {"nodeid": "auto_fix_workspace/test_simple_errors.py::TestClass1", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/test_simple_errors.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_simple_errors.py::test_function1", "type": "Function", "lineno": 3}, {"nodeid": "auto_fix_workspace/test_simple_errors.py::TestClass1", "type": "Class"}]}, {"nodeid": "auto_fix_workspace/test_simple_syntax_errors.py::TestClass1", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/test_simple_syntax_errors.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_simple_syntax_errors.py::test_function1", "type": "Function", "lineno": 3}, {"nodeid": "auto_fix_workspace/test_simple_syntax_errors.py::TestClass1", "type": "Class"}]}, {"nodeid": "auto_fix_workspace/test_syntax_check.py", "outcome": "passed", "result": []}, {"nodeid": "auto_fix_workspace/test_workspace.py", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/test_workspace.py::test_unified_auto_fix_import", "type": "Function", "lineno": 13}, {"nodeid": "auto_fix_workspace/test_workspace.py::test_interactive_auto_fix_import", "type": "Function", "lineno": 29}, {"nodeid": "auto_fix_workspace/test_workspace.py::test_sandbox_import", "type": "Function", "lineno": 45}]}, {"nodeid": "auto_fix_workspace", "outcome": "passed", "result": [{"nodeid": "auto_fix_workspace/sandbox", "type": "Dir"}, {"nodeid": "auto_fix_workspace/scripts", "type": "Dir"}, {"nodeid": "auto_fix_workspace/test_enhanced_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_fix_files.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_get_files.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_improved_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_layered_fix_system.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_real_syntax_errors.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_simple_errors.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_simple_syntax_errors.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_syntax_check.py", "type": "Module"}, {"nodeid": "auto_fix_workspace/test_workspace.py", "type": "Module"}]}, {"nodeid": "automation_reports/decisions", "outcome": "passed", "result": []}, {"nodeid": "automation_reports", "outcome": "passed", "result": [{"nodeid": "automation_reports/decisions", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/apps/backend/tests/test_output_data/personality_manager_files", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/apps/backend/tests/test_output_data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/apps/backend/tests/test_output_data/personality_manager_files", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/apps/backend/tests", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/apps/backend/tests/test_output_data", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/apps/backend", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/apps/backend/tests", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/apps", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/apps/backend", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/backup", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/chroma_db", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/chromadb_local", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/configs/formula_configs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/configs/personality_profiles", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/configs", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/configs/formula_configs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/configs/personality_profiles", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/context_storage", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/chat_histories", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/firebase", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/game_data", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/knowledge_bases", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/logs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/model_cache", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/models", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/processed_data/chroma_db", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/processed_data/chroma_db/0df1f2bf-be30-452a-9182-ad4c19335ae6", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/processed_data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/processed_data/chroma_db", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/atlassian_cache", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/demo_learning", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/fallback_comm", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data/task_queue", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_data/task_queue", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_output_data", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data/test_output_data", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/data/atlassian_cache", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/chat_histories", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/demo_learning", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/fallback_comm", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/firebase", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/game_data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/knowledge_bases", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/logs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/model_cache", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/models", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/processed_data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/raw_datasets", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/runtime_data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data/task_queue", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/debug_patch_test.py", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/debug_patch_test.py::test_different_patch_approaches", "type": "Function", "lineno": 6}]}, {"nodeid": "backup/20250927_062428/apps/backend/debug_test.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\debug_test.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbackup\\20250927_062428\\apps\\backend\\debug_test.py:8: in <module>\n    from .src.core_ai.learning.content_analyzer_module import ContentAnalyzerModule\nE   ImportError: attempted relative import with no known parent package"}, {"nodeid": "backup/20250927_062428/apps/backend/docs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/final_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\final_test.py\", line 16\nE       _ = (\"Microsoft is based in Redmond.\", \"BASED_IN\"),\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/htmlcov", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/model_cache", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/reports", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/run_hsp_simple_test.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/run_hsp_test.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/run_test.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/schemas", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/integration_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\integration_test.py\", line 21\nE       _ = (\"\u7b80\u5316\u7248\u4fee\u590d\u5de5\u5177\", \"scripts/simple_auto_fix.py\"),\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_chromadb_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\scripts\\test_chromadb_fix.py:15: in <module>\n    from src.ai.memory.vector_store import VectorMemoryStore\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\..\\src\\ai\\memory\\vector_store.py\", line 174\nE       _ = raise VectorStoreError(\"Vector store is not initialized. Cannot add memory.\")\nE           ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_data_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_data_manager.py\", line 48\nE       _ = \"created_at\": datetime.now().isoformat()\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_environment_manager.py", "outcome": "failed", "result": [], "longrepr": "backup\\20250927_062428\\apps\\backend\\scripts\\test_environment_manager.py:15: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fix_demo.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_fix_demo.py\", line 61\nE       _ = \"python\", str(test_file)\nE       ^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py::test_dataclass_import", "type": "Function", "lineno": 14}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py::test_rovo_dev_connector", "type": "Function", "lineno": 23}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py::test_atlassian_integration_import", "type": "Function", "lineno": 32}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py::test_test_file_imports", "type": "Function", "lineno": 41}]}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_quality_assessor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_quality_assessor.py\", line 67\nE       _ = \"assessment_timestamp\": datetime.now().isoformat(),\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_analyzer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_result_analyzer.py\", line 149\nE       _ = \"timestamp\": datetime.now().isoformat(),\nE       ^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_feedback.py", "outcome": "failed", "result": [], "longrepr": "backup\\20250927_062428\\apps\\backend\\scripts\\test_result_feedback.py:15: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_visualizer.py", "outcome": "failed", "result": [], "longrepr": "backup\\20250927_062428\\apps\\backend\\scripts\\test_result_visualizer.py:18: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_runner.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_runner.py\", line 70\nE       _ = \"command\": \" \".join(cmd),\nE       ^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_smart_executor.py", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/scripts/test_smart_executor.py::test_import_detection", "type": "Function", "lineno": 12}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_smart_executor.py::test_smart_test_runner", "type": "Function", "lineno": 33}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_smart_executor.py::test_smart_dev_runner", "type": "Function", "lineno": 43}]}, {"nodeid": "backup/20250927_062428/apps/backend/scripts", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/scripts/integration_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_chromadb_fix.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_data_manager.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_environment_manager.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fix_demo.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_fixes.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_quality_assessor.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_analyzer.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_feedback.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_result_visualizer.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_runner.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts/test_smart_executor.py", "type": "Module"}]}, {"nodeid": "backup/20250927_062428/apps/backend/simple_hsp_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\simple_hsp_test.py:10: in <module>\n    from apps.backend.src.core.hsp.connector import HSPConnector\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\core\\hsp\\connector.py\", line 761\nE       Handle a fact message.\nE              ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "backup/20250927_062428/apps/backend/simple_test.py", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/simple_test.py::test_capital_of_pattern", "type": "Function", "lineno": 3}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/agents", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents/base", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents/specialized", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents/base", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents/specialized", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/audio", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/code_understanding", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/compression", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/concept_models/integration_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\concept_models\\integration_test.py\", line 61\nE       _ = CausalRelationship(\"temperature\", \"comfort_level\", 0.8, 0.9)\nE       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/concept_models", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/ai/concept_models/integration_test.py", "type": "Module"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/crisis", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/deep_mapper", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/dialogue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/discovery", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/emotion", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/evaluation", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/formula_engine", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/integration", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/knowledge_graph", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/language_models", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/learning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/lis", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/memory", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/meta", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/meta_formulas", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/optimization", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/personality", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/rag", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/reasoning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/symbolic_space", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/test_utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/time", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/translation", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/trust", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/world_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/ai/agents", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/audio", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/code_understanding", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/compression", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/concept_models", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/crisis", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/deep_mapper", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/dialogue", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/discovery", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/emotion", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/evaluation", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/formula_engine", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/integration", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/knowledge_graph", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/language_models", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/learning", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/lis", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/memory", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/meta", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/meta_formulas", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/optimization", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/personality", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/rag", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/reasoning", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/symbolic_space", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/test_utils", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/time", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/translation", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/trust", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai/world_model", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/compat", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/configs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/bridge", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/external", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/fallback", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/internal", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/bridge", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/external", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/fallback", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/internal", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp/utils", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/managers", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/memory", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/services", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/services/node_services", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/shared/types", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/shared", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/shared/types", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/shared/utils", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/logic_model", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/math_model", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/parameter_extractor", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools/translation_model", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core/hsp", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/managers", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/memory", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/services", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/shared", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core/tools", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/code_understanding", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/compression", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/context/storage", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/context", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/context/storage", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/deep_mapper", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/dialogue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/evaluation", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/formula_engine", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/integration", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/knowledge_graph", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/language_models", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/learning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/lis", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/memory", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/meta", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/meta_formulas", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/optimization", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/personality", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/rag", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/reasoning", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/service_discovery", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/symbolic_space", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/test_utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/trust_manager", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/world_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/code_understanding", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/compression", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/context", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/deep_mapper", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/dialogue", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/evaluation", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/formula_engine", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/integration", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/knowledge_graph", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/language_models", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/learning", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/lis", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/memory", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/meta", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/meta_formulas", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/optimization", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/personality", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/rag", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/reasoning", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/service_discovery", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/symbolic_space", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/test_utils", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/trust_manager", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai/world_model", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/creation", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/data/models", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/data/models", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/data/raw_datasets", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/docs/technical_design", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/docs", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/docs/technical_design", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/economy", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/evaluation", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/fragmenta", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images/backgrounds", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images/portraits", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images/backgrounds", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images/portraits", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites/characters", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites/icons", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites/characters", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites/icons", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/images", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/assets/sprites", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/scenes", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/game", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/game/assets", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/game/scenes", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/bridge/test_message_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1310: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:488: in _call_with_frames_removed\n    ???\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1310: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:488: in _call_with_frames_removed\n    ???\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\n<frozen importlib._bootstrap_external>:995: in exec_module\n    ???\n<frozen importlib._bootstrap_external>:1133: in get_code\n    ???\n<frozen importlib._bootstrap_external>:1063: in source_to_code\n    ???\n<frozen importlib._bootstrap>:488: in _call_with_frames_removed\n    ???\nE   SyntaxError: source code string cannot contain null bytes"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/bridge", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/hsp/bridge/test_message_bridge.py", "type": "Module"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/external", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/fallback", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/internal", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/hsp/bridge", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/external", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/fallback", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/internal", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp/utils", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/integrations", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/interfaces", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/managers", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/mcp/fallback", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/mcp", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/mcp/fallback", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/modules_fragmenta", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/monitoring", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/optimization", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/pet", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/search", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/security", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/services", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/services/node_services", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/shared/types", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/shared/utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/shared", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/shared/types", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/shared/utils", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/stubs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/system", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/logic_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/math_model", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/parameter_extractor", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/translation_model/data", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/translation_model", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/tools/translation_model/data", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/tools/js_tool_dispatcher", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/logic_model", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/math_model", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/parameter_extractor", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools/translation_model", "type": "Package"}]}, {"nodeid": "backup/20250927_062428/apps/backend/src/utils", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/src", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/src/agents", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/ai", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/compat", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/configs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/core_ai", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/creation", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/docs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/economy", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/evaluation", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/fragmenta", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/game", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/hsp", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/integrations", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/interfaces", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/managers", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/mcp", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/modules_fragmenta", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/monitoring", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/optimization", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/pet", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/search", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/security", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/services", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/shared", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/stubs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/src/system", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/tools", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/src/utils", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/test_agi_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\test_agi_integration.py\", line 34\nE       _ = 'task_id': task.get('id'),\nE       ^\nE   SyntaxError: ':' expected after dictionary key"}, {"nodeid": "backup/20250927_062428/apps/backend/test_apple_inc.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_capital_of.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_capital_of.py:9: in <module>\n    from ai.learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 14\nE       from ..knowledge_graph.types import KGEntity, KGRelationship, KnowledgeGraph\nE       ^^^^\nE   IndentationError: expected an indented block after 'if' statement on line 10"}, {"nodeid": "backup/20250927_062428/apps/backend/test_capital_of_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_capital_of_debug.py:7: in <module>\n    from ai.learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 14\nE       from ..knowledge_graph.types import KGEntity, KGRelationship, KnowledgeGraph\nE       ^^^^\nE   IndentationError: expected an indented block after 'if' statement on line 10"}, {"nodeid": "backup/20250927_062428/apps/backend/test_chromadb_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_chromadb_fix.py:14: in <module>\n    from src.ai.memory.vector_store import VectorMemoryStore\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\..\\src\\ai\\memory\\vector_store.py\", line 174\nE       _ = raise VectorStoreError(\"Vector store is not initialized. Cannot add memory.\")\nE           ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "backup/20250927_062428/apps/backend/test_content_analyzer.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_content_analyzer_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_content_analyzer_fix.py:7: in <module>\n    from learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 14\nE       from ..knowledge_graph.types import KGEntity, KGRelationship, KnowledgeGraph\nE       ^^^^\nE   IndentationError: expected an indented block after 'if' statement on line 10"}, {"nodeid": "backup/20250927_062428/apps/backend/test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_data/templates", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_data/test_reports", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_data", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/test_data/task_queue", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/test_data/templates", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/test_data/test_reports", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend/test_data_analysis_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_data_analysis_debug.py:6: in <module>\n    from apps.backend.src.ai.agents.specialized.data_analysis_agent import DataAnalysisAgent\napps\\backend\\src\\ai\\agents\\__init__.py:7: in <module>\n    from agents.base_agent import BaseAgent\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\agents\\base_agent.py\", line 145\nE       )\nE       ^\nE   SyntaxError: positional argument follows keyword argument"}, {"nodeid": "backup/20250927_062428/apps/backend/test_debug.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_env.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_fix.py:7: in <module>\n    from learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 14\nE       from ..knowledge_graph.types import KGEntity, KGRelationship, KnowledgeGraph\nE       ^^^^\nE   IndentationError: expected an indented block after 'if' statement on line 10"}, {"nodeid": "backup/20250927_062428/apps/backend/test_fix_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\nbackup\\20250927_062428\\apps\\backend\\test_fix_debug.py:7: in <module>\n    from learning.content_analyzer_module import ContentAnalyzerModule\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\learning\\content_analyzer_module.py\", line 14\nE       from ..knowledge_graph.types import KGEntity, KGRelationship, KnowledgeGraph\nE       ^^^^\nE   IndentationError: expected an indented block after 'if' statement on line 10"}, {"nodeid": "backup/20250927_062428/apps/backend/test_fixes.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_fixes' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\scripts\\test_fixes.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\test_fixes.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "backup/20250927_062428/apps/backend/test_hsp_fixture.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\test_hsp_fixture.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nbackup\\20250927_062428\\apps\\backend\\test_hsp_fixture.py:10: in <module>\n    from apps.backend.tests.hsp.mock_mqtt_broker import MockMqttBroker\nE   ModuleNotFoundError: No module named 'apps.backend.tests.hsp'"}, {"nodeid": "backup/20250927_062428/apps/backend/test_import.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_import' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\archived_systems\\test_import.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\test_import.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "backup/20250927_062428/apps/backend/test_json_fix.py", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_modules.py", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/test_modules.py::test_imports", "type": "Function", "lineno": 14}]}, {"nodeid": "backup/20250927_062428/apps/backend/test_reports", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/test_results", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/tests", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\config\\__init__.py:712: in _importconftest\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:610: in import_path\n    raise ImportPathMismatchError(module_name, module_file, path)\nE   _pytest.pathlib.ImportPathMismatchError: ('tests.conftest', 'D:\\\\Projects\\\\Unified-AI-Project\\\\tests\\\\conftest.py', WindowsPath('D:/Projects/Unified-AI-Project/backup/20250927_062428/apps/backend/tests/conftest.py'))"}, {"nodeid": "backup/20250927_062428/apps/backend/training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/training/configs", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/training/models", "outcome": "passed", "result": []}, {"nodeid": "backup/20250927_062428/apps/backend/training", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/training/checkpoints", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/training/configs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/training/models", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps/backend", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/backend/backup", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/chroma_db", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/chromadb_local", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/configs", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/context_storage", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/debug_patch_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/debug_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/docs", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/final_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/htmlcov", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/model_cache", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/reports", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/run_hsp_simple_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/run_hsp_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/run_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/schemas", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/scripts", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/simple_hsp_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/simple_test.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/src", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/test_agi_integration.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_apple_inc.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_capital_of.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_capital_of_debug.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_chromadb_fix.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_content_analyzer.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_content_analyzer_fix.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_data", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/test_data_analysis_debug.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_debug.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_env.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_fix.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_fix_debug.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_fixes.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_hsp_fixture.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_import.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_json_fix.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_modules.py", "type": "Module"}, {"nodeid": "backup/20250927_062428/apps/backend/test_reports", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/test_results", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend/tests", "type": "Package"}, {"nodeid": "backup/20250927_062428/apps/backend/training", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428/apps", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps/apps", "type": "Dir"}, {"nodeid": "backup/20250927_062428/apps/backend", "type": "Dir"}]}, {"nodeid": "backup/20250927_062428", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428/apps", "type": "Dir"}]}, {"nodeid": "backup/simple_backup", "outcome": "passed", "result": []}, {"nodeid": "backup", "outcome": "passed", "result": [{"nodeid": "backup/20250927_062428", "type": "Dir"}, {"nodeid": "backup/simple_backup", "type": "Dir"}]}, {"nodeid": "backup_before_archive/test_detector.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_detector' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\archived_systems\\test_detector.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\backup_before_archive\\test_detector.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "backup_before_archive/test_import.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_import' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\archived_systems\\test_import.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\backup_before_archive\\test_import.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "backup_before_archive", "outcome": "passed", "result": [{"nodeid": "backup_before_archive/test_detector.py", "type": "Module"}, {"nodeid": "backup_before_archive/test_import.py", "type": "Module"}]}, {"nodeid": "backup_before_merge", "outcome": "passed", "result": []}, {"nodeid": "backup_before_refactor", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/core", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/data_migration", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/data_processing", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/modules", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/prototypes", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts/test_coverage_monitor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_coverage_monitor.py\", line 19\nE       \"\"\"\u521d\u59cb\u5316\u76d1\u63a7\u5668\"\"\"\nE       ^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 18"}, {"nodeid": "backup_before_script_migration/scripts/test_environment_setup.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_environment_setup.py\", line 16\nE       \"\"\"\u521d\u59cb\u5316\u73af\u5883\u8bbe\u7f6e\u5668\"\"\"\nE       ^^^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 15"}, {"nodeid": "backup_before_script_migration/scripts/test_execution_monitor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_execution_monitor.py\", line 74\nE       for i in range(3)\nE                        ^\nE   SyntaxError: expected ':'"}, {"nodeid": "backup_before_script_migration/scripts/test_failure_alert.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_failure_alert.py\", line 20\nE       \"\"\"\u521d\u59cb\u5316\u544a\u8b66\u5668\"\"\"\nE       ^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 19"}, {"nodeid": "backup_before_script_migration/scripts/utils", "outcome": "passed", "result": []}, {"nodeid": "backup_before_script_migration/scripts", "outcome": "passed", "result": [{"nodeid": "backup_before_script_migration/scripts/core", "type": "Dir"}, {"nodeid": "backup_before_script_migration/scripts/data_migration", "type": "Package"}, {"nodeid": "backup_before_script_migration/scripts/data_processing", "type": "Dir"}, {"nodeid": "backup_before_script_migration/scripts/modules", "type": "Dir"}, {"nodeid": "backup_before_script_migration/scripts/prototypes", "type": "Dir"}, {"nodeid": "backup_before_script_migration/scripts/test_coverage_monitor.py", "type": "Module"}, {"nodeid": "backup_before_script_migration/scripts/test_environment_setup.py", "type": "Module"}, {"nodeid": "backup_before_script_migration/scripts/test_execution_monitor.py", "type": "Module"}, {"nodeid": "backup_before_script_migration/scripts/test_failure_alert.py", "type": "Module"}, {"nodeid": "backup_before_script_migration/scripts/utils", "type": "Dir"}]}, {"nodeid": "backup_before_script_migration", "outcome": "passed", "result": [{"nodeid": "backup_before_script_migration/scripts", "type": "Package"}]}, {"nodeid": "checkpoints", "outcome": "passed", "result": []}, {"nodeid": "cli/commands", "outcome": "passed", "result": []}, {"nodeid": "cli/utils", "outcome": "passed", "result": []}, {"nodeid": "cli", "outcome": "passed", "result": [{"nodeid": "cli/commands", "type": "Package"}, {"nodeid": "cli/utils", "type": "Package"}]}, {"nodeid": "comprehensive_repair_test.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'comprehensive_repair_test' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\archived_systems\\auto_repair_development_20251008\\comprehensive_repair_test.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\comprehensive_repair_test.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "configs/formula_configs", "outcome": "passed", "result": []}, {"nodeid": "configs/personality_profiles", "outcome": "passed", "result": []}, {"nodeid": "configs", "outcome": "passed", "result": [{"nodeid": "configs/formula_configs", "type": "Dir"}, {"nodeid": "configs/personality_profiles", "type": "Dir"}]}, {"nodeid": "context_storage", "outcome": "passed", "result": []}, {"nodeid": "data/atlassian_cache", "outcome": "passed", "result": []}, {"nodeid": "data/audio_samples", "outcome": "passed", "result": []}, {"nodeid": "data/chat_histories", "outcome": "passed", "result": []}, {"nodeid": "data/coco_captions/annotations_trainval2017/annotations", "outcome": "passed", "result": []}, {"nodeid": "data/coco_captions/annotations_trainval2017", "outcome": "passed", "result": [{"nodeid": "data/coco_captions/annotations_trainval2017/annotations", "type": "Dir"}]}, {"nodeid": "data/coco_captions", "outcome": "passed", "result": [{"nodeid": "data/coco_captions/annotations_trainval2017", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ab/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ab", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ab/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ar/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ar", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ar/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/br/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/br", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/br/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ca/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ca", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ca/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cs/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cs", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cs/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cv/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cv", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cv/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cy/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cy", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cy/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/de/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/de", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/de/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/en/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/en", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/en/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eo/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eo", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eo/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/es/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/es", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/es/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eu/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eu", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eu/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fr/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fr", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fr/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fy-NL/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fy-NL", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fy-NL/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/id/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/id", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/id/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ja/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ja", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ja/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ka/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ka", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ka/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/kab/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/kab", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/kab/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ky/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ky", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ky/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/lg/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/lg", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/lg/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/nl/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/nl", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/nl/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/or/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/or", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/or/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pl/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pl", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pl/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pt/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pt", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pt/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ru/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ru", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ru/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/rw/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/rw", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/rw/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/sv-SE/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/sv-SE", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/sv-SE/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ta/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ta", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ta/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/th/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/th", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/th/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tr/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tr", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tr/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tt/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tt", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tt/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-CN/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-CN", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-CN/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-HK/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-HK", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-HK/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-TW/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-TW", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-TW/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ab", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ar", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/br", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ca", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cs", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cv", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/cy", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/de", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/en", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eo", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/es", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/eu", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fr", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/fy-NL", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/id", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ja", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ka", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/kab", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ky", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/lg", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/nl", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/or", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pl", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/pt", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ru", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/rw", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/sv-SE", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/ta", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/th", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tr", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/tt", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-CN", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-HK", "type": "Dir"}, {"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword/zh-TW", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/singleword", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword/cv-corpus-7.0-singleword", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20/zh-CN/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20/zh-CN", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20/zh-CN/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20/zh-CN", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-CN", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-CN/cv-corpus-22.0-2025-06-20", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20/zh-TW/clips", "outcome": "passed", "result": []}, {"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20/zh-TW", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20/zh-TW/clips", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20/zh-TW", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh/zh-TW", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/zh-TW/cv-corpus-22.0-2025-06-20", "type": "Dir"}]}, {"nodeid": "data/common_voice_zh", "outcome": "passed", "result": [{"nodeid": "data/common_voice_zh/singleword", "type": "Dir"}, {"nodeid": "data/common_voice_zh/zh-CN", "type": "Dir"}, {"nodeid": "data/common_voice_zh/zh-TW", "type": "Dir"}]}, {"nodeid": "data/concept_models_training_data", "outcome": "passed", "result": []}, {"nodeid": "data/demo_learning", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm/inbox", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm/outbox", "outcome": "passed", "result": []}, {"nodeid": "data/fallback_comm", "outcome": "passed", "result": [{"nodeid": "data/fallback_comm/inbox", "type": "Dir"}, {"nodeid": "data/fallback_comm/outbox", "type": "Dir"}]}, {"nodeid": "data/firebase", "outcome": "passed", "result": []}, {"nodeid": "data/flickr30k_sample/master/flickr30k_entities-master/test.txt", "outcome": "passed", "result": []}, {"nodeid": "data/flickr30k_sample/master/flickr30k_entities-master", "outcome": "passed", "result": [{"nodeid": "data/flickr30k_sample/master/flickr30k_entities-master/test.txt", "type": "DoctestTextfile"}]}, {"nodeid": "data/flickr30k_sample/master", "outcome": "passed", "result": [{"nodeid": "data/flickr30k_sample/master/flickr30k_entities-master", "type": "Dir"}]}, {"nodeid": "data/flickr30k_sample", "outcome": "passed", "result": [{"nodeid": "data/flickr30k_sample/master", "type": "Dir"}]}, {"nodeid": "data/knowledge_bases", "outcome": "passed", "result": []}, {"nodeid": "data/logs", "outcome": "passed", "result": []}, {"nodeid": "data/models", "outcome": "passed", "result": []}, {"nodeid": "data/multimodal_samples", "outcome": "passed", "result": []}, {"nodeid": "data/processed_data", "outcome": "passed", "result": []}, {"nodeid": "data/processed_traditional_data", "outcome": "passed", "result": []}, {"nodeid": "data/raw_datasets", "outcome": "passed", "result": []}, {"nodeid": "data/reasoning_samples", "outcome": "passed", "result": []}, {"nodeid": "data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "data/temp", "outcome": "passed", "result": []}, {"nodeid": "data/test_text.txt", "outcome": "passed", "result": []}, {"nodeid": "data/vision_samples", "outcome": "passed", "result": []}, {"nodeid": "data/visual_genome_sample/images/VG_100K", "outcome": "passed", "result": []}, {"nodeid": "data/visual_genome_sample/images", "outcome": "passed", "result": [{"nodeid": "data/visual_genome_sample/images/VG_100K", "type": "Dir"}]}, {"nodeid": "data/visual_genome_sample", "outcome": "passed", "result": [{"nodeid": "data/visual_genome_sample/images", "type": "Dir"}]}, {"nodeid": "data", "outcome": "passed", "result": [{"nodeid": "data/atlassian_cache", "type": "Dir"}, {"nodeid": "data/audio_samples", "type": "Dir"}, {"nodeid": "data/chat_histories", "type": "Dir"}, {"nodeid": "data/coco_captions", "type": "Dir"}, {"nodeid": "data/common_voice_zh", "type": "Dir"}, {"nodeid": "data/concept_models_training_data", "type": "Dir"}, {"nodeid": "data/demo_learning", "type": "Dir"}, {"nodeid": "data/fallback_comm", "type": "Dir"}, {"nodeid": "data/firebase", "type": "Dir"}, {"nodeid": "data/flickr30k_sample", "type": "Dir"}, {"nodeid": "data/knowledge_bases", "type": "Dir"}, {"nodeid": "data/logs", "type": "Dir"}, {"nodeid": "data/models", "type": "Dir"}, {"nodeid": "data/multimodal_samples", "type": "Dir"}, {"nodeid": "data/processed_data", "type": "Dir"}, {"nodeid": "data/processed_traditional_data", "type": "Dir"}, {"nodeid": "data/raw_datasets", "type": "Dir"}, {"nodeid": "data/reasoning_samples", "type": "Dir"}, {"nodeid": "data/task_queue", "type": "Dir"}, {"nodeid": "data/temp", "type": "Dir"}, {"nodeid": "data/test_text.txt", "type": "DoctestTextfile"}, {"nodeid": "data/vision_samples", "type": "Dir"}, {"nodeid": "data/visual_genome_sample", "type": "Dir"}]}, {"nodeid": "deployment_reports", "outcome": "passed", "result": []}, {"nodeid": "docs/00-overview", "outcome": "passed", "result": []}, {"nodeid": "docs/01-summaries-and-reports", "outcome": "passed", "result": []}, {"nodeid": "docs/02-game-design/character-design", "outcome": "passed", "result": []}, {"nodeid": "docs/02-game-design/scenes", "outcome": "passed", "result": []}, {"nodeid": "docs/02-game-design", "outcome": "passed", "result": [{"nodeid": "docs/02-game-design/character-design", "type": "Dir"}, {"nodeid": "docs/02-game-design/scenes", "type": "Dir"}]}, {"nodeid": "docs/03-technical-architecture/agents", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/ai-components", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/api", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/communication/hsp-specification/message-payloads", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/communication/hsp-specification", "outcome": "passed", "result": [{"nodeid": "docs/03-technical-architecture/communication/hsp-specification/message-payloads", "type": "Dir"}]}, {"nodeid": "docs/03-technical-architecture/communication", "outcome": "passed", "result": [{"nodeid": "docs/03-technical-architecture/communication/hsp-specification", "type": "Dir"}]}, {"nodeid": "docs/03-technical-architecture/core-services", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/data-structures", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/integrations", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/memory-systems", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/security", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture/tools", "outcome": "passed", "result": []}, {"nodeid": "docs/03-technical-architecture", "outcome": "passed", "result": [{"nodeid": "docs/03-technical-architecture/agents", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/ai-components", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/api", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/communication", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/core-services", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/data-structures", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/integrations", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/memory-systems", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/security", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture/tools", "type": "Dir"}]}, {"nodeid": "docs/04-advanced-concepts", "outcome": "passed", "result": []}, {"nodeid": "docs/05-development/debugging", "outcome": "passed", "result": []}, {"nodeid": "docs/05-development/testing", "outcome": "passed", "result": []}, {"nodeid": "docs/05-development/utilities", "outcome": "passed", "result": []}, {"nodeid": "docs/05-development", "outcome": "passed", "result": [{"nodeid": "docs/05-development/debugging", "type": "Dir"}, {"nodeid": "docs/05-development/testing", "type": "Dir"}, {"nodeid": "docs/05-development/utilities", "type": "Dir"}]}, {"nodeid": "docs/06-project-management/fixes", "outcome": "passed", "result": []}, {"nodeid": "docs/06-project-management/planning", "outcome": "passed", "result": []}, {"nodeid": "docs/06-project-management/reports", "outcome": "passed", "result": []}, {"nodeid": "docs/06-project-management/status", "outcome": "passed", "result": []}, {"nodeid": "docs/06-project-management", "outcome": "passed", "result": [{"nodeid": "docs/06-project-management/fixes", "type": "Dir"}, {"nodeid": "docs/06-project-management/planning", "type": "Dir"}, {"nodeid": "docs/06-project-management/reports", "type": "Dir"}, {"nodeid": "docs/06-project-management/status", "type": "Dir"}]}, {"nodeid": "docs/09-archive", "outcome": "passed", "result": []}, {"nodeid": "docs/api", "outcome": "passed", "result": []}, {"nodeid": "docs/architecture", "outcome": "passed", "result": []}, {"nodeid": "docs/archive/plans", "outcome": "passed", "result": []}, {"nodeid": "docs/archive", "outcome": "passed", "result": [{"nodeid": "docs/archive/plans", "type": "Dir"}]}, {"nodeid": "docs/deployment", "outcome": "passed", "result": []}, {"nodeid": "docs/developer-guide", "outcome": "passed", "result": []}, {"nodeid": "docs/development", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/archive", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/core-development", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/documentation", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/external-analysis", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/philosophy", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/project-management/implementation-reports", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/project-management/planning-docs", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/project-management/status-reports", "outcome": "passed", "result": []}, {"nodeid": "docs/planning/project-management", "outcome": "passed", "result": [{"nodeid": "docs/planning/project-management/implementation-reports", "type": "Dir"}, {"nodeid": "docs/planning/project-management/planning-docs", "type": "Dir"}, {"nodeid": "docs/planning/project-management/status-reports", "type": "Dir"}]}, {"nodeid": "docs/planning/updates", "outcome": "passed", "result": []}, {"nodeid": "docs/planning", "outcome": "passed", "result": [{"nodeid": "docs/planning/archive", "type": "Dir"}, {"nodeid": "docs/planning/core-development", "type": "Dir"}, {"nodeid": "docs/planning/documentation", "type": "Dir"}, {"nodeid": "docs/planning/external-analysis", "type": "Dir"}, {"nodeid": "docs/planning/philosophy", "type": "Dir"}, {"nodeid": "docs/planning/project-management", "type": "Dir"}, {"nodeid": "docs/planning/updates", "type": "Dir"}]}, {"nodeid": "docs/reports", "outcome": "passed", "result": []}, {"nodeid": "docs/strategy_and_execution_plan", "outcome": "passed", "result": []}, {"nodeid": "docs/testing", "outcome": "passed", "result": []}, {"nodeid": "docs/user-guide", "outcome": "passed", "result": []}, {"nodeid": "docs", "outcome": "passed", "result": [{"nodeid": "docs/00-overview", "type": "Dir"}, {"nodeid": "docs/01-summaries-and-reports", "type": "Dir"}, {"nodeid": "docs/02-game-design", "type": "Dir"}, {"nodeid": "docs/03-technical-architecture", "type": "Dir"}, {"nodeid": "docs/04-advanced-concepts", "type": "Dir"}, {"nodeid": "docs/05-development", "type": "Dir"}, {"nodeid": "docs/06-project-management", "type": "Dir"}, {"nodeid": "docs/09-archive", "type": "Dir"}, {"nodeid": "docs/api", "type": "Dir"}, {"nodeid": "docs/architecture", "type": "Dir"}, {"nodeid": "docs/archive", "type": "Dir"}, {"nodeid": "docs/deployment", "type": "Dir"}, {"nodeid": "docs/developer-guide", "type": "Dir"}, {"nodeid": "docs/development", "type": "Dir"}, {"nodeid": "docs/planning", "type": "Dir"}, {"nodeid": "docs/reports", "type": "Dir"}, {"nodeid": "docs/strategy_and_execution_plan", "type": "Dir"}, {"nodeid": "docs/testing", "type": "Dir"}, {"nodeid": "docs/user-guide", "type": "Dir"}]}, {"nodeid": "enhanced_unified_fix_backups", "outcome": "passed", "result": []}, {"nodeid": "fixed_scripts_archive", "outcome": "passed", "result": []}, {"nodeid": "global_system_test.py", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/main", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/renderer/public/src/components", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/renderer/public/src/pages", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/renderer/public/src", "outcome": "passed", "result": [{"nodeid": "graphic-launcher/renderer/public/src/components", "type": "Dir"}, {"nodeid": "graphic-launcher/renderer/public/src/pages", "type": "Dir"}]}, {"nodeid": "graphic-launcher/renderer/public", "outcome": "passed", "result": [{"nodeid": "graphic-launcher/renderer/public/src", "type": "Dir"}]}, {"nodeid": "graphic-launcher/renderer/src/components", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/renderer/src/pages", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher/renderer/src", "outcome": "passed", "result": [{"nodeid": "graphic-launcher/renderer/src/components", "type": "Dir"}, {"nodeid": "graphic-launcher/renderer/src/pages", "type": "Dir"}]}, {"nodeid": "graphic-launcher/renderer", "outcome": "passed", "result": [{"nodeid": "graphic-launcher/renderer/public", "type": "Dir"}, {"nodeid": "graphic-launcher/renderer/src", "type": "Dir"}]}, {"nodeid": "graphic-launcher/scripts", "outcome": "passed", "result": []}, {"nodeid": "graphic-launcher", "outcome": "passed", "result": [{"nodeid": "graphic-launcher/main", "type": "Dir"}, {"nodeid": "graphic-launcher/renderer", "type": "Dir"}, {"nodeid": "graphic-launcher/scripts", "type": "Dir"}]}, {"nodeid": "logs/self_maintenance", "outcome": "passed", "result": []}, {"nodeid": "logs", "outcome": "passed", "result": [{"nodeid": "logs/self_maintenance", "type": "Dir"}]}, {"nodeid": "model_cache/models--bert-base-uncased/blobs", "outcome": "passed", "result": []}, {"nodeid": "model_cache/models--bert-base-uncased/refs", "outcome": "passed", "result": []}, {"nodeid": "model_cache/models--bert-base-uncased/snapshots/86b5e0934494bd15c9632b12f734a8a67f723594", "outcome": "passed", "result": []}, {"nodeid": "model_cache/models--bert-base-uncased/snapshots", "outcome": "passed", "result": [{"nodeid": "model_cache/models--bert-base-uncased/snapshots/86b5e0934494bd15c9632b12f734a8a67f723594", "type": "Dir"}]}, {"nodeid": "model_cache/models--bert-base-uncased", "outcome": "passed", "result": [{"nodeid": "model_cache/models--bert-base-uncased/blobs", "type": "Dir"}, {"nodeid": "model_cache/models--bert-base-uncased/refs", "type": "Dir"}, {"nodeid": "model_cache/models--bert-base-uncased/snapshots", "type": "Dir"}]}, {"nodeid": "model_cache", "outcome": "passed", "result": [{"nodeid": "model_cache/models--bert-base-uncased", "type": "Dir"}]}, {"nodeid": "packages/cli/cli", "outcome": "passed", "result": []}, {"nodeid": "packages/cli/logs", "outcome": "passed", "result": []}, {"nodeid": "packages/cli", "outcome": "passed", "result": [{"nodeid": "packages/cli/cli", "type": "Package"}, {"nodeid": "packages/cli/logs", "type": "Dir"}]}, {"nodeid": "packages/ui/components/ui", "outcome": "passed", "result": []}, {"nodeid": "packages/ui/components", "outcome": "passed", "result": [{"nodeid": "packages/ui/components/ui", "type": "Dir"}]}, {"nodeid": "packages/ui/lib", "outcome": "passed", "result": []}, {"nodeid": "packages/ui", "outcome": "passed", "result": [{"nodeid": "packages/ui/components", "type": "Dir"}, {"nodeid": "packages/ui/lib", "type": "Dir"}]}, {"nodeid": "packages", "outcome": "passed", "result": [{"nodeid": "packages/cli", "type": "Package"}, {"nodeid": "packages/ui", "type": "Dir"}]}, {"nodeid": "performance_benchmark_test.py", "outcome": "passed", "result": []}, {"nodeid": "project_archives/docs", "outcome": "passed", "result": []}, {"nodeid": "project_archives/reports", "outcome": "passed", "result": []}, {"nodeid": "project_archives/scripts", "outcome": "passed", "result": []}, {"nodeid": "project_archives", "outcome": "passed", "result": [{"nodeid": "project_archives/docs", "type": "Dir"}, {"nodeid": "project_archives/reports", "type": "Dir"}, {"nodeid": "project_archives/scripts", "type": "Dir"}]}, {"nodeid": "quick_performance_test.py", "outcome": "passed", "result": []}, {"nodeid": "quick_token_test.py", "outcome": "passed", "result": []}, {"nodeid": "real_complete_global_test.py", "outcome": "passed", "result": []}, {"nodeid": "real_system_test.py", "outcome": "passed", "result": [{"nodeid": "real_system_test.py::test_training_system", "type": "Function", "lineno": 12}, {"nodeid": "real_system_test.py::test_ai_engine_imports", "type": "Function", "lineno": 31}, {"nodeid": "real_system_test.py::test_file_existence", "type": "Function", "lineno": 56}]}, {"nodeid": "real_tools_integration_test.py", "outcome": "passed", "result": [{"nodeid": "real_tools_integration_test.py::test_tools_with_agents", "type": "Function", "lineno": 556}]}, {"nodeid": "repair_backups", "outcome": "passed", "result": []}, {"nodeid": "reports", "outcome": "passed", "result": []}, {"nodeid": "scripts/backup", "outcome": "passed", "result": []}, {"nodeid": "scripts/data_migration", "outcome": "passed", "result": []}, {"nodeid": "scripts/test", "outcome": "passed", "result": []}, {"nodeid": "scripts/utils", "outcome": "passed", "result": []}, {"nodeid": "scripts", "outcome": "passed", "result": [{"nodeid": "scripts/backup", "type": "Dir"}, {"nodeid": "scripts/data_migration", "type": "Dir"}, {"nodeid": "scripts/test", "type": "Dir"}, {"nodeid": "scripts/utils", "type": "Dir"}]}, {"nodeid": "simple_backend_test.py", "outcome": "passed", "result": []}, {"nodeid": "simplified_tools_integration_test.py", "outcome": "passed", "result": [{"nodeid": "simplified_tools_integration_test.py::test_agents_with_simplified_tools", "type": "Function", "lineno": 362}]}, {"nodeid": "src/core_ai/dialogue", "outcome": "passed", "result": []}, {"nodeid": "src/core_ai/formula_engine", "outcome": "passed", "result": []}, {"nodeid": "src/core_ai/learning", "outcome": "passed", "result": []}, {"nodeid": "src/core_ai/memory", "outcome": "passed", "result": []}, {"nodeid": "src/core_ai/personality", "outcome": "passed", "result": []}, {"nodeid": "src/core_ai", "outcome": "passed", "result": [{"nodeid": "src/core_ai/dialogue", "type": "Package"}, {"nodeid": "src/core_ai/formula_engine", "type": "Package"}, {"nodeid": "src/core_ai/learning", "type": "Package"}, {"nodeid": "src/core_ai/memory", "type": "Package"}, {"nodeid": "src/core_ai/personality", "type": "Package"}]}, {"nodeid": "src/interfaces/cli", "outcome": "passed", "result": []}, {"nodeid": "src/interfaces/electron_app/config", "outcome": "passed", "result": []}, {"nodeid": "src/interfaces/electron_app/src/ipc", "outcome": "passed", "result": []}, {"nodeid": "src/interfaces/electron_app/src/renderer/ui_components", "outcome": "passed", "result": []}, {"nodeid": "src/interfaces/electron_app/src/renderer", "outcome": "passed", "result": [{"nodeid": "src/interfaces/electron_app/src/renderer/ui_components", "type": "Dir"}]}, {"nodeid": "src/interfaces/electron_app/src", "outcome": "passed", "result": [{"nodeid": "src/interfaces/electron_app/src/ipc", "type": "Dir"}, {"nodeid": "src/interfaces/electron_app/src/renderer", "type": "Dir"}]}, {"nodeid": "src/interfaces/electron_app", "outcome": "passed", "result": [{"nodeid": "src/interfaces/electron_app/config", "type": "Dir"}, {"nodeid": "src/interfaces/electron_app/src", "type": "Dir"}]}, {"nodeid": "src/interfaces", "outcome": "passed", "result": [{"nodeid": "src/interfaces/cli", "type": "Package"}, {"nodeid": "src/interfaces/electron_app", "type": "Dir"}]}, {"nodeid": "src/modules_fragmenta", "outcome": "passed", "result": []}, {"nodeid": "src/services/node_services", "outcome": "passed", "result": []}, {"nodeid": "src/services", "outcome": "passed", "result": [{"nodeid": "src/services/node_services", "type": "Dir"}]}, {"nodeid": "src/shared/js", "outcome": "passed", "result": []}, {"nodeid": "src/shared/types", "outcome": "passed", "result": []}, {"nodeid": "src/shared", "outcome": "passed", "result": [{"nodeid": "src/shared/js", "type": "Dir"}, {"nodeid": "src/shared/types", "type": "Package"}]}, {"nodeid": "src/tools/js_tool_dispatcher", "outcome": "passed", "result": []}, {"nodeid": "src/tools", "outcome": "passed", "result": [{"nodeid": "src/tools/js_tool_dispatcher", "type": "Dir"}]}, {"nodeid": "src", "outcome": "passed", "result": [{"nodeid": "src/core_ai", "type": "Package"}, {"nodeid": "src/interfaces", "type": "Package"}, {"nodeid": "src/modules_fragmenta", "type": "Package"}, {"nodeid": "src/services", "type": "Package"}, {"nodeid": "src/shared", "type": "Package"}, {"nodeid": "src/tools", "type": "Package"}]}, {"nodeid": "stubs", "outcome": "passed", "result": []}, {"nodeid": "templates", "outcome": "passed", "result": []}, {"nodeid": "test_aaa_content.py", "outcome": "passed", "result": [{"nodeid": "test_aaa_content.py::test_system_with_aaa_content", "type": "Function", "lineno": 16}]}, {"nodeid": "test_aaa_content_enhanced.py::TestResultTracker", "outcome": "passed", "result": []}, {"nodeid": "test_aaa_content_enhanced.py", "outcome": "passed", "result": [{"nodeid": "test_aaa_content_enhanced.py::TestResultTracker", "type": "Class"}, {"nodeid": "test_aaa_content_enhanced.py::test_system_with_enhanced_aaa_content", "type": "Function", "lineno": 133}]}, {"nodeid": "test_aaa_content_enhanced_fixed.py", "outcome": "passed", "result": [{"nodeid": "test_aaa_content_enhanced_fixed.py::test_enhanced_mixed_questions", "type": "Function", "lineno": 422}]}, {"nodeid": "test_aaa_content_real_output.py", "outcome": "passed", "result": [{"nodeid": "test_aaa_content_real_output.py::test_real_aaa_content_output", "type": "Function", "lineno": 244}]}, {"nodeid": "test_aaa_content_token_based.py", "outcome": "passed", "result": [{"nodeid": "test_aaa_content_token_based.py::test_token_based_mixed_questions", "type": "Function", "lineno": 342}]}, {"nodeid": "test_agi_end_to_end_integration.py", "outcome": "passed", "result": []}, {"nodeid": "test_ai_imports.py", "outcome": "passed", "result": [{"nodeid": "test_ai_imports.py::test_import", "type": "Function", "lineno": 13}]}, {"nodeid": "test_archived_errors.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\test_archived_errors.py\", line 55\nE       def chinese_punctuation_test()\uff1a\nE                                     ^\nE   SyntaxError: invalid character '\uff1a' (U+FF1A)"}, {"nodeid": "test_archived_errors_repair.py", "outcome": "passed", "result": [{"nodeid": "test_archived_errors_repair.py::test_enhanced_repair_on_archived_errors", "type": "Function", "lineno": 13}, {"nodeid": "test_archived_errors_repair.py::test_intelligent_repair_on_archived_errors", "type": "Function", "lineno": 67}, {"nodeid": "test_archived_errors_repair.py::test_smart_validator_on_archived_errors", "type": "Function", "lineno": 96}]}, {"nodeid": "test_attention_validation.py", "outcome": "passed", "result": [{"nodeid": "test_attention_validation.py::test_attention_mechanism_validation", "type": "Function", "lineno": 306}]}, {"nodeid": "test_autonomous_evolution.py", "outcome": "passed", "result": [{"nodeid": "test_autonomous_evolution.py::test_autonomous_evolution_engine", "type": "Function", "lineno": 17}, {"nodeid": "test_autonomous_evolution.py::test_performance_benchmark", "type": "Function", "lineno": 141}]}, {"nodeid": "test_backend_imports.py", "outcome": "passed", "result": [{"nodeid": "test_backend_imports.py::test_imports", "type": "Function", "lineno": 13}, {"nodeid": "test_backend_imports.py::test_main_function", "type": "Function", "lineno": 39}]}, {"nodeid": "test_backend_startup.py", "outcome": "passed", "result": [{"nodeid": "test_backend_startup.py::test_backend_imports", "type": "Function", "lineno": 16}, {"nodeid": "test_backend_startup.py::test_backend_startup", "type": "Function", "lineno": 44}, {"nodeid": "test_backend_startup.py::test_critical_components", "type": "Function", "lineno": 118}]}, {"nodeid": "test_causal_correctness.py", "outcome": "passed", "result": [{"nodeid": "test_causal_correctness.py::test_causal_reasoning_correctness", "type": "Function", "lineno": 571}]}, {"nodeid": "test_causal_fix.py", "outcome": "passed", "result": [{"nodeid": "test_causal_fix.py::test_causal_engine", "type": "Function", "lineno": 3}]}, {"nodeid": "test_combined_token_based.py", "outcome": "passed", "result": [{"nodeid": "test_combined_token_based.py::test_combined_token_based_questions", "type": "Function", "lineno": 311}]}, {"nodeid": "test_complete_repair_simple.py", "outcome": "passed", "result": []}, {"nodeid": "test_complete_system.py", "outcome": "passed", "result": [{"nodeid": "test_complete_system.py::test_complete_system", "type": "Function", "lineno": 15}]}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore", "outcome": "passed", "result": [{"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_system_initialization", "type": "Coroutine", "lineno": 69}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_system_startup_shutdown", "type": "Coroutine", "lineno": 87}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_motivation_intelligence_module", "type": "Coroutine", "lineno": 115}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_metacognition_intelligence_module", "type": "Coroutine", "lineno": 159}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_async_task_processing", "type": "Coroutine", "lineno": 205}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_system_performance", "type": "Coroutine", "lineno": 240}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_system_status_reporting", "type": "Coroutine", "lineno": 275}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_error_handling_and_recovery", "type": "Coroutine", "lineno": 313}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_concurrent_operations", "type": "Coroutine", "lineno": 337}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemCore::test_complete_system_integration", "type": "Coroutine", "lineno": 392}]}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemPerformance", "outcome": "passed", "result": [{"nodeid": "test_complete_system_core.py::TestCompleteSystemPerformance::test_response_time_performance", "type": "Coroutine", "lineno": 503}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemPerformance::test_throughput_performance", "type": "Coroutine", "lineno": 554}]}, {"nodeid": "test_complete_system_core.py", "outcome": "passed", "result": [{"nodeid": "test_complete_system_core.py::TestCompleteSystemCore", "type": "Class"}, {"nodeid": "test_complete_system_core.py::TestCompleteSystemPerformance", "type": "Class"}, {"nodeid": "test_complete_system_core.py::test_complete_system_end_to_end", "type": "Coroutine", "lineno": 624}]}, {"nodeid": "test_concept_association.py", "outcome": "passed", "result": [{"nodeid": "test_concept_association.py::test_concept_association_validation", "type": "Function", "lineno": 720}]}, {"nodeid": "test_core_validation.py", "outcome": "passed", "result": [{"nodeid": "test_core_validation.py::test_smart_validator_core", "type": "Function", "lineno": 12}, {"nodeid": "test_core_validation.py::test_complete_repair_core", "type": "Function", "lineno": 44}]}, {"nodeid": "test_data/task_queue", "outcome": "passed", "result": []}, {"nodeid": "test_data/test_fix_report.txt", "outcome": "passed", "result": []}, {"nodeid": "test_data/test_modules_output.txt", "outcome": "passed", "result": []}, {"nodeid": "test_data", "outcome": "passed", "result": [{"nodeid": "test_data/task_queue", "type": "Dir"}, {"nodeid": "test_data/test_fix_report.txt", "type": "DoctestTextfile"}, {"nodeid": "test_data/test_modules_output.txt", "type": "DoctestTextfile"}]}, {"nodeid": "test_data_authenticity.py", "outcome": "passed", "result": []}, {"nodeid": "test_enhanced_repair_systems.py", "outcome": "passed", "result": [{"nodeid": "test_enhanced_repair_systems.py::test_enhanced_smart_repair_validator", "type": "Function", "lineno": 14}, {"nodeid": "test_enhanced_repair_systems.py::test_enhanced_complete_repair_system", "type": "Function", "lineno": 51}, {"nodeid": "test_enhanced_repair_systems.py::test_enhanced_intelligent_repair_system", "type": "Function", "lineno": 111}, {"nodeid": "test_enhanced_repair_systems.py::test_system_self_maintenance", "type": "Function", "lineno": 168}]}, {"nodeid": "test_evolution_quick.py", "outcome": "passed", "result": []}, {"nodeid": "test_fusion_authenticity.py", "outcome": "passed", "result": [{"nodeid": "test_fusion_authenticity.py::test_multimodal_fusion_authenticity", "type": "Function", "lineno": 14}]}, {"nodeid": "test_gradient_validation.py", "outcome": "passed", "result": [{"nodeid": "test_gradient_validation.py::test_gradient_propagation_validation", "type": "Function", "lineno": 312}]}, {"nodeid": "test_import.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'test_import' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\archived_systems\\test_import.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\test_import.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "test_import_simple.py", "outcome": "passed", "result": []}, {"nodeid": "test_integrated_real_ai.py", "outcome": "passed", "result": [{"nodeid": "test_integrated_real_ai.py::test_basic_integration", "type": "Function", "lineno": 13}, {"nodeid": "test_integrated_real_ai.py::test_real_ai_functionality", "type": "Function", "lineno": 40}, {"nodeid": "test_integrated_real_ai.py::test_comparison_with_original", "type": "Function", "lineno": 98}, {"nodeid": "test_integrated_real_ai.py::test_level4_agl_capabilities", "type": "Function", "lineno": 131}]}, {"nodeid": "test_intelligent_quick.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\test_intelligent_quick.py\", line 1\nE       def test(x)\nE                  ^\nE   SyntaxError: expected ':'"}, {"nodeid": "test_intelligent_repair.py", "outcome": "passed", "result": []}, {"nodeid": "test_intermediate_reasoning.py", "outcome": "passed", "result": [{"nodeid": "test_intermediate_reasoning.py::test_intermediate_reasoning_validation", "type": "Function", "lineno": 443}]}, {"nodeid": "test_knowledge_graph_authenticity.py", "outcome": "passed", "result": [{"nodeid": "test_knowledge_graph_authenticity.py::test_knowledge_graph_authenticity", "type": "Function", "lineno": 14}]}, {"nodeid": "test_level4_plus_components.py", "outcome": "passed", "result": [{"nodeid": "test_level4_plus_components.py::test_io_intelligence_orchestrator", "type": "Function", "lineno": 15}, {"nodeid": "test_level4_plus_components.py::test_ethics_manager", "type": "Function", "lineno": 108}, {"nodeid": "test_level4_plus_components.py::test_integration", "type": "Function", "lineno": 195}]}, {"nodeid": "test_level5_comprehensive.py", "outcome": "passed", "result": []}, {"nodeid": "test_level5_comprehensive_final.py", "outcome": "passed", "result": []}, {"nodeid": "test_level5_final_comprehensive.py", "outcome": "passed", "result": []}, {"nodeid": "test_level5_simple.py", "outcome": "passed", "result": [{"nodeid": "test_level5_simple.py::test_level5_components", "type": "Function", "lineno": 15}]}, {"nodeid": "test_lightweight_ai.py", "outcome": "passed", "result": []}, {"nodeid": "test_logic_chain_integrity.py", "outcome": "passed", "result": [{"nodeid": "test_logic_chain_integrity.py::test_logic_chain_integrity_validation", "type": "Function", "lineno": 627}]}, {"nodeid": "test_metacognitive_final.py", "outcome": "passed", "result": [{"nodeid": "test_metacognitive_final.py::test_metacognitive_core_capabilities", "type": "Function", "lineno": 17}]}, {"nodeid": "test_output_validation.py", "outcome": "passed", "result": [{"nodeid": "test_output_validation.py::test_output_validation_mechanism", "type": "Function", "lineno": 853}]}, {"nodeid": "test_quick_availability.py", "outcome": "passed", "result": [{"nodeid": "test_quick_availability.py::test_quick_availability", "type": "Function", "lineno": 14}]}, {"nodeid": "test_quick_repair.py", "outcome": "passed", "result": [{"nodeid": "test_quick_repair.py::test_smart_validator_quick", "type": "Function", "lineno": 13}, {"nodeid": "test_quick_repair.py::test_complete_repair_quick", "type": "Function", "lineno": 40}, {"nodeid": "test_quick_repair.py::test_intelligent_repair_quick", "type": "Function", "lineno": 84}, {"nodeid": "test_quick_repair.py::test_system_integration", "type": "Function", "lineno": 122}]}, {"nodeid": "test_real_ai_quick.py", "outcome": "passed", "result": [{"nodeid": "test_real_ai_quick.py::test_basic_functionality", "type": "Function", "lineno": 14}, {"nodeid": "test_real_ai_quick.py::test_comparison_with_hardcoded", "type": "Function", "lineno": 89}]}, {"nodeid": "test_real_availability.py", "outcome": "passed", "result": [{"nodeid": "test_real_availability.py::test_real_data_generator", "type": "Function", "lineno": 12}, {"nodeid": "test_real_availability.py::test_real_system_performance", "type": "Function", "lineno": 37}, {"nodeid": "test_real_availability.py::test_real_file_system", "type": "Function", "lineno": 66}, {"nodeid": "test_real_availability.py::test_real_training_data", "type": "Function", "lineno": 91}, {"nodeid": "test_real_availability.py::test_real_vs_fake_values", "type": "Function", "lineno": 130}]}, {"nodeid": "test_real_causal_engine.py", "outcome": "passed", "result": [{"nodeid": "test_real_causal_engine.py::test_causal_engine", "type": "Function", "lineno": 19}]}, {"nodeid": "test_real_repair_functionality.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\test_real_repair_functionality.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntest_real_repair_functionality.py:11: in <module>\n    from enhanced_intelligent_repair_system import EnhancedIntelligentRepairSystem\nE   ModuleNotFoundError: No module named 'enhanced_intelligent_repair_system'"}, {"nodeid": "test_real_training_system.py", "outcome": "passed", "result": [{"nodeid": "test_real_training_system.py::test_real_training_import", "type": "Function", "lineno": 15}, {"nodeid": "test_real_training_system.py::test_real_model_trainer", "type": "Function", "lineno": 29}, {"nodeid": "test_real_training_system.py::test_real_training_manager", "type": "Function", "lineno": 123}, {"nodeid": "test_real_training_system.py::test_backward_compatibility", "type": "Function", "lineno": 164}, {"nodeid": "test_real_training_system.py::test_comparison_with_random", "type": "Function", "lineno": 207}]}, {"nodeid": "test_recovery_systems.py", "outcome": "passed", "result": [{"nodeid": "test_recovery_systems.py::test_basic_functionality", "type": "Function", "lineno": 9}, {"nodeid": "test_recovery_systems.py::test_real_repair_system", "type": "Function", "lineno": 26}, {"nodeid": "test_recovery_systems.py::test_intelligent_cleanup", "type": "Function", "lineno": 81}, {"nodeid": "test_recovery_systems.py::test_complete_recovery", "type": "Function", "lineno": 111}]}, {"nodeid": "test_repair_sample.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\test_repair_sample.py\", line 1\nE       def test_function(x, y)\nE                              ^\nE   SyntaxError: expected ':'"}, {"nodeid": "test_repair_system.py", "outcome": "passed", "result": [{"nodeid": "test_repair_system.py::test_unified_fix", "type": "Function", "lineno": 12}, {"nodeid": "test_repair_system.py::test_backend_imports", "type": "Function", "lineno": 62}]}, {"nodeid": "test_reports", "outcome": "passed", "result": []}, {"nodeid": "test_results", "outcome": "passed", "result": []}, {"nodeid": "test_simple.py", "outcome": "passed", "result": []}, {"nodeid": "test_system_availability.py", "outcome": "passed", "result": [{"nodeid": "test_system_availability.py::test_system_availability", "type": "Function", "lineno": 15}, {"nodeid": "test_system_availability.py::test_advanced_features", "type": "Function", "lineno": 61}]}, {"nodeid": "test_system_integration.py", "outcome": "passed", "result": []}, {"nodeid": "test_system_status.py", "outcome": "passed", "result": []}, {"nodeid": "test_token_reasoning_path.py", "outcome": "passed", "result": [{"nodeid": "test_token_reasoning_path.py::test_token_reasoning_validation", "type": "Function", "lineno": 331}]}, {"nodeid": "test_token_validation.py", "outcome": "passed", "result": [{"nodeid": "test_token_validation.py::test_token_validation", "type": "Function", "lineno": 23}]}, {"nodeid": "test_unified_fix.py", "outcome": "passed", "result": []}, {"nodeid": "test_unified_fix_simple.py", "outcome": "passed", "result": [{"nodeid": "test_unified_fix_simple.py::test_unified_fix", "type": "Function", "lineno": 10}]}, {"nodeid": "test_unified_import.py", "outcome": "passed", "result": []}, {"nodeid": "test_unified_repair.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\test_unified_repair.py\", line 2\nE       def test_function(x, y)\nE                              ^\nE   SyntaxError: expected ':'"}, {"nodeid": "test_unified_system_simple.py", "outcome": "passed", "result": [{"nodeid": "test_unified_system_simple.py::test_unified_system_simple", "type": "Function", "lineno": 15}]}, {"nodeid": "tests/agents/simple_test.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/simple_test.py::test_simple", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/agents/test_agent_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\agents\\test_agent_manager.py\", line 68\nE       def test_register_agent_factory(self, agent_manager) -> None:\nE                                                                    ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/agents/test_audio_processing_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\agents\\test_audio_processing_agent.py:15: in <module>\n    from apps.backend.src.agents.audio_processing_agent import AudioProcessingAgent\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\agents\\audio_processing_agent.py\", line 6\nE       rom ..core.hsp.types import HSPTaskRequestPayload, HSPTaskResultPayload\nE       ^^^\nE   IndentationError: expected an indented block after 'try' statement on line 4"}, {"nodeid": "tests/agents/test_base_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\agents\\test_base_agent.py\", line 33\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/agents/test_code_understanding_agent.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_code_understanding_agent.py::test_code_agent_initialization", "type": "Function", "lineno": 24}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_code_agent_handle_task_request_analyze_code", "type": "Coroutine", "lineno": 35}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_code_agent_handle_task_request_generate_documentation", "type": "Coroutine", "lineno": 66}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_code_agent_handle_task_request_code_review", "type": "Coroutine", "lineno": 97}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_code_agent_handle_task_request_unsupported_capability", "type": "Coroutine", "lineno": 128}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_analyze_code_python", "type": "Function", "lineno": 154}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_generate_documentation", "type": "Function", "lineno": 168}, {"nodeid": "tests/agents/test_code_understanding_agent.py::test_perform_code_review", "type": "Function", "lineno": 182}]}, {"nodeid": "tests/agents/test_creative_writing_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\agents\\test_creative_writing_agent.py:8: in <module>\n    from apps.backend.src.agents.creative_writing_agent import CreativeWritingAgent\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\agents\\creative_writing_agent.py\", line 21\nE       version\": \"1.0\",\nE                     ^\nE   SyntaxError: unterminated string literal (detected at line 21)"}, {"nodeid": "tests/agents/test_data_analysis_agent.py", "outcome": "passed", "result": [{"nodeid": "tests/agents/test_data_analysis_agent.py::test_data_agent_initialization", "type": "Function", "lineno": 24}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_data_agent_handle_task_request_statistical_analysis", "type": "Coroutine", "lineno": 34}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_data_agent_handle_task_request_data_processing", "type": "Coroutine", "lineno": 71}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_data_agent_handle_task_request_unsupported_capability", "type": "Coroutine", "lineno": 108}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_perform_statistical_analysis_descriptive", "type": "Function", "lineno": 134}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_perform_statistical_analysis_correlation", "type": "Function", "lineno": 154}, {"nodeid": "tests/agents/test_data_analysis_agent.py::test_perform_data_processing", "type": "Function", "lineno": 172}]}, {"nodeid": "tests/agents/test_imports.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\agents\\test_imports.py\", line 14\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/agents/test_knowledge_graph_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\agents\\test_knowledge_graph_agent.py\", line 13\nE       def mock_hsp_connector()\nE                               ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/agents/test_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\agents\\test_simple.py\", line 8\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/agents", "outcome": "passed", "result": [{"nodeid": "tests/agents/simple_test.py", "type": "Module"}, {"nodeid": "tests/agents/test_agent_manager.py", "type": "Module"}, {"nodeid": "tests/agents/test_audio_processing_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_base_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_code_understanding_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_creative_writing_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_data_analysis_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_imports.py", "type": "Module"}, {"nodeid": "tests/agents/test_knowledge_graph_agent.py", "type": "Module"}, {"nodeid": "tests/agents/test_simple.py", "type": "Module"}]}, {"nodeid": "tests/ai/dialogue/test_project_coordinator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\ai\\dialogue\\test_project_coordinator.py\", line 43\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/ai/dialogue", "outcome": "passed", "result": [{"nodeid": "tests/ai/dialogue/test_project_coordinator.py", "type": "Module"}]}, {"nodeid": "tests/ai/learning", "outcome": "passed", "result": []}, {"nodeid": "tests/ai/memory", "outcome": "passed", "result": []}, {"nodeid": "tests/ai/simple_test.py", "outcome": "passed", "result": [{"nodeid": "tests/ai/simple_test.py::test_capital_of_pattern", "type": "Function", "lineno": 3}]}, {"nodeid": "tests/ai/test_code_model_upgrade.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\ai\\test_code_model_upgrade.py\", line 21\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/ai", "outcome": "passed", "result": [{"nodeid": "tests/ai/dialogue", "type": "Dir"}, {"nodeid": "tests/ai/learning", "type": "Dir"}, {"nodeid": "tests/ai/memory", "type": "Dir"}, {"nodeid": "tests/ai/simple_test.py", "type": "Module"}, {"nodeid": "tests/ai/test_code_model_upgrade.py", "type": "Module"}]}, {"nodeid": "tests/cli/test_cli.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\cli\\test_cli.py\", line 20\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/cli/test_cli_enhanced.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\cli\\test_cli_enhanced.py\", line 49\nE       @patch('cli.main.get_services')\nE                                      ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/cli/test_cli_publish_fact.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\cli\\test_cli_publish_fact.py\", line 14\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/cli/test_client.py", "outcome": "passed", "result": [{"nodeid": "tests/cli/test_client.py::test_client_base_url_env", "type": "Function", "lineno": 37}, {"nodeid": "tests/cli/test_client.py::test_health_check_success", "type": "Function", "lineno": 43}, {"nodeid": "tests/cli/test_client.py::test_chat_error_to_dict", "type": "Function", "lineno": 57}]}, {"nodeid": "tests/cli/test_error_handler.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\cli\\test_error_handler.py\", line 37\nE       def test_init_with_custom_log_path(self):\nE                                                ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/cli/test_logs", "outcome": "passed", "result": []}, {"nodeid": "tests/cli", "outcome": "passed", "result": [{"nodeid": "tests/cli/test_cli.py", "type": "Module"}, {"nodeid": "tests/cli/test_cli_enhanced.py", "type": "Module"}, {"nodeid": "tests/cli/test_cli_publish_fact.py", "type": "Module"}, {"nodeid": "tests/cli/test_client.py", "type": "Module"}, {"nodeid": "tests/cli/test_error_handler.py", "type": "Module"}, {"nodeid": "tests/cli/test_logs", "type": "Dir"}]}, {"nodeid": "tests/comprehensive_test.py", "outcome": "passed", "result": [{"nodeid": "tests/comprehensive_test.py::test_logic_parser", "type": "Function", "lineno": 8}, {"nodeid": "tests/comprehensive_test.py::test_logic_tool", "type": "Function", "lineno": 26}, {"nodeid": "tests/comprehensive_test.py::test_math_model", "type": "Function", "lineno": 44}, {"nodeid": "tests/comprehensive_test.py::test_math_tool", "type": "Function", "lineno": 62}, {"nodeid": "tests/comprehensive_test.py::test_dependency_manager", "type": "Function", "lineno": 76}, {"nodeid": "tests/comprehensive_test.py::test_common_types", "type": "Function", "lineno": 89}]}, {"nodeid": "tests/core_ai/code_understanding/test_lightweight_code_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\code_understanding\\test_lightweight_code_model.py\", line 16\nE       class TestLightweightCodeModel(unittest.TestCase)\nE                                                        ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/core_ai/code_understanding", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/code_understanding/test_lightweight_code_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/compression/test_alpha_deep_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\core_ai\\compression\\test_alpha_deep_model.py:17: in <module>\n    from compression.alpha_deep_model import AlphaDeepModel, DeepParameter, HAMGist, RelationalContext, Modalities, CompressionAlgorithm\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\compression\\alpha_deep_model.py\", line 76\nE       _ = raise ValueError(f\"Node {from_node} not found in chain\")\nE           ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/compression", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/compression/test_alpha_deep_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/context/test_context_system.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\context\\test_context_system.py\", line 43\nE       def test_create_and_get_context(self) -> None:\nE                                                     ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/core_ai/context", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/context/test_context_system.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/dialogue/test_dialogue_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\dialogue\\test_dialogue_manager.py\", line 16\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\dialogue\\test_project_coordinator.py\", line 54\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\dialogue\\test_project_coordinator_fix.py\", line 16\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/dialogue", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/dialogue/test_dialogue_manager.py", "type": "Module"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator.py", "type": "Module"}, {"nodeid": "tests/core_ai/dialogue/test_project_coordinator_fix.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/formula_engine/test_formula_engine.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\formula_engine\\test_formula_engine.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\formula_engine\\test_formula_engine.py:13: in <module>\n    from apps.backend.src.core_ai.formula_engine import FormulaEngine\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/formula_engine", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/formula_engine/test_formula_engine.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/language_models/test_daily_language_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\language_models\\test_daily_language_model.py\", line 9\nE       import json\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/core_ai/language_models", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/language_models/test_daily_language_model.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/learning", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\core_ai\\learning\\conftest.py:2: in <module>\n    from apps.backend.src.core_ai.learning.content_analyzer_module import ContentAnalyzerModule\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/lis/test_ham_lis_cache.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\lis\\test_ham_lis_cache.py\", line 35\nE       class MockHAMMemoryManager(HAMMemoryManager)\nE                                                   ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/core_ai/lis/test_tonal_repair_engine.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\lis\\test_tonal_repair_engine.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\lis\\test_tonal_repair_engine.py:9: in <module>\n    from apps.backend.src.core_ai.lis.tonal_repair_engine import TonalRepairEngine\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/lis", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/lis/test_ham_lis_cache.py", "type": "Module"}, {"nodeid": "tests/core_ai/lis/test_tonal_repair_engine.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/memory/test_ham_chromadb_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\memory\\test_ham_chromadb_integration.py\", line 145\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/core_ai/memory/test_ham_memory_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\memory\\test_ham_memory_manager.py\", line 55\nE       @pytest.mark.asyncio\nE                           ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/core_ai/memory", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/memory/test_ham_chromadb_integration.py", "type": "Module"}, {"nodeid": "tests/core_ai/memory/test_ham_memory_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/meta_formulas/test_meta_formulas.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\meta_formulas\\test_meta_formulas.py\", line 30\nE       @pytest.mark.timeout(5)\nE                              ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/core_ai/meta_formulas", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/meta_formulas/test_meta_formulas.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/personality/test_personality_manager.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\personality\\test_personality_manager.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\personality\\test_personality_manager.py:28: in <module>\n    from apps.backend.src.core_ai.personality.personality_manager import PersonalityManager\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/personality", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/personality/test_personality_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/rag/test_rag_manager.py", "outcome": "passed", "result": []}, {"nodeid": "tests/core_ai/rag", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/rag/test_rag_manager.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/service_discovery/test_service_discovery_module.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\service_discovery\\test_service_discovery_module.py\", line 55\nE       @pytest.mark.timeout(10)\nE                               ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/core_ai/service_discovery", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/service_discovery/test_service_discovery_module.py", "type": "Module"}]}, {"nodeid": "tests/core_ai/test_agent_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\test_agent_manager.py\", line 18\nE       class TestAgentManager(unittest.TestCase)\nE                                                ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/core_ai/test_crisis_system.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\test_crisis_system.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\test_crisis_system.py:21: in <module>\n    from apps.backend.src.core_ai.crisis.crisis_system import CrisisSystem\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/test_deep_mapper.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\test_deep_mapper.py\", line 65\nE       def test_reverse_map(self) -> None:\nE                                          ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/core_ai/test_emotion_system.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\test_emotion_system.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\test_emotion_system.py:20: in <module>\n    from apps.backend.src.core_ai.emotion.emotion_system import EmotionSystem\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai/test_time_system.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\core_ai\\test_time_system.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\core_ai\\test_time_system.py:20: in <module>\n    from apps.backend.src.core_ai.time.time_system import TimeSystem\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/core_ai", "outcome": "passed", "result": [{"nodeid": "tests/core_ai/code_understanding", "type": "Package"}, {"nodeid": "tests/core_ai/compression", "type": "Package"}, {"nodeid": "tests/core_ai/context", "type": "Dir"}, {"nodeid": "tests/core_ai/dialogue", "type": "Package"}, {"nodeid": "tests/core_ai/formula_engine", "type": "Package"}, {"nodeid": "tests/core_ai/language_models", "type": "Package"}, {"nodeid": "tests/core_ai/learning", "type": "Package"}, {"nodeid": "tests/core_ai/lis", "type": "Package"}, {"nodeid": "tests/core_ai/memory", "type": "Dir"}, {"nodeid": "tests/core_ai/meta_formulas", "type": "Dir"}, {"nodeid": "tests/core_ai/personality", "type": "Dir"}, {"nodeid": "tests/core_ai/rag", "type": "Dir"}, {"nodeid": "tests/core_ai/service_discovery", "type": "Dir"}, {"nodeid": "tests/core_ai/test_agent_manager.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_crisis_system.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_deep_mapper.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_emotion_system.py", "type": "Module"}, {"nodeid": "tests/core_ai/test_time_system.py", "type": "Module"}]}, {"nodeid": "tests/creation/test_creation_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\creation\\test_creation_engine.py\", line 35\nE       @pytest.mark.timeout(5)\nE                              ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/creation", "outcome": "passed", "result": [{"nodeid": "tests/creation/test_creation_engine.py", "type": "Module"}]}, {"nodeid": "tests/data", "outcome": "passed", "result": []}, {"nodeid": "tests/debug_patch_test.py", "outcome": "passed", "result": [{"nodeid": "tests/debug_patch_test.py::test_different_patch_approaches", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/debug_test.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\debug_test.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\debug_test.py:8: in <module>\n    from .src.core_ai.learning.content_analyzer_module import ContentAnalyzerModule\nE   ModuleNotFoundError: No module named 'tests.src'"}, {"nodeid": "tests/desktop-app/agents", "outcome": "passed", "result": []}, {"nodeid": "tests/desktop-app", "outcome": "passed", "result": [{"nodeid": "tests/desktop-app/agents", "type": "Package"}]}, {"nodeid": "tests/e2e/test_atlassian_workflow.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\e2e\\test_atlassian_workflow.py\", line 78\nE       def test_offline_mode_handling(self) -> None:\nE                                                    ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/e2e/test_training_workflow.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\e2e\\test_training_workflow.py\", line 28\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/e2e", "outcome": "passed", "result": [{"nodeid": "tests/e2e/test_atlassian_workflow.py", "type": "Module"}, {"nodeid": "tests/e2e/test_training_workflow.py", "type": "Module"}]}, {"nodeid": "tests/economy/test_economy_db.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\economy\\test_economy_db.py:10: in <module>\n    from apps.backend.src.economy.economy_db import EconomyDB\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\economy\\economy_db.py\", line 13\nE       \"\"\"Initializes the SQLite database and creates the 'balances' table if it doesn't exist.\"\"\":\nE                                                                                                  ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/economy/test_economy_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\economy\\test_economy_manager.py:10: in <module>\n    from apps.backend.src.economy.economy_manager import EconomyManager\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\economy\\economy_manager.py\", line 13\nE       \"\"\"Initializes the EconomyManager with a given configuration.\"\"\":\nE                                                                       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/economy", "outcome": "passed", "result": [{"nodeid": "tests/economy/test_economy_db.py", "type": "Module"}, {"nodeid": "tests/economy/test_economy_manager.py", "type": "Module"}]}, {"nodeid": "tests/evaluation/test_evaluation_db.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\evaluation\\test_evaluation_db.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\evaluation\\test_evaluation_db.py:12: in <module>\n    from apps.backend.src.core_ai.evaluation.evaluation_db import EvaluationDB\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/evaluation/test_evaluator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\evaluation\\test_evaluator.py:9: in <module>\n    from apps.backend.src.evaluation.evaluator import Evaluator\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\evaluation\\evaluator.py\", line 11\nE       Evaluates a model or tool on a dataset.\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/evaluation/test_task_evaluator.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\evaluation\\test_task_evaluator.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\evaluation\\test_task_evaluator.py:11: in <module>\n    from apps.backend.src.core_ai.evaluation.task_evaluator import TaskExecutionEvaluator, MetricsCalculator, FeedbackAnalyzer\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/evaluation", "outcome": "passed", "result": [{"nodeid": "tests/evaluation/test_evaluation_db.py", "type": "Module"}, {"nodeid": "tests/evaluation/test_evaluator.py", "type": "Module"}, {"nodeid": "tests/evaluation/test_task_evaluator.py", "type": "Module"}]}, {"nodeid": "tests/final_comprehensive_test.py", "outcome": "passed", "result": [{"nodeid": "tests/final_comprehensive_test.py::test_logic_parser", "type": "Function", "lineno": 8}, {"nodeid": "tests/final_comprehensive_test.py::test_logic_tool", "type": "Function", "lineno": 26}, {"nodeid": "tests/final_comprehensive_test.py::test_math_model", "type": "Function", "lineno": 44}, {"nodeid": "tests/final_comprehensive_test.py::test_math_tool", "type": "Function", "lineno": 62}, {"nodeid": "tests/final_comprehensive_test.py::test_dependency_manager", "type": "Function", "lineno": 76}, {"nodeid": "tests/final_comprehensive_test.py::test_common_types", "type": "Function", "lineno": 89}, {"nodeid": "tests/final_comprehensive_test.py::test_math_model_module", "type": "Function", "lineno": 99}, {"nodeid": "tests/final_comprehensive_test.py::test_alpha_deep_model", "type": "Function", "lineno": 109}, {"nodeid": "tests/final_comprehensive_test.py::test_unified_symbolic_space", "type": "Function", "lineno": 119}]}, {"nodeid": "tests/final_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\final_test.py\", line 20\nE       \"Steve Jobs was a founder of Apple.\", \"PERSON_IS_TITLE_OF_ORG\"),\nE                                                                     ^\nE   SyntaxError: closing parenthesis ')' does not match opening parenthesis '[' on line 16"}, {"nodeid": "tests/fragmenta/test_fragmenta_orchestrator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\fragmenta\\test_fragmenta_orchestrator.py:10: in <module>\n    from apps.backend.src.fragmenta.fragmenta_orchestrator import FragmentaOrchestrator\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\fragmenta\\fragmenta_orchestrator.py\", line 5\nE       self.ham_manager = ham_manager\nE       ^^^^\nE   IndentationError: expected an indented block after function definition on line 4"}, {"nodeid": "tests/fragmenta", "outcome": "passed", "result": [{"nodeid": "tests/fragmenta/test_fragmenta_orchestrator.py", "type": "Module"}]}, {"nodeid": "tests/game/test_assets.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\game\\test_assets.py\", line 19\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/game/test_main.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\game\\test_main.py\", line 13\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/game/test_npcs.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\game\\test_npcs.py\", line 19\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/game", "outcome": "passed", "result": [{"nodeid": "tests/game/test_assets.py", "type": "Module"}, {"nodeid": "tests/game/test_main.py", "type": "Module"}, {"nodeid": "tests/game/test_npcs.py", "type": "Module"}]}, {"nodeid": "tests/hsp/simple_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/hsp/test_basic.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_basic.py\", line 8\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/hsp/test_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_debug.py\", line 16\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_external_connector_stability.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_external_connector_stability.py\", line 24\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_hsp_ack_retry.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_ack_retry.py\", line 107\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_hsp_advanced_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_advanced_integration.py\", line 11\nE       HSPMessageEnvelope\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/hsp/test_hsp_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_connector.py\", line 23\nE       class HSPOpinionPayload(TypedDict, total=False)\nE                                                      ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/hsp/test_hsp_enhanced_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_enhanced_integration.py\", line 12\nE       HSPMessageEnvelope\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/hsp/test_hsp_fixture.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_fixture.py\", line 33\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_hsp_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_integration.py\", line 180\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_hsp_refactored.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_refactored.py\", line 30\nE       \"\"\"\u6d4b\u8bd5\u524d\u8bbe\u7f6e\"\"\"\nE          ^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_hsp_security.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_hsp_security.py\", line 63\nE       def test_message_signing_and_verification(self, security_manager) -> None:\nE                                                                                 ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/hsp/test_message_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_message_bridge.py\", line 44\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp/test_mqtt_broker_startup.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\hsp\\test_mqtt_broker_startup.py\", line 51\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/hsp", "outcome": "passed", "result": [{"nodeid": "tests/hsp/simple_test.py", "type": "Module"}, {"nodeid": "tests/hsp/test_basic.py", "type": "Module"}, {"nodeid": "tests/hsp/test_debug.py", "type": "Module"}, {"nodeid": "tests/hsp/test_external_connector_stability.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_ack_retry.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_advanced_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_connector.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_enhanced_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_fixture.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_integration.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_refactored.py", "type": "Module"}, {"nodeid": "tests/hsp/test_hsp_security.py", "type": "Module"}, {"nodeid": "tests/hsp/test_message_bridge.py", "type": "Module"}, {"nodeid": "tests/hsp/test_mqtt_broker_startup.py", "type": "Module"}]}, {"nodeid": "tests/integration/ai_ops_integration_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/base_test.py", "outcome": "failed", "result": [], "longrepr": "tests\\integration\\base_test.py:11: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "tests/integration/end_to_end_test.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/end_to_end_test.py::test_data_flow_pipeline", "type": "Function", "lineno": 16}, {"nodeid": "tests/integration/end_to_end_test.py::test_hsp_integration", "type": "Function", "lineno": 132}, {"nodeid": "tests/integration/end_to_end_test.py::test_api_endpoints", "type": "Function", "lineno": 145}, {"nodeid": "tests/integration/end_to_end_test.py::test_data_synchronization", "type": "Function", "lineno": 160}, {"nodeid": "tests/integration/end_to_end_test.py::test_error_handling", "type": "Function", "lineno": 201}, {"nodeid": "tests/integration/end_to_end_test.py::test_performance_under_load", "type": "Function", "lineno": 245}]}, {"nodeid": "tests/integration/quick_e2e_test.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/quick_e2e_test.py::test_basic_ops_flow", "type": "Function", "lineno": 14}, {"nodeid": "tests/integration/quick_e2e_test.py::test_component_interaction", "type": "Function", "lineno": 53}, {"nodeid": "tests/integration/quick_e2e_test.py::test_data_processing", "type": "Function", "lineno": 100}, {"nodeid": "tests/integration/quick_e2e_test.py::test_error_resilience", "type": "Function", "lineno": 136}]}, {"nodeid": "tests/integration/simple_e2e_test.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/simple_e2e_test.py::test_basic_component_creation", "type": "Function", "lineno": 14}, {"nodeid": "tests/integration/simple_e2e_test.py::test_basic_functionality", "type": "Function", "lineno": 45}, {"nodeid": "tests/integration/simple_e2e_test.py::test_performance_bottleneck", "type": "Function", "lineno": 84}, {"nodeid": "tests/integration/simple_e2e_test.py::test_capacity_prediction", "type": "Function", "lineno": 126}]}, {"nodeid": "tests/integration/simple_integration_test.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/simple_integration_test.py::test_basic_functionality", "type": "Function", "lineno": 12}]}, {"nodeid": "tests/integration/test_agent_collaboration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\integration\\test_agent_collaboration.py:15: in <module>\n    from apps.backend.src.core_services import initialize_services, get_services, shutdown_services\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\core_services.py\", line 83\nE       lass DemoLearningManager:\nE            ^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_ai_agent_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_ai_agent_integration.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_api.py", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_atlassian_integration.py", "outcome": "failed", "result": [], "longrepr": "tests\\integration\\test_atlassian_integration.py:13: in <module>\n    with open(CONFIG_PATH, 'r') as f:\n         ^^^^^^^^^^^^^^^^^^^^^^\nE   FileNotFoundError: [Errno 2] No such file or directory: 'D:\\\\Projects\\\\configs\\\\test_config.json'"}, {"nodeid": "tests/integration/test_core_services_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_core_services_integration.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_data_factory.py::TestDataFactory", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_data_factory.py::TestDataSet", "outcome": "passed", "result": []}, {"nodeid": "tests/integration/test_data_factory.py", "outcome": "passed", "result": [{"nodeid": "tests/integration/test_data_factory.py::TestDataFactory", "type": "Class"}, {"nodeid": "tests/integration/test_data_factory.py::TestDataSet", "type": "Class"}]}, {"nodeid": "tests/integration/test_end_to_end_project_flow.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_end_to_end_project_flow.py\", line 240\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_example_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_example_integration.py\", line 13\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_hsp_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_hsp_debug.py\", line 14\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_hsp_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_hsp_integration.py\", line 113\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_hsp_protocol_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_hsp_protocol_integration.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_hsp_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_hsp_simple.py\", line 11\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_knowledge_update.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_knowledge_update.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_learning_and_trust.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_learning_and_trust.py\", line 48\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_memory_system_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_memory_system_integration.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_performance_benchmark.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_performance_benchmark.py\", line 15\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_performance_benchmarks.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_performance_benchmarks.py\", line 14\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_self_improvement.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_self_improvement.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_system_level_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_system_level_integration.py\", line 37\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_training_system_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_training_system_integration.py\", line 22\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integration/test_utils.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration\\test_utils.py\", line 15\nE       self.start_time = None\nE       ^^^^\nE   IndentationError: expected an indented block after function definition on line 14"}, {"nodeid": "tests/integration", "outcome": "passed", "result": [{"nodeid": "tests/integration/ai_ops_integration_test.py", "type": "Module"}, {"nodeid": "tests/integration/base_test.py", "type": "Module"}, {"nodeid": "tests/integration/end_to_end_test.py", "type": "Module"}, {"nodeid": "tests/integration/quick_e2e_test.py", "type": "Module"}, {"nodeid": "tests/integration/simple_e2e_test.py", "type": "Module"}, {"nodeid": "tests/integration/simple_integration_test.py", "type": "Module"}, {"nodeid": "tests/integration/test_agent_collaboration.py", "type": "Module"}, {"nodeid": "tests/integration/test_ai_agent_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_api.py", "type": "Module"}, {"nodeid": "tests/integration/test_atlassian_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_core_services_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_data_factory.py", "type": "Module"}, {"nodeid": "tests/integration/test_end_to_end_project_flow.py", "type": "Module"}, {"nodeid": "tests/integration/test_example_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_hsp_debug.py", "type": "Module"}, {"nodeid": "tests/integration/test_hsp_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_hsp_protocol_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_hsp_simple.py", "type": "Module"}, {"nodeid": "tests/integration/test_knowledge_update.py", "type": "Module"}, {"nodeid": "tests/integration/test_learning_and_trust.py", "type": "Module"}, {"nodeid": "tests/integration/test_memory_system_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_performance_benchmark.py", "type": "Module"}, {"nodeid": "tests/integration/test_performance_benchmarks.py", "type": "Module"}, {"nodeid": "tests/integration/test_self_improvement.py", "type": "Module"}, {"nodeid": "tests/integration/test_system_level_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_training_system_integration.py", "type": "Module"}, {"nodeid": "tests/integration/test_utils.py", "type": "Module"}]}, {"nodeid": "tests/integration_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integration_test.py\", line 168\nE       relationships = await self.symbolic_space.get_relationships_by_symbol(memory_symbol.id if memory_symbol else 0):\nE                                                                                                                      ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations/test_atlassian_api.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_atlassian_api.py\", line 36\nE       @patch('apps.backend.src.integrations.atlassian_cli_bridge.subprocess.run')\nE                                                                                  ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/integrations/test_atlassian_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_atlassian_bridge.py\", line 61\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations/test_atlassian_bridge_fallback.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_atlassian_bridge_fallback.py\", line 15\nE       def mock_config(self)\nE                            ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/integrations/test_rovo_dev_agent.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_rovo_dev_agent.py\", line 18\nE       def mock_config(self)\nE                            ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/integrations/test_rovo_dev_agent_recovery.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_rovo_dev_agent_recovery.py\", line 19\nE       def mock_config(self)\nE                            ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/integrations/test_rovo_dev_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\integrations\\test_rovo_dev_connector.py\", line 41\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/integrations", "outcome": "passed", "result": [{"nodeid": "tests/integrations/test_atlassian_api.py", "type": "Module"}, {"nodeid": "tests/integrations/test_atlassian_bridge.py", "type": "Module"}, {"nodeid": "tests/integrations/test_atlassian_bridge_fallback.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_agent.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_agent_recovery.py", "type": "Module"}, {"nodeid": "tests/integrations/test_rovo_dev_connector.py", "type": "Module"}]}, {"nodeid": "tests/interfaces", "outcome": "passed", "result": []}, {"nodeid": "tests/mcp/test_context7_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\mcp\\test_context7_connector.py\", line 11\nE       Context7MCPConnector,\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/mcp/test_mcp_connector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\mcp\\test_mcp_connector.py\", line 25\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/mcp", "outcome": "passed", "result": [{"nodeid": "tests/mcp/test_context7_connector.py", "type": "Module"}, {"nodeid": "tests/mcp/test_mcp_connector.py", "type": "Module"}]}, {"nodeid": "tests/meta/test_adaptive_learning_controller.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\meta\\test_adaptive_learning_controller.py:13: in <module>\n    from meta.adaptive_learning_controller import (\nE     File \"D:\\Projects\\Unified-AI-Project\\backup\\20250927_062428\\apps\\backend\\src\\ai\\meta\\adaptive_learning_controller.py\", line 209\nE       _ = \"timestamp\": datetime.now().isoformat(),\nE       ^^^^^^^^^^^^^^^\nE   SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?"}, {"nodeid": "tests/meta/test_learning_log_db.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\meta\\test_learning_log_db.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\meta\\test_learning_log_db.py:11: in <module>\n    from apps.backend.src.core_ai.meta.learning_log_db import LearningLogDB\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/meta", "outcome": "passed", "result": [{"nodeid": "tests/meta/test_adaptive_learning_controller.py", "type": "Module"}, {"nodeid": "tests/meta/test_learning_log_db.py", "type": "Module"}]}, {"nodeid": "tests/modules_fragmenta/test_element_layer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\modules_fragmenta\\test_element_layer.py\", line 31\nE       @pytest.mark.timeout(5)\nE                              ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/modules_fragmenta/test_vision_tone_inverter.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\modules_fragmenta\\test_vision_tone_inverter.py\", line 31\nE       @pytest.mark.timeout(5)\nE                              ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/modules_fragmenta", "outcome": "passed", "result": [{"nodeid": "tests/modules_fragmenta/test_element_layer.py", "type": "Module"}, {"nodeid": "tests/modules_fragmenta/test_vision_tone_inverter.py", "type": "Module"}]}, {"nodeid": "tests/performance/benchmark_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/performance/stress_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\performance\\stress_test.py\", line 491\nE       print(f\"\u2713 \u9ad8\u53ef\u7528\u6027: {'\u901a\u8fc7' if (total_success/total_requests)*100 > 99 if total_requests > 0 else False else '\u9700\u8981\u4f18\u5316'}\")\nE                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   SyntaxError: expected 'else' after 'if' expression"}, {"nodeid": "tests/performance", "outcome": "passed", "result": [{"nodeid": "tests/performance/benchmark_test.py", "type": "Module"}, {"nodeid": "tests/performance/stress_test.py", "type": "Module"}]}, {"nodeid": "tests/pet/test_pet_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\pet\\test_pet_manager.py:8: in <module>\n    from apps.backend.src.pet.pet_manager import PetManager\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\pet\\pet_manager.py\", line 24\nE       \"\"\"Handles user interaction and updates the pet's state based on behavior rules.\"\"\"\nE                                                      ^\nE   SyntaxError: unterminated string literal (detected at line 24)"}, {"nodeid": "tests/pet", "outcome": "passed", "result": [{"nodeid": "tests/pet/test_pet_manager.py", "type": "Module"}]}, {"nodeid": "tests/run_hsp_simple_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/run_hsp_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/run_simple_hsp_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\run_simple_hsp_test.py\", line 24\nE       print(f\"\\nTest result for test_hsp_connector_init: {result}\"):\nE                                                                    ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/run_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/run_verification_test.py", "outcome": "passed", "result": []}, {"nodeid": "tests/search/test_search_engine.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\search\\test_search_engine.py\", line 11\nE       class TestSearchEngine(unittest.TestCase)\nE                                                ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/search", "outcome": "passed", "result": [{"nodeid": "tests/search/test_search_engine.py", "type": "Module"}]}, {"nodeid": "tests/services/test_ai_virtual_input_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_ai_virtual_input_service.py\", line 13\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "tests/services/test_audio_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\services\\test_audio_service.py:16: in <module>\n    from apps.backend.src.services.audio_service import AudioService\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\services\\audio_service.py\", line 39\nE       \u5c07\u8a9e\u97f3\u97f3\u983b\u6578\u64da\u8f49\u63db\u70ba\u6587\u672c\u3002\u589e\u5f37\u7248\u672c\u652f\u6301\u66f4\u591a\u7279\u5fb5\u3002\nE                   ^\nE   SyntaxError: invalid character '\u3002' (U+3002)"}, {"nodeid": "tests/services/test_health_ready_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\services\\test_health_ready_endpoints.py:10: in <module>\n    from apps.backend.src.services.main_api_server import app\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\services\\main_api_server.py\", line 14\nE       if project_root not in sys.path::\nE                                       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_hot_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_hot_endpoints.py\", line 15\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/services/test_hsp_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\services\\test_hsp_endpoints.py:10: in <module>\n    from apps.backend.src.services.main_api_server import app\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\services\\main_api_server.py\", line 14\nE       if project_root not in sys.path::\nE                                       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_llm_interface.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_llm_interface.py\", line 33\nE       @pytest.mark.asyncio\nE                           ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/services/test_main_api_server.py::TestClient", "outcome": "passed", "result": []}, {"nodeid": "tests/services/test_main_api_server.py", "outcome": "passed", "result": [{"nodeid": "tests/services/test_main_api_server.py::TestClient", "type": "Class"}, {"nodeid": "tests/services/test_main_api_server.py::test_read_main", "type": "Function", "lineno": 25}, {"nodeid": "tests/services/test_main_api_server.py::test_get_status", "type": "Function", "lineno": 31}]}, {"nodeid": "tests/services/test_main_api_server_hsp.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_main_api_server_hsp.py\", line 39\nE       self._mock_sdm_capabilities_store = {}\nE       ^^^^\nE   IndentationError: expected an indented block after function definition on line 38"}, {"nodeid": "tests/services/test_models_endpoints.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\services\\test_models_endpoints.py:10: in <module>\n    from apps.backend.src.services.main_api_server import app as fastapi_app\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\services\\main_api_server.py\", line 14\nE       if project_root not in sys.path::\nE                                       ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration", "outcome": "passed", "result": [{"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration::test_node_service_data_exchange_formats", "type": "TestCaseFunction", "lineno": 66}, {"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration::test_node_service_error_handling", "type": "TestCaseFunction", "lineno": 89}, {"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration::test_node_service_sends_data_to_python_api", "type": "TestCaseFunction", "lineno": 38}, {"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration::test_node_service_status_check", "type": "TestCaseFunction", "lineno": 56}, {"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration::test_node_service_with_empty_data", "type": "TestCaseFunction", "lineno": 101}]}, {"nodeid": "tests/services/test_node_services.py", "outcome": "passed", "result": [{"nodeid": "tests/services/test_node_services.py::TestNodeServicesIntegration", "type": "UnitTestCase"}]}, {"nodeid": "tests/services/test_resource_awareness_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_resource_awareness_service.py\", line 16\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "tests/services/test_sandbox_executor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_sandbox_executor.py\", line 20\nE       class TestSandboxExecutor(unittest.TestCase)\nE                                                   ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/services/test_vision_service.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\services\\test_vision_service.py\", line 33\nE       @pytest.mark.asyncio\nE                           ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/services", "outcome": "passed", "result": [{"nodeid": "tests/services/test_ai_virtual_input_service.py", "type": "Module"}, {"nodeid": "tests/services/test_audio_service.py", "type": "Module"}, {"nodeid": "tests/services/test_health_ready_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_hot_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_hsp_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_llm_interface.py", "type": "Module"}, {"nodeid": "tests/services/test_main_api_server.py", "type": "Module"}, {"nodeid": "tests/services/test_main_api_server_hsp.py", "type": "Module"}, {"nodeid": "tests/services/test_models_endpoints.py", "type": "Module"}, {"nodeid": "tests/services/test_node_services.py", "type": "Module"}, {"nodeid": "tests/services/test_resource_awareness_service.py", "type": "Module"}, {"nodeid": "tests/services/test_sandbox_executor.py", "type": "Module"}, {"nodeid": "tests/services/test_vision_service.py", "type": "Module"}]}, {"nodeid": "tests/shared/test_key_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\shared\\test_key_manager.py\", line 40\nE       def test_demo_mode_detection_from_env(self) -> None:\nE                                                           ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/shared/utils/test_cleanup_utils.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\shared\\utils\\test_cleanup_utils.py:16: in <module>\n    from apps.backend.src.shared.utils import cleanup_utils\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\shared\\utils\\cleanup_utils.py\", line 46\nE       if (file_path.is_file and:\nE                                ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/shared/utils", "outcome": "passed", "result": [{"nodeid": "tests/shared/utils/test_cleanup_utils.py", "type": "Module"}]}, {"nodeid": "tests/shared", "outcome": "passed", "result": [{"nodeid": "tests/shared/test_key_manager.py", "type": "Module"}, {"nodeid": "tests/shared/utils", "type": "Dir"}]}, {"nodeid": "tests/simple_agent_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_agent_test.py::test_imports", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/simple_enterprise_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_enterprise_test.py::test_backend_modules", "type": "Function", "lineno": 13}, {"nodeid": "tests/simple_enterprise_test.py::test_frontend_components", "type": "Function", "lineno": 42}, {"nodeid": "tests/simple_enterprise_test.py::test_desktop_components", "type": "Function", "lineno": 69}, {"nodeid": "tests/simple_enterprise_test.py::test_integration_points", "type": "Function", "lineno": 96}]}, {"nodeid": "tests/simple_hsp_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\simple_hsp_test.py:10: in <module>\n    from apps.backend.src.core.hsp.connector import HSPConnector\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\core\\hsp\\connector.py\", line 761\nE       Handle a fact message.\nE              ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/simple_path_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_path_test.py::test_path_config", "type": "Function", "lineno": 6}]}, {"nodeid": "tests/simple_pytest_test.py", "outcome": "passed", "result": [{"nodeid": "tests/simple_pytest_test.py::test_example", "type": "Function", "lineno": 2}]}, {"nodeid": "tests/system", "outcome": "passed", "result": []}, {"nodeid": "tests/temp_async_test.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\temp_async_test.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\temp_async_test.py:2: in <module>\n    from apps.backend.src.core_ai.trust.trust_manager_module import TrustManager\nE   ModuleNotFoundError: No module named 'apps.backend.src.core_ai'"}, {"nodeid": "tests/test_agi_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_agi_integration.py\", line 30\nE       \"\"\"\u7edf\u4e00\u63a7\u5236\u4e2d\u5fc3\u6a21\u62df\u5b9e\u73b0\"\"\"\nE       ^^^^^^^^^^^^^^^^\nE   IndentationError: expected an indented block after class definition on line 29"}, {"nodeid": "tests/test_ai_editor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_ai_editor.py\", line 192\nE       \"\"\"Test getting configuration\"\"\"\nE                                    ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 207)"}, {"nodeid": "tests/test_all_fixed_modules.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_alpha_upgrade.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_alpha_upgrade.py\", line 21\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_api_with_delay.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_apple_inc.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_apple_inc.py\", line 51\nE       or node, data in nx_graph.nodes(data=True):\nE       ^^\nE   SyntaxError: expected 'except' or 'finally' block"}, {"nodeid": "tests/test_atlassian_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_atlassian_integration.py\", line 110\nE       \"\"\"Test Jira project retrieval\"\"\"\nE                                     ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 135)"}, {"nodeid": "tests/test_audio_service_direct.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_audio_service_direct.py\", line 18\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_automated_defect_detector.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_automated_defect_detector.py\", line 76\nE       resource_leak_defects2 = [d for d in defects2 if d.defect_type == DefectType.RESOURCE_LEAK]:\nE                                                                                                  ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_base_agent_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_base_agent_simple.py\", line 14\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_basic.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_basic.py\", line 10\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_capital_of.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_capital_of.py\", line 31\nE       def test_\nE                ^\nE   SyntaxError: expected '('"}, {"nodeid": "tests/test_capital_of_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_capital_of_debug.py\", line 16\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_chromadb_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_chromadb_fix.py\", line 43\nE       f os.name == 'nt':  # Windows\nE   IndentationError: expected an indented block after 'if' statement on line 42"}, {"nodeid": "tests/test_compat_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_compat_fix.py\", line 23\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_concept_models_training.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_concept_models_training.py\", line 29\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_config_loader.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_config_loader.py\", line 72\nE       self.assertIsInstance(demo_mode, bool)\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_content_analyzer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_content_analyzer.py\", line 32\nE       ound_apple = False\nE       ^^^^^^^^^^\nE   SyntaxError: expected 'except' or 'finally' block"}, {"nodeid": "tests/test_content_analyzer_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_content_analyzer_fix.py\", line 16\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_core_service_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_core_service_manager.py\", line 331\nE       \"\"\"\u6d4b\u8bd5\u670d\u52a1\u4fe1\u606f\u521b\u5efa\"\"\"\nE                  ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 359)"}, {"nodeid": "tests/test_core_services.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_core_services.py\", line 69\nE       expected_keys = [\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_core_services_module.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_core_services_module.py\", line 15\nE       \"\"\"Test cases for core_services.py\"\"\":\nE                                            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_coverage_analyzer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_coverage_analyzer.py\", line 17\nE       \"\"\u8986\u76d6\u7387\u5206\u6790\u5668\u6d4b\u8bd5\u7c7b\"\"\"\nE       ^^\nE   IndentationError: expected an indented block after class definition on line 16"}, {"nodeid": "tests/test_coverage_report.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_data", "outcome": "passed", "result": []}, {"nodeid": "tests/test_data_analysis_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_data_analysis_debug.py\", line 20\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_data_manager.py", "outcome": "failed", "result": [], "longrepr": "tests\\test_data_manager.py:21: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "tests/test_debug.py", "outcome": "failed", "result": [], "longrepr": "tests\\test_debug.py:57: in <module>\n    exec(code)\n<string>:18: in <module>\n    ???\nE   NameError: name 'based_in_pattern' is not defined"}, {"nodeid": "tests/test_defect_detector.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\test_defect_detector.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_defect_detector.py:7: in <module>\n    from automated_defect_detector import DefectDetector\nE   ModuleNotFoundError: No module named 'automated_defect_detector'"}, {"nodeid": "tests/test_dependency_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_dependency_manager.py\", line 32\nE       \"\"\"\u6d4b\u8bd5\u4e3b\u4f9d\u8d56\u53ef\u7528\"\"\"\nE       ^^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 31"}, {"nodeid": "tests/test_dependency_manager_backup.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_dependency_manager_backup.py\", line 31\nE       def test_primary_dependency_available(self) -> None:\nE                                                           ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/test_env.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_environment_manager.py", "outcome": "failed", "result": [], "longrepr": "tests\\test_environment_manager.py:21: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "tests/test_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_fix.py\", line 16\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_fix_debug.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_fix_debug.py\", line 16\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_fix_demo.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_fix_demo.py\", line 159\nE       \"\"\"\u4e3b\u51fd\u6570\"\"\"\nE             ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 184)"}, {"nodeid": "tests/test_fixed_modules_final.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_fixes.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_fixes.py\", line 22\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_gmqtt_import.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_gmqtt_import.py\", line 21\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_hsp_fixture_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_hsp_fixture_fix.py\", line 36\nE       async \nE             ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_import.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_intelligent_test_generator.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_intelligent_test_generator.py:9: in <module>\n    from intelligent_test_generator import (\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\intelligent_test_generator.py\", line 527\nE       \"\"\"\u4fdd\u5b58\u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u5230\u6587\u4ef6\"\"\"\nE                      ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 558)"}, {"nodeid": "tests/test_json_fix.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_logic_parser.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_logic_tool.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_math_model.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_math_tool.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_message_bridge.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_message_bridge.py\", line 18\nE       ock = AsyncMock(spec=ExternalConnector)\nE       ^^^\nE   IndentationError: expected an indented block after function definition on line 17"}, {"nodeid": "tests/test_model_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_model_integration.py\", line 23\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_module.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_modules.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_modules.py\", line 22\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_modules_output.txt", "outcome": "passed", "result": []}, {"nodeid": "tests/test_modules_with_output.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_multi_llm_import.py::TestMultiLLMImport", "outcome": "passed", "result": [{"nodeid": "tests/test_multi_llm_import.py::TestMultiLLMImport::test_multi_llm_import", "type": "TestCaseFunction", "lineno": 22}]}, {"nodeid": "tests/test_multi_llm_import.py", "outcome": "passed", "result": [{"nodeid": "tests/test_multi_llm_import.py::TestMultiLLMImport", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_output_data/ham_memory_chroma/chroma_db", "outcome": "passed", "result": []}, {"nodeid": "tests/test_output_data/ham_memory_chroma", "outcome": "passed", "result": [{"nodeid": "tests/test_output_data/ham_memory_chroma/chroma_db", "type": "Dir"}]}, {"nodeid": "tests/test_output_data/personality_manager_files", "outcome": "passed", "result": []}, {"nodeid": "tests/test_output_data", "outcome": "passed", "result": [{"nodeid": "tests/test_output_data/ham_memory_chroma", "type": "Dir"}, {"nodeid": "tests/test_output_data/personality_manager_files", "type": "Dir"}]}, {"nodeid": "tests/test_path.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_path_config.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_path_config.py\", line 35\nE       def test_directory_paths_defined(self) -> None:\nE                                                      ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/test_performance_benchmark.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_performance_benchmark.py\", line 283\nE       def test_run_component_benchmark_with_errors(self, mock_psutil) -> None:\nE   IndentationError: unexpected unindent"}, {"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization::test_distributed_optimizer_initialization", "type": "TestCaseFunction", "lineno": 73}, {"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization::test_gpu_optimizer_initialization", "type": "TestCaseFunction", "lineno": 37}, {"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization::test_hsp_performance_optimizer_initialization", "type": "TestCaseFunction", "lineno": 55}, {"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization::test_smart_resource_allocator_initialization", "type": "TestCaseFunction", "lineno": 64}, {"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization::test_system_monitor_initialization", "type": "TestCaseFunction", "lineno": 46}]}, {"nodeid": "tests/test_performance_optimization.py::TestGPUOptimization", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestGPUOptimization::test_gpu_memory_optimization", "type": "TestCaseFunction", "lineno": 85}, {"nodeid": "tests/test_performance_optimization.py::TestGPUOptimization::test_mixed_precision_enable", "type": "TestCaseFunction", "lineno": 98}]}, {"nodeid": "tests/test_performance_optimization.py::TestSystemMonitoring", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestSystemMonitoring::test_resource_recommendations", "type": "TestCaseFunction", "lineno": 130}, {"nodeid": "tests/test_performance_optimization.py::TestSystemMonitoring::test_system_metrics_collection", "type": "TestCaseFunction", "lineno": 114}]}, {"nodeid": "tests/test_performance_optimization.py::TestHSPPerformanceOptimization", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestHSPPerformanceOptimization::test_message_caching", "type": "TestCaseFunction", "lineno": 145}, {"nodeid": "tests/test_performance_optimization.py::TestHSPPerformanceOptimization::test_message_compression", "type": "TestCaseFunction", "lineno": 161}]}, {"nodeid": "tests/test_performance_optimization.py::TestResourceAllocation", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestResourceAllocation::test_resource_utilization_monitoring", "type": "TestCaseFunction", "lineno": 212}, {"nodeid": "tests/test_performance_optimization.py::TestResourceAllocation::test_smart_resource_allocation", "type": "TestCaseFunction", "lineno": 186}]}, {"nodeid": "tests/test_performance_optimization.py::TestDistributedOptimization", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestDistributedOptimization::test_cluster_status", "type": "TestCaseFunction", "lineno": 240}, {"nodeid": "tests/test_performance_optimization.py::TestDistributedOptimization::test_node_registration", "type": "TestCaseFunction", "lineno": 227}]}, {"nodeid": "tests/test_performance_optimization.py", "outcome": "passed", "result": [{"nodeid": "tests/test_performance_optimization.py::TestPerformanceOptimization", "type": "UnitTestCase"}, {"nodeid": "tests/test_performance_optimization.py::TestGPUOptimization", "type": "UnitTestCase"}, {"nodeid": "tests/test_performance_optimization.py::TestSystemMonitoring", "type": "UnitTestCase"}, {"nodeid": "tests/test_performance_optimization.py::TestHSPPerformanceOptimization", "type": "UnitTestCase"}, {"nodeid": "tests/test_performance_optimization.py::TestResourceAllocation", "type": "UnitTestCase"}, {"nodeid": "tests/test_performance_optimization.py::TestDistributedOptimization", "type": "UnitTestCase"}]}, {"nodeid": "tests/test_quality_assessor.py", "outcome": "failed", "result": [], "longrepr": "tests\\test_quality_assessor.py:21: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified", "outcome": "passed", "result": [{"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_simple_semantic_similarity", "type": "Coroutine", "lineno": 26}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_real_correlation_calculation", "type": "Coroutine", "lineno": 53}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_causal_graph_operations", "type": "Coroutine", "lineno": 85}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_temporal_pattern_detection_simplified", "type": "Coroutine", "lineno": 110}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_causal_strength_calculation_simplified", "type": "Coroutine", "lineno": 153}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_intervention_planner_simplified", "type": "Coroutine", "lineno": 186}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_counterfactual_reasoning_simplified", "type": "Coroutine", "lineno": 225}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_error_handling_robustness", "type": "Function", "lineno": 264}, {"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified::test_performance_benchmark", "type": "Coroutine", "lineno": 297}]}, {"nodeid": "tests/test_real_causal_engine_simplified.py", "outcome": "passed", "result": [{"nodeid": "tests/test_real_causal_engine_simplified.py::TestRealCausalEngineSimplified", "type": "Class"}]}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine", "outcome": "passed", "result": [{"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_semantic_similarity_calculation", "type": "Coroutine", "lineno": 54}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_real_correlation_calculation", "type": "Coroutine", "lineno": 79}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_temporal_pattern_detection", "type": "Coroutine", "lineno": 107}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_causal_strength_calculation", "type": "Coroutine", "lineno": 148}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_counterfactual_reasoning", "type": "Coroutine", "lineno": 179}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_intervention_planning", "type": "Coroutine", "lineno": 230}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_comparison_with_original_engine", "type": "Coroutine", "lineno": 260}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_memory_usage_and_performance", "type": "Coroutine", "lineno": 306}, {"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine::test_error_handling_and_robustness", "type": "Coroutine", "lineno": 353}]}, {"nodeid": "tests/test_real_causal_reasoning_engine.py", "outcome": "passed", "result": [{"nodeid": "tests/test_real_causal_reasoning_engine.py::TestRealCausalReasoningEngine", "type": "Class"}]}, {"nodeid": "tests/test_repeat_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_repeat_fix.py\", line 14\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_result_analyzer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_result_analyzer.py\", line 184\nE       }\nE       ^\nE   SyntaxError: closing parenthesis '}' does not match opening parenthesis '[' on line 176"}, {"nodeid": "tests/test_result_feedback.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_result_feedback.py\", line 71\nE       affected_tests': failure['affected_tests']\nE                                               ^\nE   SyntaxError: unterminated string literal (detected at line 71)"}, {"nodeid": "tests/test_result_processing_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_result_processing_test.py\", line 122\nE       }\nE       ^\nE   SyntaxError: closing parenthesis '}' does not match opening parenthesis '[' on line 114"}, {"nodeid": "tests/test_result_visualizer.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_result_visualizer.py\", line 30\nE       \"\"\"\nE       ^^^\nE   IndentationError: expected an indented block after function definition on line 29"}, {"nodeid": "tests/test_runner.py::TestRunner", "outcome": "passed", "result": []}, {"nodeid": "tests/test_runner.py", "outcome": "passed", "result": [{"nodeid": "tests/test_runner.py::TestRunner", "type": "Class"}]}, {"nodeid": "tests/test_security.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_security.py\", line 40\nE       \"\"Test cases for the PermissionControlSystem class\"\"\":\nE                                                            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_security_improvements.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_security_improvements.py\", line 79\nE       \"\"\"\u6d4b\u8bd5\u786e\u4fdd\u6ca1\u6709\u4f7f\u7528eval\u51fd\u6570\"\"\"\nE                        ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 140)"}, {"nodeid": "tests/test_server.py", "outcome": "passed", "result": []}, {"nodeid": "tests/test_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_simple.py\", line 11\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_smart_dev_runner.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_smart_dev_runner.py\", line 16\nE       \"\"\"Test cases for smart_dev_runner.py\"\"\":\nE                                               ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_smart_executor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_smart_executor.py\", line 20\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_syntax_fix.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_syntax_fix.py\", line 17\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_syntax_fixer.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tests\\test_syntax_fixer.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ntests\\test_syntax_fixer.py:7: in <module>\n    from tools.scripts.modules.syntax_fixer import SyntaxFixer\nE   ModuleNotFoundError: No module named 'tools.scripts'"}, {"nodeid": "tests/test_system_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\test_system_integration.py:13: in <module>\n    from system_integration import UnifiedAISystem\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\system_integration.py\", line 67\nE       \"\"\"Process a user request through the unified system\"\"\"\nE                                                           ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 107)"}, {"nodeid": "tests/test_tool_call_chain.py", "outcome": "failed", "result": [], "longrepr": "tests\\test_tool_call_chain.py:10: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "tests/test_tool_context_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_tool_context_manager.py\", line 302\nE       tool_ids_found = [tool.tool_id for tool in tools]:\nE                                                        ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "tests/test_trained_models.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_trained_models.py\", line 22\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/test_type_fixes.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\test_type_fixes.py\", line 34\nE       def test_\nE                ^\nE   SyntaxError: expected '('"}, {"nodeid": "tests/test_unused_call_result.py", "outcome": "passed", "result": []}, {"nodeid": "tests/tools/test_code_understanding_tool.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\tools\\test_code_understanding_tool.py:16: in <module>\n    from apps.backend.src.tools.code_understanding_tool import CodeUnderstandingTool\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\tools\\code_understanding_tool.py\", line 50\nE       Returns: str: A human-readable description of the tool's structure,\nE                                                             ^\nE   SyntaxError: unterminated string literal (detected at line 50)"}, {"nodeid": "tests/tools/test_logic_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\tools\\test_logic_model.py\", line 28\nE       class TestLogicModelComponents(unittest.TestCase)\nE                                                        ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/tools/test_math_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntests\\tools\\test_math_model.py:14: in <module>\n    from apps.backend.src.tools.math_model import data_generator\nE     File \"D:\\Projects\\Unified-AI-Project\\apps\\backend\\src\\tools\\math_model\\data_generator.py\", line 29\nE       if isinstance(node, ast.Constant)  # Python 3.8+:\nE                                          ^^^^^^^^^^^^^^^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/tools/test_parameter_extractor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\tools\\test_parameter_extractor.py\", line 42\nE       def test_map_parameters(self) -> None:\nE                                             ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/tools/test_tool_dispatcher_logging.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\tools\\test_tool_dispatcher_logging.py\", line 44\nE       def setUp(self):\nE   IndentationError: unexpected indent"}, {"nodeid": "tests/tools/test_translation_model.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\tools\\test_translation_model.py\", line 29\nE       class TestTranslationModelComponents(unittest.TestCase)\nE                                                              ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tests/tools", "outcome": "passed", "result": [{"nodeid": "tests/tools/test_code_understanding_tool.py", "type": "Module"}, {"nodeid": "tests/tools/test_logic_model.py", "type": "Module"}, {"nodeid": "tests/tools/test_math_model.py", "type": "Module"}, {"nodeid": "tests/tools/test_parameter_extractor.py", "type": "Module"}, {"nodeid": "tests/tools/test_tool_dispatcher_logging.py", "type": "Module"}, {"nodeid": "tests/tools/test_translation_model.py", "type": "Module"}]}, {"nodeid": "tests/training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "tests/training/configs", "outcome": "passed", "result": []}, {"nodeid": "tests/training/models", "outcome": "passed", "result": []}, {"nodeid": "tests/training/test_training_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tests\\training\\test_training_manager.py\", line 42\nE       def test_execution_manager_init(self, execution_manager) -> None:\nE                                                                        ^\nE   IndentationError: unindent does not match any outer indentation level"}, {"nodeid": "tests/training", "outcome": "passed", "result": [{"nodeid": "tests/training/checkpoints", "type": "Dir"}, {"nodeid": "tests/training/configs", "type": "Dir"}, {"nodeid": "tests/training/models", "type": "Dir"}, {"nodeid": "tests/training/test_training_manager.py", "type": "Module"}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_detect_anomalies_high_cpu", "type": "TestCaseFunction", "lineno": 33}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_detect_anomalies_high_error_rate", "type": "TestCaseFunction", "lineno": 70}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_detect_anomalies_high_memory", "type": "TestCaseFunction", "lineno": 52}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_detect_anomalies_high_response_time", "type": "TestCaseFunction", "lineno": 88}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_detect_anomalies_no_issues", "type": "TestCaseFunction", "lineno": 106}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_initialization", "type": "TestCaseFunction", "lineno": 26}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_predict_capacity_needs_insufficient_data", "type": "TestCaseFunction", "lineno": 122}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine::test_predict_capacity_needs_with_data", "type": "TestCaseFunction", "lineno": 133}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_generate_maintenance_recommendation", "type": "TestCaseFunction", "lineno": 229}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_initialization", "type": "TestCaseFunction", "lineno": 173}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_predict_failure_probability", "type": "TestCaseFunction", "lineno": 215}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_simple_health_assessment_empty_metrics", "type": "TestCaseFunction", "lineno": 207}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_simple_health_assessment_good", "type": "TestCaseFunction", "lineno": 179}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance::test_simple_health_assessment_poor", "type": "TestCaseFunction", "lineno": 193}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer::test_analyze_performance_trend_empty", "type": "TestCaseFunction", "lineno": 256}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer::test_analyze_performance_trend_with_data", "type": "TestCaseFunction", "lineno": 267}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer::test_detect_bottlenecks_empty", "type": "TestCaseFunction", "lineno": 294}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer::test_detect_bottlenecks_with_data", "type": "TestCaseFunction", "lineno": 303}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer::test_initialization", "type": "TestCaseFunction", "lineno": 250}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner::test_analyze_capacity_trends_empty", "type": "TestCaseFunction", "lineno": 398}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner::test_analyze_capacity_trends_with_data", "type": "TestCaseFunction", "lineno": 406}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner::test_initialization", "type": "TestCaseFunction", "lineno": 338}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner::test_predict_cpu_needs_insufficient_data", "type": "TestCaseFunction", "lineno": 344}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner::test_predict_cpu_needs_with_data", "type": "TestCaseFunction", "lineno": 362}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager::test_collect_system_metrics", "type": "TestCaseFunction", "lineno": 447}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager::test_get_insights", "type": "TestCaseFunction", "lineno": 475}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager::test_get_ops_dashboard_data", "type": "TestCaseFunction", "lineno": 502}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager::test_initialization", "type": "TestCaseFunction", "lineno": 441}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntegration", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntegration::test_components_interaction", "type": "TestCaseFunction", "lineno": 525}]}, {"nodeid": "tests/unit/test_ai_ops_complete.py", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py::TestAIOpsEngine", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPredictiveMaintenance", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestPerformanceOptimizer", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestCapacityPlanner", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntelligentOpsManager", "type": "UnitTestCase"}, {"nodeid": "tests/unit/test_ai_ops_complete.py::TestIntegration", "type": "UnitTestCase"}]}, {"nodeid": "tests/unit", "outcome": "passed", "result": [{"nodeid": "tests/unit/test_ai_ops_complete.py", "type": "Module"}]}, {"nodeid": "tests", "outcome": "passed", "result": [{"nodeid": "tests/agents", "type": "Package"}, {"nodeid": "tests/ai", "type": "Package"}, {"nodeid": "tests/cli", "type": "Dir"}, {"nodeid": "tests/comprehensive_test.py", "type": "Module"}, {"nodeid": "tests/core_ai", "type": "Package"}, {"nodeid": "tests/creation", "type": "Dir"}, {"nodeid": "tests/data", "type": "Dir"}, {"nodeid": "tests/debug_patch_test.py", "type": "Module"}, {"nodeid": "tests/debug_test.py", "type": "Module"}, {"nodeid": "tests/desktop-app", "type": "Dir"}, {"nodeid": "tests/e2e", "type": "Dir"}, {"nodeid": "tests/economy", "type": "Package"}, {"nodeid": "tests/evaluation", "type": "Dir"}, {"nodeid": "tests/final_comprehensive_test.py", "type": "Module"}, {"nodeid": "tests/final_test.py", "type": "Module"}, {"nodeid": "tests/fragmenta", "type": "Package"}, {"nodeid": "tests/game", "type": "Package"}, {"nodeid": "tests/hsp", "type": "Package"}, {"nodeid": "tests/integration", "type": "Dir"}, {"nodeid": "tests/integration_test.py", "type": "Module"}, {"nodeid": "tests/integrations", "type": "Package"}, {"nodeid": "tests/interfaces", "type": "Package"}, {"nodeid": "tests/mcp", "type": "Dir"}, {"nodeid": "tests/meta", "type": "Dir"}, {"nodeid": "tests/modules_fragmenta", "type": "Package"}, {"nodeid": "tests/performance", "type": "Dir"}, {"nodeid": "tests/pet", "type": "Dir"}, {"nodeid": "tests/run_hsp_simple_test.py", "type": "Module"}, {"nodeid": "tests/run_hsp_test.py", "type": "Module"}, {"nodeid": "tests/run_simple_hsp_test.py", "type": "Module"}, {"nodeid": "tests/run_test.py", "type": "Module"}, {"nodeid": "tests/run_verification_test.py", "type": "Module"}, {"nodeid": "tests/search", "type": "Dir"}, {"nodeid": "tests/services", "type": "Package"}, {"nodeid": "tests/shared", "type": "Dir"}, {"nodeid": "tests/simple_agent_test.py", "type": "Module"}, {"nodeid": "tests/simple_enterprise_test.py", "type": "Module"}, {"nodeid": "tests/simple_hsp_test.py", "type": "Module"}, {"nodeid": "tests/simple_path_test.py", "type": "Module"}, {"nodeid": "tests/simple_pytest_test.py", "type": "Module"}, {"nodeid": "tests/system", "type": "Dir"}, {"nodeid": "tests/temp_async_test.py", "type": "Module"}, {"nodeid": "tests/test_agi_integration.py", "type": "Module"}, {"nodeid": "tests/test_ai_editor.py", "type": "Module"}, {"nodeid": "tests/test_all_fixed_modules.py", "type": "Module"}, {"nodeid": "tests/test_alpha_upgrade.py", "type": "Module"}, {"nodeid": "tests/test_api_with_delay.py", "type": "Module"}, {"nodeid": "tests/test_apple_inc.py", "type": "Module"}, {"nodeid": "tests/test_atlassian_integration.py", "type": "Module"}, {"nodeid": "tests/test_audio_service_direct.py", "type": "Module"}, {"nodeid": "tests/test_automated_defect_detector.py", "type": "Module"}, {"nodeid": "tests/test_base_agent_simple.py", "type": "Module"}, {"nodeid": "tests/test_basic.py", "type": "Module"}, {"nodeid": "tests/test_capital_of.py", "type": "Module"}, {"nodeid": "tests/test_capital_of_debug.py", "type": "Module"}, {"nodeid": "tests/test_chromadb_fix.py", "type": "Module"}, {"nodeid": "tests/test_compat_fix.py", "type": "Module"}, {"nodeid": "tests/test_concept_models_training.py", "type": "Module"}, {"nodeid": "tests/test_config_loader.py", "type": "Module"}, {"nodeid": "tests/test_content_analyzer.py", "type": "Module"}, {"nodeid": "tests/test_content_analyzer_fix.py", "type": "Module"}, {"nodeid": "tests/test_core_service_manager.py", "type": "Module"}, {"nodeid": "tests/test_core_services.py", "type": "Module"}, {"nodeid": "tests/test_core_services_module.py", "type": "Module"}, {"nodeid": "tests/test_coverage_analyzer.py", "type": "Module"}, {"nodeid": "tests/test_coverage_report.py", "type": "Module"}, {"nodeid": "tests/test_data", "type": "Dir"}, {"nodeid": "tests/test_data_analysis_debug.py", "type": "Module"}, {"nodeid": "tests/test_data_manager.py", "type": "Module"}, {"nodeid": "tests/test_debug.py", "type": "Module"}, {"nodeid": "tests/test_defect_detector.py", "type": "Module"}, {"nodeid": "tests/test_dependency_manager.py", "type": "Module"}, {"nodeid": "tests/test_dependency_manager_backup.py", "type": "Module"}, {"nodeid": "tests/test_env.py", "type": "Module"}, {"nodeid": "tests/test_environment_manager.py", "type": "Module"}, {"nodeid": "tests/test_fix.py", "type": "Module"}, {"nodeid": "tests/test_fix_debug.py", "type": "Module"}, {"nodeid": "tests/test_fix_demo.py", "type": "Module"}, {"nodeid": "tests/test_fixed_modules_final.py", "type": "Module"}, {"nodeid": "tests/test_fixes.py", "type": "Module"}, {"nodeid": "tests/test_gmqtt_import.py", "type": "Module"}, {"nodeid": "tests/test_hsp_fixture_fix.py", "type": "Module"}, {"nodeid": "tests/test_import.py", "type": "Module"}, {"nodeid": "tests/test_intelligent_test_generator.py", "type": "Module"}, {"nodeid": "tests/test_json_fix.py", "type": "Module"}, {"nodeid": "tests/test_logic_parser.py", "type": "Module"}, {"nodeid": "tests/test_logic_tool.py", "type": "Module"}, {"nodeid": "tests/test_math_model.py", "type": "Module"}, {"nodeid": "tests/test_math_tool.py", "type": "Module"}, {"nodeid": "tests/test_message_bridge.py", "type": "Module"}, {"nodeid": "tests/test_model_integration.py", "type": "Module"}, {"nodeid": "tests/test_module.py", "type": "Module"}, {"nodeid": "tests/test_modules.py", "type": "Module"}, {"nodeid": "tests/test_modules_output.txt", "type": "DoctestTextfile"}, {"nodeid": "tests/test_modules_with_output.py", "type": "Module"}, {"nodeid": "tests/test_multi_llm_import.py", "type": "Module"}, {"nodeid": "tests/test_output_data", "type": "Dir"}, {"nodeid": "tests/test_path.py", "type": "Module"}, {"nodeid": "tests/test_path_config.py", "type": "Module"}, {"nodeid": "tests/test_performance_benchmark.py", "type": "Module"}, {"nodeid": "tests/test_performance_optimization.py", "type": "Module"}, {"nodeid": "tests/test_quality_assessor.py", "type": "Module"}, {"nodeid": "tests/test_real_causal_engine_simplified.py", "type": "Module"}, {"nodeid": "tests/test_real_causal_reasoning_engine.py", "type": "Module"}, {"nodeid": "tests/test_repeat_fix.py", "type": "Module"}, {"nodeid": "tests/test_result_analyzer.py", "type": "Module"}, {"nodeid": "tests/test_result_feedback.py", "type": "Module"}, {"nodeid": "tests/test_result_processing_test.py", "type": "Module"}, {"nodeid": "tests/test_result_visualizer.py", "type": "Module"}, {"nodeid": "tests/test_runner.py", "type": "Module"}, {"nodeid": "tests/test_security.py", "type": "Module"}, {"nodeid": "tests/test_security_improvements.py", "type": "Module"}, {"nodeid": "tests/test_server.py", "type": "Module"}, {"nodeid": "tests/test_simple.py", "type": "Module"}, {"nodeid": "tests/test_smart_dev_runner.py", "type": "Module"}, {"nodeid": "tests/test_smart_executor.py", "type": "Module"}, {"nodeid": "tests/test_syntax_fix.py", "type": "Module"}, {"nodeid": "tests/test_syntax_fixer.py", "type": "Module"}, {"nodeid": "tests/test_system_integration.py", "type": "Module"}, {"nodeid": "tests/test_tool_call_chain.py", "type": "Module"}, {"nodeid": "tests/test_tool_context_manager.py", "type": "Module"}, {"nodeid": "tests/test_trained_models.py", "type": "Module"}, {"nodeid": "tests/test_type_fixes.py", "type": "Module"}, {"nodeid": "tests/test_unused_call_result.py", "type": "Module"}, {"nodeid": "tests/tools", "type": "Package"}, {"nodeid": "tests/training", "type": "Dir"}, {"nodeid": "tests/unit", "type": "Dir"}]}, {"nodeid": "tools/build-tools", "outcome": "passed", "result": []}, {"nodeid": "tools/core", "outcome": "passed", "result": []}, {"nodeid": "tools/deployment-tools", "outcome": "passed", "result": []}, {"nodeid": "tools/dev-tools", "outcome": "passed", "result": []}, {"nodeid": "tools/e2e_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\e2e_test.py\", line 20\nE       from security.permission_control import PermissionControlSystem, PermissionContext, PermissionType\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 18"}, {"nodeid": "tools/final_integration_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\final_integration_test.py\", line 34\nE       ontext = PermissionContext(\nE   SyntaxError: expected 'except' or 'finally' block"}, {"nodeid": "tools/maintenance", "outcome": "passed", "result": []}, {"nodeid": "tools/misc", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/auto_fix_test.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tools\\scripts\\auto_fix_test.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   ModuleNotFoundError: No module named 'scripts.auto_fix_test'"}, {"nodeid": "tools/scripts/core", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/data_migration", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/data_processing", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/modules", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/prototypes", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts/simple_test.py", "outcome": "failed", "result": [], "longrepr": "ImportError while importing test module 'D:\\Projects\\Unified-AI-Project\\tools\\scripts\\simple_test.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE   ModuleNotFoundError: No module named 'scripts.simple_test'"}, {"nodeid": "tools/scripts/test_coverage_monitor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_coverage_monitor.py\", line 19\nE       \"\"\"\u521d\u59cb\u5316\u76d1\u63a7\u5668\"\"\"\nE       ^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 18"}, {"nodeid": "tools/scripts/test_environment_setup.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_environment_setup.py\", line 16\nE       \"\"\"\u521d\u59cb\u5316\u73af\u5883\u8bbe\u7f6e\u5668\"\"\"\nE       ^^^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 15"}, {"nodeid": "tools/scripts/test_execution_monitor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_execution_monitor.py\", line 74\nE       for i in range(3)\nE                        ^\nE   SyntaxError: expected ':'"}, {"nodeid": "tools/scripts/test_failure_alert.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\backup_before_script_migration\\scripts\\test_failure_alert.py\", line 20\nE       \"\"\"\u521d\u59cb\u5316\u544a\u8b66\u5668\"\"\"\nE       ^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 19"}, {"nodeid": "tools/scripts/utils", "outcome": "passed", "result": []}, {"nodeid": "tools/scripts", "outcome": "passed", "result": [{"nodeid": "tools/scripts/auto_fix_test.py", "type": "Module"}, {"nodeid": "tools/scripts/core", "type": "Dir"}, {"nodeid": "tools/scripts/data_migration", "type": "Package"}, {"nodeid": "tools/scripts/data_processing", "type": "Dir"}, {"nodeid": "tools/scripts/modules", "type": "Dir"}, {"nodeid": "tools/scripts/prototypes", "type": "Dir"}, {"nodeid": "tools/scripts/simple_test.py", "type": "Module"}, {"nodeid": "tools/scripts/test_coverage_monitor.py", "type": "Module"}, {"nodeid": "tools/scripts/test_environment_setup.py", "type": "Module"}, {"nodeid": "tools/scripts/test_execution_monitor.py", "type": "Module"}, {"nodeid": "tools/scripts/test_failure_alert.py", "type": "Module"}, {"nodeid": "tools/scripts/utils", "type": "Dir"}]}, {"nodeid": "tools/simple_integration_test.py", "outcome": "failed", "result": [], "longrepr": "import file mismatch:\nimported module 'simple_integration_test' has this __file__ attribute:\n  D:\\Projects\\Unified-AI-Project\\tests\\integration\\simple_integration_test.py\nwhich is not the same as the test file we want to collect:\n  D:\\Projects\\Unified-AI-Project\\tools\\simple_integration_test.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules"}, {"nodeid": "tools/test-tools", "outcome": "passed", "result": []}, {"nodeid": "tools/test_ai_editor.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_ai_editor.py\", line 126\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 148)"}, {"nodeid": "tools/test_atlassian_full.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_atlassian_full.py\", line 130\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 162)"}, {"nodeid": "tools/test_data_manager.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_data_manager.py\", line 19\nE       \"\"\"\u521d\u59cb\u5316\u6d4b\u8bd5\u6570\u636e\u7ba1\u7406\u5668\"\"\"\nE       ^^^^^^^^^^^^^^^^\nE   IndentationError: expected an indented block after function definition on line 18"}, {"nodeid": "tools/test_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_integration.py\", line 108\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 139)"}, {"nodeid": "tools/test_rovo_cli.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_rovo_cli.py\", line 57\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 88)"}, {"nodeid": "tools/test_rovo_integration.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_rovo_integration.py\", line 155\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 187)"}, {"nodeid": "tools/test_rovo_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_rovo_simple.py\", line 46\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 74)"}, {"nodeid": "tools/test_security.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\test_security.py\", line 122\nE       \"\"\"Main test function\"\"\"\nE                            ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 147)"}, {"nodeid": "tools/user_acceptance_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\tools\\user_acceptance_test.py\", line 449\nE       \"\"\"Main function\"\"\"\nE                       ^\nE   SyntaxError: unterminated triple-quoted string literal (detected at line 492)"}, {"nodeid": "tools/utilities", "outcome": "passed", "result": []}, {"nodeid": "tools/utils", "outcome": "passed", "result": []}, {"nodeid": "tools", "outcome": "passed", "result": [{"nodeid": "tools/build-tools", "type": "Dir"}, {"nodeid": "tools/core", "type": "Dir"}, {"nodeid": "tools/deployment-tools", "type": "Dir"}, {"nodeid": "tools/dev-tools", "type": "Dir"}, {"nodeid": "tools/e2e_test.py", "type": "Module"}, {"nodeid": "tools/final_integration_test.py", "type": "Module"}, {"nodeid": "tools/maintenance", "type": "Dir"}, {"nodeid": "tools/misc", "type": "Dir"}, {"nodeid": "tools/scripts", "type": "Package"}, {"nodeid": "tools/simple_integration_test.py", "type": "Module"}, {"nodeid": "tools/test-tools", "type": "Dir"}, {"nodeid": "tools/test_ai_editor.py", "type": "Module"}, {"nodeid": "tools/test_atlassian_full.py", "type": "Module"}, {"nodeid": "tools/test_data_manager.py", "type": "Module"}, {"nodeid": "tools/test_integration.py", "type": "Module"}, {"nodeid": "tools/test_rovo_cli.py", "type": "Module"}, {"nodeid": "tools/test_rovo_integration.py", "type": "Module"}, {"nodeid": "tools/test_rovo_simple.py", "type": "Module"}, {"nodeid": "tools/test_security.py", "type": "Module"}, {"nodeid": "tools/user_acceptance_test.py", "type": "Module"}, {"nodeid": "tools/utilities", "type": "Dir"}, {"nodeid": "tools/utils", "type": "Dir"}]}, {"nodeid": "training/adaptive_learning_controller", "outcome": "passed", "result": []}, {"nodeid": "training/checkpoints", "outcome": "passed", "result": []}, {"nodeid": "training/comprehensive_system_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\comprehensive_system_test.py\", line 18\nE       level: str=logging.INFO,\nE            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/comprehensive_test.py", "outcome": "passed", "result": [{"nodeid": "training/comprehensive_test.py::test_data_manager_enhancements", "type": "Function", "lineno": 12}, {"nodeid": "training/comprehensive_test.py::test_auto_training_manager_enhancements", "type": "Function", "lineno": 70}, {"nodeid": "training/comprehensive_test.py::test_result_analysis_enhancements", "type": "Function", "lineno": 150}]}, {"nodeid": "training/configs", "outcome": "passed", "result": []}, {"nodeid": "training/examples", "outcome": "passed", "result": []}, {"nodeid": "training/logs", "outcome": "passed", "result": []}, {"nodeid": "training/models/adaptive_learning_controller", "outcome": "passed", "result": []}, {"nodeid": "training/models/alpha_deep_model", "outcome": "passed", "result": []}, {"nodeid": "training/models/causal_reasoning_engine", "outcome": "passed", "result": []}, {"nodeid": "training/models/environment_simulator", "outcome": "passed", "result": []}, {"nodeid": "training/models", "outcome": "passed", "result": [{"nodeid": "training/models/adaptive_learning_controller", "type": "Dir"}, {"nodeid": "training/models/alpha_deep_model", "type": "Dir"}, {"nodeid": "training/models/causal_reasoning_engine", "type": "Dir"}, {"nodeid": "training/models/environment_simulator", "type": "Dir"}]}, {"nodeid": "training/performance_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\performance_test.py\", line 77\nE       print(f\"  \u2705 \u4efb\u52a1\u6267\u884c\u68c0\u67e5: {'\u53ef\u4ee5\u6267\u884c' if can_execute else '\u8d44\u6e90\u4e0d\u8db3'}\"):\nE                                                                ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/quick_hardware_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\quick_hardware_test.py\", line 23\nE       level: str=logging.INFO,\nE            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/quick_test.py", "outcome": "passed", "result": [{"nodeid": "training/quick_test.py::test_imports", "type": "Function", "lineno": 12}, {"nodeid": "training/quick_test.py::test_data_manager_enhancements", "type": "Function", "lineno": 23}, {"nodeid": "training/quick_test.py::test_auto_training_enhancements", "type": "Function", "lineno": 45}]}, {"nodeid": "training/reports", "outcome": "passed", "result": []}, {"nodeid": "training/simple_test.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\simple_test.py\", line 23\nE       from data_manager import DataManager\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 20"}, {"nodeid": "training/states", "outcome": "passed", "result": []}, {"nodeid": "training/test_auto_training.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_auto_training.py\", line 34\nE       missing_keys = [key for key in required_keys if key not in report]:\nE                                                                         ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_collaborative_training.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_collaborative_training.py\", line 32\nE       data_manager = DataManager()\nE       ^^^^^^^^^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 29"}, {"nodeid": "training/test_collaborative_training_simple.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_collaborative_training_simple.py\", line 23\nE       from training.collaborative_training_manager import CollaborativeTrainingManager\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 21"}, {"nodeid": "training/test_dynamic_loading.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_dynamic_loading.py\", line 30\nE       from training.dynamic_loader import FileChunker\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 27"}, {"nodeid": "training/test_enhanced_auto_training.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_enhanced_auto_training.py\", line 49\nE       total_high_quality = sum(len(files) for files in high_quality_data.values()):\nE                                                                                   ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_enhanced_collaborative_training.py", "outcome": "failed", "result": [], "longrepr": "training\\test_enhanced_collaborative_training.py:18: in <module>\n    logger: Any = logging.getLogger(__name__)\n            ^^^\nE   NameError: name 'Any' is not defined"}, {"nodeid": "training/test_error_handling.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_error_handling.py\", line 20\nE       level: str=logging.INFO,\nE            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_fault_tolerance.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_fault_tolerance.py\", line 27\nE       level: str=logging.INFO,\nE            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_hardware_compatibility.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_hardware_compatibility.py\", line 39\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "training/test_incremental_learning.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntraining\\test_incremental_learning.py:13: in <module>\n    from training.incremental_learning_manager import (\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\incremental_learning_manager.py\", line 31\nE       )\nE       ^\nE   SyntaxError: unmatched ')'"}, {"nodeid": "training/test_incremental_learning_comprehensive.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_incremental_learning_comprehensive.py\", line 215\nE       missing_fields = [field for field in required_fields if field not in status]:\nE                                                                                   ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_integrated_graphics_training.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_integrated_graphics_training.py\", line 20\nE       level: str=logging.INFO,\nE            ^\nE   SyntaxError: invalid syntax"}, {"nodeid": "training/test_parallel_scanner.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntraining\\test_parallel_scanner.py:14: in <module>\n    from training.optimized_data_scanner import OptimizedDataScanner\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\optimized_data_scanner.py\", line 22\nE       self.data_dir = Path(data_dir)\nE       ^^^^\nE   IndentationError: expected an indented block after function definition on line 21"}, {"nodeid": "training/test_quick_validation.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_quick_validation.py\", line 28\nE       from training.data_manager import DataManager\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 25"}, {"nodeid": "training/test_real_training.py", "outcome": "passed", "result": []}, {"nodeid": "training/test_scanner.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:186: in exec_module\n    exec(co, module.__dict__)\ntraining\\test_scanner.py:14: in <module>\n    from training.optimized_data_scanner import OptimizedDataScanner\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\optimized_data_scanner.py\", line 22\nE       self.data_dir = Path(data_dir)\nE       ^^^^\nE   IndentationError: expected an indented block after function definition on line 21"}, {"nodeid": "training/test_simple_collaborative.py", "outcome": "failed", "result": [], "longrepr": "C:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\python.py:498: in importtestmodule\n    mod = import_path(\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\pathlib.py:587: in import_path\n    importlib.import_module(module_name)\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n<frozen importlib._bootstrap>:1387: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1331: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:935: in _load_unlocked\n    ???\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:177: in exec_module\n    source_stat, co = _rewrite_test(fn, self.config)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py:357: in _rewrite_test\n    tree = ast.parse(source, filename=strfn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\catai\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\ast.py:52: in parse\n    return compile(source, filename, mode, flags,\nE     File \"D:\\Projects\\Unified-AI-Project\\training\\test_simple_collaborative.py\", line 22\nE       from collaborative_training_manager import CollaborativeTrainingManager\nE       ^^^^\nE   IndentationError: expected an indented block after 'try' statement on line 19"}, {"nodeid": "training/training/logs", "outcome": "passed", "result": []}, {"nodeid": "training/training", "outcome": "passed", "result": [{"nodeid": "training/training/logs", "type": "Dir"}]}, {"nodeid": "training/visualizations", "outcome": "passed", "result": []}, {"nodeid": "training", "outcome": "passed", "result": [{"nodeid": "training/adaptive_learning_controller", "type": "Dir"}, {"nodeid": "training/checkpoints", "type": "Dir"}, {"nodeid": "training/comprehensive_system_test.py", "type": "Module"}, {"nodeid": "training/comprehensive_test.py", "type": "Module"}, {"nodeid": "training/configs", "type": "Dir"}, {"nodeid": "training/examples", "type": "Dir"}, {"nodeid": "training/logs", "type": "Dir"}, {"nodeid": "training/models", "type": "Dir"}, {"nodeid": "training/performance_test.py", "type": "Module"}, {"nodeid": "training/quick_hardware_test.py", "type": "Module"}, {"nodeid": "training/quick_test.py", "type": "Module"}, {"nodeid": "training/reports", "type": "Dir"}, {"nodeid": "training/simple_test.py", "type": "Module"}, {"nodeid": "training/states", "type": "Dir"}, {"nodeid": "training/test_auto_training.py", "type": "Module"}, {"nodeid": "training/test_collaborative_training.py", "type": "Module"}, {"nodeid": "training/test_collaborative_training_simple.py", "type": "Module"}, {"nodeid": "training/test_dynamic_loading.py", "type": "Module"}, {"nodeid": "training/test_enhanced_auto_training.py", "type": "Module"}, {"nodeid": "training/test_enhanced_collaborative_training.py", "type": "Module"}, {"nodeid": "training/test_error_handling.py", "type": "Module"}, {"nodeid": "training/test_fault_tolerance.py", "type": "Module"}, {"nodeid": "training/test_hardware_compatibility.py", "type": "Module"}, {"nodeid": "training/test_incremental_learning.py", "type": "Module"}, {"nodeid": "training/test_incremental_learning_comprehensive.py", "type": "Module"}, {"nodeid": "training/test_integrated_graphics_training.py", "type": "Module"}, {"nodeid": "training/test_parallel_scanner.py", "type": "Module"}, {"nodeid": "training/test_quick_validation.py", "type": "Module"}, {"nodeid": "training/test_real_training.py", "type": "Module"}, {"nodeid": "training/test_scanner.py", "type": "Module"}, {"nodeid": "training/test_simple_collaborative.py", "type": "Module"}, {"nodeid": "training/training", "type": "Dir"}, {"nodeid": "training/visualizations", "type": "Dir"}]}, {"nodeid": "unified_auto_fix_system/core", "outcome": "passed", "result": []}, {"nodeid": "unified_auto_fix_system/interfaces", "outcome": "passed", "result": []}, {"nodeid": "unified_auto_fix_system/modules", "outcome": "passed", "result": []}, {"nodeid": "unified_auto_fix_system/tests/test_unified_fix_system.py", "outcome": "failed", "result": [], "longrepr": "unified_auto_fix_system\\tests\\test_unified_fix_system.py:12: in <module>\n    from unified_auto_fix_system.core.unified_fix_engine import UnifiedFixEngine\n<frozen importlib._bootstrap>:1360: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:1322: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:1262: in _find_spec\n    ???\n<frozen importlib._bootstrap_external>:1532: in find_spec\n    ???\n<frozen importlib._bootstrap_external>:1501: in _get_spec\n    ???\n<frozen importlib._bootstrap_external>:1372: in __iter__\n    ???\n<frozen importlib._bootstrap_external>:1359: in _recalculate\n    ???\n<frozen importlib._bootstrap_external>:1355: in _get_parent_path\n    ???\nE   KeyError: 'unified_auto_fix_system'"}, {"nodeid": "unified_auto_fix_system/tests", "outcome": "passed", "result": [{"nodeid": "unified_auto_fix_system/tests/test_unified_fix_system.py", "type": "Module"}]}, {"nodeid": "unified_auto_fix_system/utils", "outcome": "passed", "result": []}, {"nodeid": "unified_auto_fix_system", "outcome": "passed", "result": [{"nodeid": "unified_auto_fix_system/core", "type": "Dir"}, {"nodeid": "unified_auto_fix_system/interfaces", "type": "Dir"}, {"nodeid": "unified_auto_fix_system/modules", "type": "Dir"}, {"nodeid": "unified_auto_fix_system/tests", "type": "Dir"}, {"nodeid": "unified_auto_fix_system/utils", "type": "Dir"}]}, {"nodeid": "unified_fix_backups", "outcome": "passed", "result": []}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "-p", "type": "Dir"}, {"nodeid": "adaptive_learning_controller", "type": "Dir"}, {"nodeid": "apps", "type": "Package"}, {"nodeid": "archived_docs", "type": "Dir"}, {"nodeid": "archived_fix_scripts", "type": "Dir"}, {"nodeid": "archived_systems", "type": "Dir"}, {"nodeid": "auto_fix_system_tests", "type": "Dir"}, {"nodeid": "auto_fix_workspace", "type": "Dir"}, {"nodeid": "automation_reports", "type": "Dir"}, {"nodeid": "backup", "type": "Dir"}, {"nodeid": "backup_before_archive", "type": "Dir"}, {"nodeid": "backup_before_merge", "type": "Dir"}, {"nodeid": "backup_before_refactor", "type": "Dir"}, {"nodeid": "backup_before_script_migration", "type": "Dir"}, {"nodeid": "checkpoints", "type": "Dir"}, {"nodeid": "cli", "type": "Package"}, {"nodeid": "comprehensive_repair_test.py", "type": "Module"}, {"nodeid": "configs", "type": "Dir"}, {"nodeid": "context_storage", "type": "Dir"}, {"nodeid": "data", "type": "Dir"}, {"nodeid": "deployment_reports", "type": "Dir"}, {"nodeid": "docs", "type": "Dir"}, {"nodeid": "enhanced_unified_fix_backups", "type": "Dir"}, {"nodeid": "fixed_scripts_archive", "type": "Dir"}, {"nodeid": "global_system_test.py", "type": "Module"}, {"nodeid": "graphic-launcher", "type": "Dir"}, {"nodeid": "logs", "type": "Dir"}, {"nodeid": "model_cache", "type": "Dir"}, {"nodeid": "packages", "type": "Dir"}, {"nodeid": "performance_benchmark_test.py", "type": "Module"}, {"nodeid": "project_archives", "type": "Dir"}, {"nodeid": "quick_performance_test.py", "type": "Module"}, {"nodeid": "quick_token_test.py", "type": "Module"}, {"nodeid": "real_complete_global_test.py", "type": "Module"}, {"nodeid": "real_system_test.py", "type": "Module"}, {"nodeid": "real_tools_integration_test.py", "type": "Module"}, {"nodeid": "repair_backups", "type": "Dir"}, {"nodeid": "reports", "type": "Dir"}, {"nodeid": "scripts", "type": "Dir"}, {"nodeid": "simple_backend_test.py", "type": "Module"}, {"nodeid": "simplified_tools_integration_test.py", "type": "Module"}, {"nodeid": "src", "type": "Package"}, {"nodeid": "stubs", "type": "Dir"}, {"nodeid": "templates", "type": "Dir"}, {"nodeid": "test_aaa_content.py", "type": "Module"}, {"nodeid": "test_aaa_content_enhanced.py", "type": "Module"}, {"nodeid": "test_aaa_content_enhanced_fixed.py", "type": "Module"}, {"nodeid": "test_aaa_content_real_output.py", "type": "Module"}, {"nodeid": "test_aaa_content_token_based.py", "type": "Module"}, {"nodeid": "test_agi_end_to_end_integration.py", "type": "Module"}, {"nodeid": "test_ai_imports.py", "type": "Module"}, {"nodeid": "test_archived_errors.py", "type": "Module"}, {"nodeid": "test_archived_errors_repair.py", "type": "Module"}, {"nodeid": "test_attention_validation.py", "type": "Module"}, {"nodeid": "test_autonomous_evolution.py", "type": "Module"}, {"nodeid": "test_backend_imports.py", "type": "Module"}, {"nodeid": "test_backend_startup.py", "type": "Module"}, {"nodeid": "test_causal_correctness.py", "type": "Module"}, {"nodeid": "test_causal_fix.py", "type": "Module"}, {"nodeid": "test_combined_token_based.py", "type": "Module"}, {"nodeid": "test_complete_repair_simple.py", "type": "Module"}, {"nodeid": "test_complete_system.py", "type": "Module"}, {"nodeid": "test_complete_system_core.py", "type": "Module"}, {"nodeid": "test_concept_association.py", "type": "Module"}, {"nodeid": "test_core_validation.py", "type": "Module"}, {"nodeid": "test_data", "type": "Dir"}, {"nodeid": "test_data_authenticity.py", "type": "Module"}, {"nodeid": "test_enhanced_repair_systems.py", "type": "Module"}, {"nodeid": "test_evolution_quick.py", "type": "Module"}, {"nodeid": "test_fusion_authenticity.py", "type": "Module"}, {"nodeid": "test_gradient_validation.py", "type": "Module"}, {"nodeid": "test_import.py", "type": "Module"}, {"nodeid": "test_import_simple.py", "type": "Module"}, {"nodeid": "test_integrated_real_ai.py", "type": "Module"}, {"nodeid": "test_intelligent_quick.py", "type": "Module"}, {"nodeid": "test_intelligent_repair.py", "type": "Module"}, {"nodeid": "test_intermediate_reasoning.py", "type": "Module"}, {"nodeid": "test_knowledge_graph_authenticity.py", "type": "Module"}, {"nodeid": "test_level4_plus_components.py", "type": "Module"}, {"nodeid": "test_level5_comprehensive.py", "type": "Module"}, {"nodeid": "test_level5_comprehensive_final.py", "type": "Module"}, {"nodeid": "test_level5_final_comprehensive.py", "type": "Module"}, {"nodeid": "test_level5_simple.py", "type": "Module"}, {"nodeid": "test_lightweight_ai.py", "type": "Module"}, {"nodeid": "test_logic_chain_integrity.py", "type": "Module"}, {"nodeid": "test_metacognitive_final.py", "type": "Module"}, {"nodeid": "test_output_validation.py", "type": "Module"}, {"nodeid": "test_quick_availability.py", "type": "Module"}, {"nodeid": "test_quick_repair.py", "type": "Module"}, {"nodeid": "test_real_ai_quick.py", "type": "Module"}, {"nodeid": "test_real_availability.py", "type": "Module"}, {"nodeid": "test_real_causal_engine.py", "type": "Module"}, {"nodeid": "test_real_repair_functionality.py", "type": "Module"}, {"nodeid": "test_real_training_system.py", "type": "Module"}, {"nodeid": "test_recovery_systems.py", "type": "Module"}, {"nodeid": "test_repair_sample.py", "type": "Module"}, {"nodeid": "test_repair_system.py", "type": "Module"}, {"nodeid": "test_reports", "type": "Dir"}, {"nodeid": "test_results", "type": "Dir"}, {"nodeid": "test_simple.py", "type": "Module"}, {"nodeid": "test_system_availability.py", "type": "Module"}, {"nodeid": "test_system_integration.py", "type": "Module"}, {"nodeid": "test_system_status.py", "type": "Module"}, {"nodeid": "test_token_reasoning_path.py", "type": "Module"}, {"nodeid": "test_token_validation.py", "type": "Module"}, {"nodeid": "test_unified_fix.py", "type": "Module"}, {"nodeid": "test_unified_fix_simple.py", "type": "Module"}, {"nodeid": "test_unified_import.py", "type": "Module"}, {"nodeid": "test_unified_repair.py", "type": "Module"}, {"nodeid": "test_unified_system_simple.py", "type": "Module"}, {"nodeid": "tests", "type": "Package"}, {"nodeid": "tools", "type": "Dir"}, {"nodeid": "training", "type": "Package"}, {"nodeid": "unified_auto_fix_system", "type": "Package"}, {"nodeid": "unified_fix_backups", "type": "Dir"}]}], "tests": [], "warnings": [{"message": "invalid escape sequence '\\d'", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 610}, {"message": "invalid escape sequence '\\s'", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 16}, {"message": "invalid escape sequence '\\['", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 39}, {"message": "invalid escape sequence '\\('", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 97}, {"message": "invalid escape sequence '\\['", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 39}, {"message": "invalid escape sequence '\\('", "category": "SyntaxWarning", "when": "collect", "filename": "<unknown>", "lineno": 97}, {"message": "aiofiles\u672a\u5b89\u88c5\uff0c\u6587\u4ef6\u64cd\u4f5c\u5c06\u4f7f\u7528\u540c\u6b65\u6a21\u5f0f", "category": "UserWarning", "when": "collect", "filename": "D:\\Projects\\Unified-AI-Project\\unified_scheduler_framework.py", "lineno": 26}, {"message": "cannot collect test class 'TestResultTracker' because it has a __init__ constructor (from: test_aaa_content_enhanced.py)", "category": "PytestCollectionWarning", "when": "collect", "filename": "D:\\Projects\\Unified-AI-Project\\test_aaa_content_enhanced.py", "lineno": 22}]}